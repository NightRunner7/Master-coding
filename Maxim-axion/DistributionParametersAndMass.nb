(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    491851,       9827]
NotebookOptionsPosition[    480132,       9646]
NotebookOutlinePosition[    480609,       9664]
CellTagsIndexPosition[    480566,       9661]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"b202fac7-5a64-4dd4-be8c-e86f4480827f"],

Cell[CellGroupData[{

Cell["Set Notebook Directory.", "Section",
 CellChangeTimes->{3.9247935352151103`*^9, 
  3.924797690715173*^9},ExpressionUUID->"e545755f-2680-45e2-937b-\
6e3ec580fc4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"a60684c3-e5fb-4e4a-88cc-9e69f1c50def"],

Cell[BoxData["\<\"C:\\\\Users\\\\Krzysztof\\\\Desktop\\\\Magisterka\\\\Praca-\
magisterska\\\\Code\\\\Maxim-axion\"\>"], "Output",
 CellChangeTimes->{{3.92479529145006*^9, 3.9247953196349373`*^9}, 
   3.924795359870674*^9, 3.9247960156208677`*^9, 3.924796074088925*^9, 
   3.92479621024438*^9, 3.924800348494885*^9, 3.9254215992510777`*^9, 
   3.9254231736089735`*^9, 3.925423295786931*^9, 3.9254484683047523`*^9, 
   3.9266375805346746`*^9, 3.929553650102307*^9, 3.9348687083515463`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"970cca91-49a3-4366-9282-5fe23b37ee0f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialise all necessary lists.", "Section",
 CellChangeTimes->{{3.924794196511726*^9, 3.9247942205178676`*^9}, 
   3.924797689722149*^9},ExpressionUUID->"79fc1f3a-42ef-4725-9eae-\
9c43c171939b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValuesList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"comoving", " ", "momentum", " ", "list"}], "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maValuesList", "=", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Initialize", " ", 
     RowBox[{"list", ":", " ", 
      RowBox[{"mass", " ", "of", " ", "axion"}]}]}], ",", " ", 
    RowBox[{"[", "eV", "]"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"faValuesList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Initialize", " ", 
     RowBox[{"list", ":", " ", 
      RowBox[{
      "scale", " ", "of", " ", "spontaneous", " ", "breaking", " ", "of", " ",
        "the", " ", "PQ", " ", "symmetry"}]}]}], ",", " ", 
    RowBox[{"[", "GeV", "]"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AparameterList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Initialize", " ", 
     RowBox[{"list", ":", " ", 
      RowBox[{"one", " ", "of", " ", "the", " ", "parameter"}]}]}], ",", " ", 
    RowBox[{"which", " ", "we", " ", "need", " ", "to", " ", "fit"}]}], 
   "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bparameterList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Initialize", " ", 
     RowBox[{"list", ":", " ", 
      RowBox[{"one", " ", "of", " ", "the", " ", "parameter"}]}]}], ",", " ", 
    RowBox[{"which", " ", "we", " ", "need", " ", "to", " ", "fit"}]}], 
   "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]parameterList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Initialize", " ", 
     RowBox[{"list", ":", " ", 
      RowBox[{
      "one", " ", "of", " ", "the", " ", "parameter", " ", "which"}]}]}], ",",
     " ", 
    RowBox[{"we", " ", "need", " ", "to", " ", "fit"}]}], "*)"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9247942772599316`*^9, 3.9247943148182306`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9a5ff9a2-df74-462d-bb0d-b1293771c2d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Read data from file.", "Section",
 CellChangeTimes->{{3.9247935698277893`*^9, 3.9247935828281536`*^9}, 
   3.924797688508711*^9},ExpressionUUID->"1bd9d1a5-6753-42fc-ae5f-\
8ce6fd33a62f"],

Cell["\<\
We have two file, which contain all the necessary information that we need: \
`q.csv` - contains values of the q=p/T, comoving momentum of our interest. \
The range of comoving momentum of our interest is in range [0, 20]. The \
second file contains the value of the: `f(q) * q^2`, where `f(q)` is function \
distribution of axion particles. We have those function distribution for \
specific values od the parameter `f_a` of that axions. That range, which has \
been mentioned is f_a = [1, 100]*10^7 GeV.\
\>", "Text",
 CellChangeTimes->{{3.9247935946441193`*^9, 3.9247937385475545`*^9}, {
  3.92479384733143*^9, 
  3.9247941695286465`*^9}},ExpressionUUID->"ab4f72ee-db69-4cee-9ceb-\
c4ad11b3367c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "1"}], ":", 
     RowBox[{"Import", " ", "the", " ", "CSV", " ", "file"}]}], ",", " ", 
    RowBox[{"`q", ".", 
     RowBox[{"csv`", "**", "**", "**"}]}]}], "****)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<q.csv\>\"", ",", "\"\<CSV\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qValuesList", " ", "=", " ", 
     RowBox[{"data", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "2"}], ":", 
      RowBox[{"Import", " ", "the", " ", "CSV", " ", "file"}]}], ",", " ", 
     RowBox[{"`Distributions", ".", 
      RowBox[{"csv`", " ", "**", "**", "**"}]}]}], "****)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<Distributions.csv\>\"", ",", "\"\<CSV\>\""}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "fa"}], " ", "list"}], " ", "***)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"faValuesList", "=", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", ";;"}], ",", "1"}], "]"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Skip", " ", "the", " ", "header", " ", "row", " ", "and", " ", "extract",
      " ", "the", " ", "first", " ", "element", " ", "from", " ", "each", " ",
      "subsequent", " ", 
     RowBox[{"row", ":", " ", 
      RowBox[{"there", " ", "will", " ", "be", " ", "fa", " ", "value"}]}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "distribution"}], " ", "list"}], " ", "***)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Separate", " ", "header", " ", "and", " ", "data"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"header", "=", 
     RowBox[{"data", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "                 ", 
   RowBox[{"(*", 
    RowBox[{"Extract", " ", "the", " ", "header", " ", "row"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataWithoutHeader", "=", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{
    "Extract", " ", "the", " ", "data", " ", "without", " ", "the", " ", 
     "header", " ", "row"}], "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Skip", " ", "the", " ", "first", " ", "element", " ", "in", " ", "each", 
     " ", "data", " ", "row"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distributionsQPow2", "=", 
     RowBox[{"Rest", "/@", "dataWithoutHeader"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Output", " ", "the", " ", "processed", " ", "data", " ", "without", " ",
       "header"}], ",", " ", 
     RowBox[{"`f", 
      RowBox[{"(", "q", ")"}], " ", "*", " ", 
      RowBox[{"q", "^", "2`"}]}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Here", " ", "we", " ", "have", " ", "to", " ", "divide", " ", "each", 
      " ", "elelemt", " ", "by", " ", 
      RowBox[{"q", "^", "2"}]}], ",", " ", 
     RowBox[{"`f", 
      RowBox[{"(", "q", ")"}], "`"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distributions", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{"Times", ",", 
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"qValuesList", "^", 
             RowBox[{"-", "2"}]}]}], "}"}]}], "]"}], "&"}], ",", 
       "distributionsQPow2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"f", 
     RowBox[{"(", "q", ")"}], " ", "*", " ", 
     RowBox[{"q", "^", "3"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distributionsQPow3", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{"Times", ",", 
          RowBox[{"{", 
           RowBox[{"#", ",", "qValuesList"}], "}"}]}], "]"}], "&"}], ",", 
       "distributionsQPow2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "3"}], ":", 
     " ", 
     RowBox[{"find", " ", "mass", " ", "list"}]}], " ", "**********)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maValuesList", "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "faValuesList", "]"}], "!=", "0"}], ",", 
       RowBox[{"5.69151", "*", 
        RowBox[{
         RowBox[{"10", "^", "6"}], "/", "faValuesList"}]}], ",", 
       RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "4"}], ":", 
     " ", 
     RowBox[{"sety", " ", "some", " ", "constants"}]}], " ", "**********)"}], 
   "\n", 
   RowBox[{
    RowBox[{"NumberOfDistributions", " ", "=", " ", 
     RowBox[{"Length", "[", "faValuesList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "5"}], ":", 
      " ", 
      RowBox[{"Check", " ", "List"}]}], ",", " ", 
     RowBox[{"sanity", " ", "checks"}]}], " ", "**********)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<qValuesList\>\"", ",", " ", "qValuesList", ",", " ", 
       "\"\<len(qValuesList)=\>\"", ",", " ", 
       RowBox[{"Length", "[", "qValuesList", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<faValuesList\>\"", ",", " ", "faValuesList", ",", " ", 
       "\"\<len(faValuesList)=\>\"", ",", " ", 
       RowBox[{"Length", "[", "faValuesList", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<maValuesList\>\"", ",", " ", "maValuesList", ",", " ", 
       "\"\<len(maValuesList)=\>\"", ",", " ", 
       RowBox[{"Length", "[", "maValuesList", "]"}]}], "]"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<len(distributionsQPow3)\>\"", ",", 
      RowBox[{"Length", "[", "distributionsQPow3", "]"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<qValuesList\>\"", ",", " ", "qValuesList", ",", " ", 
     "\"\<len(qValuesList)=\>\"", ",", " ", 
     RowBox[{"Length", "[", "qValuesList", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<maValuesList\>\"", ",", " ", "maValuesList", ",", " ", 
     "\"\<len(maValuesList)=\>\"", ",", " ", 
     RowBox[{"Length", "[", "maValuesList", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<faValuesList\>\"", ",", " ", "faValuesList", ",", " ", 
     "\"\<len(faValuesList)=\>\"", ",", " ", 
     RowBox[{"Length", "[", "faValuesList", "]"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<distributionsQPow3\>\"", ",", " ", "distributionsQPow3", ",", " ", 
      "\"\<len(distributionsQPow3)\>\"", ",", " ", "distributionsQPow3"}], 
     "]"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQnbRHtv6z7VvHGz5Hm0B0csy0DhBtkb2+B0SHTWyc
CKJDV3eCaacXiVNBdBL/WjC9pfjOPBA9R0J8MYjetubzMhC9bEfQOhCte1V3
M4i+csEeTPck224H0VzirmD63QaWsyC61mrSFRCtt7P8CYj+tK/vE4hesOet
0Bcgfc9ijxSInnW3SRlErzCeCqYTyo+7gegOBTd3EG1yq8AHRCft/gOm2/5M
CgLReo9ugmm5rDmJIFpN9SGYrr3imAFWZ9dcCaIn/OS4BKL3rdh6E2zOr5x7
YD5bEZjmeyvzAkTbfet9B6I3cErP0wp861h2Z+cyEB1zqWgPiPYxunEQRAMA
TF3D0A==
  "],
 CellLabel->"In[35]:=",ExpressionUUID->"c125ebb4-5cba-4538-bbe9-0a7503af0d46"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"qValuesList\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0001`", ",", "0.100602010050251`", ",", "0.201104020100503`", ",", 
     "0.301606030150754`", ",", "0.402108040201005`", ",", 
     "0.502610050251256`", ",", "0.603112060301508`", ",", 
     "0.703614070351759`", ",", "0.80411608040201`", ",", 
     "0.904618090452261`", ",", "1.00512010050251`", ",", "1.10562211055276`",
      ",", "1.20612412060302`", ",", "1.30662613065327`", ",", 
     "1.40712814070352`", ",", "1.50763015075377`", ",", "1.60813216080402`", 
     ",", "1.70863417085427`", ",", "1.80913618090452`", ",", 
     "1.90963819095477`", ",", "2.01014020100503`", ",", "2.11064221105528`", 
     ",", "2.21114422110553`", ",", "2.31164623115578`", ",", 
     "2.41214824120603`", ",", "2.51265025125628`", ",", "2.61315226130653`", 
     ",", "2.71365427135678`", ",", "2.81415628140704`", ",", 
     "2.91465829145729`", ",", "3.01516030150754`", ",", "3.11566231155779`", 
     ",", "3.21616432160804`", ",", "3.31666633165829`", ",", 
     "3.41716834170854`", ",", "3.51767035175879`", ",", "3.61817236180905`", 
     ",", "3.7186743718593`", ",", "3.81917638190955`", ",", 
     "3.9196783919598`", ",", "4.02018040201005`", ",", "4.1206824120603`", 
     ",", "4.22118442211055`", ",", "4.3216864321608`", ",", 
     "4.42218844221105`", ",", "4.52269045226131`", ",", "4.62319246231156`", 
     ",", "4.72369447236181`", ",", "4.82419648241206`", ",", 
     "4.92469849246231`", ",", "5.02520050251256`", ",", "5.12570251256281`", 
     ",", "5.22620452261306`", ",", "5.32670653266332`", ",", 
     "5.42720854271357`", ",", "5.52771055276382`", ",", "5.62821256281407`", 
     ",", "5.72871457286432`", ",", "5.82921658291457`", ",", 
     "5.92971859296482`", ",", "6.03022060301508`", ",", "6.13072261306533`", 
     ",", "6.23122462311558`", ",", "6.33172663316583`", ",", 
     "6.43222864321608`", ",", "6.53273065326633`", ",", "6.63323266331658`", 
     ",", "6.73373467336683`", ",", "6.83423668341709`", ",", 
     "6.93473869346734`", ",", "7.03524070351759`", ",", "7.13574271356784`", 
     ",", "7.23624472361809`", ",", "7.33674673366834`", ",", 
     "7.43724874371859`", ",", "7.53775075376884`", ",", "7.6382527638191`", 
     ",", "7.73875477386935`", ",", "7.8392567839196`", ",", 
     "7.93975879396985`", ",", "8.0402608040201`", ",", "8.14076281407035`", 
     ",", "8.2412648241206`", ",", "8.34176683417085`", ",", 
     "8.44226884422111`", ",", "8.54277085427136`", ",", "8.64327286432161`", 
     ",", "8.74377487437186`", ",", "8.84427688442211`", ",", 
     "8.94477889447236`", ",", "9.04528090452261`", ",", "9.14578291457286`", 
     ",", "9.24628492462312`", ",", "9.34678693467337`", ",", 
     "9.44728894472362`", ",", "9.54779095477387`", ",", "9.64829296482412`", 
     ",", "9.74879497487437`", ",", "9.84929698492462`", ",", 
     "9.94979899497487`", ",", "10.0503010050251`", ",", "10.1508030150754`", 
     ",", "10.2513050251256`", ",", "10.3518070351759`", ",", 
     "10.4523090452261`", ",", "10.5528110552764`", ",", "10.6533130653266`", 
     ",", "10.7538150753769`", ",", "10.8543170854271`", ",", 
     "10.9548190954774`", ",", "11.0553211055276`", ",", "11.1558231155779`", 
     ",", "11.2563251256281`", ",", "11.3568271356784`", ",", 
     "11.4573291457286`", ",", "11.5578311557789`", ",", "11.6583331658291`", 
     ",", "11.7588351758794`", ",", "11.8593371859296`", ",", 
     "11.9598391959799`", ",", "12.0603412060302`", ",", "12.1608432160804`", 
     ",", "12.2613452261307`", ",", "12.3618472361809`", ",", 
     "12.4623492462312`", ",", "12.5628512562814`", ",", "12.6633532663317`", 
     ",", "12.7638552763819`", ",", "12.8643572864322`", ",", 
     "12.9648592964824`", ",", "13.0653613065327`", ",", "13.1658633165829`", 
     ",", "13.2663653266332`", ",", "13.3668673366834`", ",", 
     "13.4673693467337`", ",", "13.5678713567839`", ",", "13.6683733668342`", 
     ",", "13.7688753768844`", ",", "13.8693773869347`", ",", 
     "13.9698793969849`", ",", "14.0703814070352`", ",", "14.1708834170854`", 
     ",", "14.2713854271357`", ",", "14.3718874371859`", ",", 
     "14.4723894472362`", ",", "14.5728914572864`", ",", "14.6733934673367`", 
     ",", "14.7738954773869`", ",", "14.8743974874372`", ",", 
     "14.9748994974874`", ",", "15.0754015075377`", ",", "15.1759035175879`", 
     ",", "15.2764055276382`", ",", "15.3769075376884`", ",", 
     "15.4774095477387`", ",", "15.5779115577889`", ",", "15.6784135678392`", 
     ",", "15.7789155778894`", ",", "15.8794175879397`", ",", 
     "15.9799195979899`", ",", "16.0804216080402`", ",", "16.1809236180905`", 
     ",", "16.2814256281407`", ",", "16.381927638191`", ",", 
     "16.4824296482412`", ",", "16.5829316582915`", ",", "16.6834336683417`", 
     ",", "16.783935678392`", ",", "16.8844376884422`", ",", 
     "16.9849396984925`", ",", "17.0854417085427`", ",", "17.185943718593`", 
     ",", "17.2864457286432`", ",", "17.3869477386935`", ",", 
     "17.4874497487437`", ",", "17.587951758794`", ",", "17.6884537688442`", 
     ",", "17.7889557788945`", ",", "17.8894577889447`", ",", 
     "17.989959798995`", ",", "18.0904618090452`", ",", "18.1909638190955`", 
     ",", "18.2914658291457`", ",", "18.391967839196`", ",", 
     "18.4924698492462`", ",", "18.5929718592965`", ",", "18.6934738693467`", 
     ",", "18.793975879397`", ",", "18.8944778894472`", ",", 
     "18.9949798994975`", ",", "19.0954819095477`", ",", "19.195983919598`", 
     ",", "19.2964859296482`", ",", "19.3969879396985`", ",", 
     "19.4974899497487`", ",", "19.597991959799`", ",", "19.6984939698492`", 
     ",", "19.7989959798995`", ",", "19.8994979899497`", ",", "20"}], "}"}], 
   "\[InvisibleSpace]", "\<\"len(qValuesList)=\"\>", "\[InvisibleSpace]", 
   "200"}],
  SequenceForm[
  "qValuesList", {
   0.0001, 0.100602010050251, 0.201104020100503, 0.301606030150754, 
    0.402108040201005, 0.502610050251256, 0.603112060301508, 
    0.703614070351759, 0.80411608040201, 0.904618090452261, 1.00512010050251, 
    1.10562211055276, 1.20612412060302, 1.30662613065327, 1.40712814070352, 
    1.50763015075377, 1.60813216080402, 1.70863417085427, 1.80913618090452, 
    1.90963819095477, 2.01014020100503, 2.11064221105528, 2.21114422110553, 
    2.31164623115578, 2.41214824120603, 2.51265025125628, 2.61315226130653, 
    2.71365427135678, 2.81415628140704, 2.91465829145729, 3.01516030150754, 
    3.11566231155779, 3.21616432160804, 3.31666633165829, 3.41716834170854, 
    3.51767035175879, 3.61817236180905, 3.7186743718593, 3.81917638190955, 
    3.9196783919598, 4.02018040201005, 4.1206824120603, 4.22118442211055, 
    4.3216864321608, 4.42218844221105, 4.52269045226131, 4.62319246231156, 
    4.72369447236181, 4.82419648241206, 4.92469849246231, 5.02520050251256, 
    5.12570251256281, 5.22620452261306, 5.32670653266332, 5.42720854271357, 
    5.52771055276382, 5.62821256281407, 5.72871457286432, 5.82921658291457, 
    5.92971859296482, 6.03022060301508, 6.13072261306533, 6.23122462311558, 
    6.33172663316583, 6.43222864321608, 6.53273065326633, 6.63323266331658, 
    6.73373467336683, 6.83423668341709, 6.93473869346734, 7.03524070351759, 
    7.13574271356784, 7.23624472361809, 7.33674673366834, 7.43724874371859, 
    7.53775075376884, 7.6382527638191, 7.73875477386935, 7.8392567839196, 
    7.93975879396985, 8.0402608040201, 8.14076281407035, 8.2412648241206, 
    8.34176683417085, 8.44226884422111, 8.54277085427136, 8.64327286432161, 
    8.74377487437186, 8.84427688442211, 8.94477889447236, 9.04528090452261, 
    9.14578291457286, 9.24628492462312, 9.34678693467337, 9.44728894472362, 
    9.54779095477387, 9.64829296482412, 9.74879497487437, 9.84929698492462, 
    9.94979899497487, 10.0503010050251, 10.1508030150754, 10.2513050251256, 
    10.3518070351759, 10.4523090452261, 10.5528110552764, 10.6533130653266, 
    10.7538150753769, 10.8543170854271, 10.9548190954774, 11.0553211055276, 
    11.1558231155779, 11.2563251256281, 11.3568271356784, 11.4573291457286, 
    11.5578311557789, 11.6583331658291, 11.7588351758794, 11.8593371859296, 
    11.9598391959799, 12.0603412060302, 12.1608432160804, 12.2613452261307, 
    12.3618472361809, 12.4623492462312, 12.5628512562814, 12.6633532663317, 
    12.7638552763819, 12.8643572864322, 12.9648592964824, 13.0653613065327, 
    13.1658633165829, 13.2663653266332, 13.3668673366834, 13.4673693467337, 
    13.5678713567839, 13.6683733668342, 13.7688753768844, 13.8693773869347, 
    13.9698793969849, 14.0703814070352, 14.1708834170854, 14.2713854271357, 
    14.3718874371859, 14.4723894472362, 14.5728914572864, 14.6733934673367, 
    14.7738954773869, 14.8743974874372, 14.9748994974874, 15.0754015075377, 
    15.1759035175879, 15.2764055276382, 15.3769075376884, 15.4774095477387, 
    15.5779115577889, 15.6784135678392, 15.7789155778894, 15.8794175879397, 
    15.9799195979899, 16.0804216080402, 16.1809236180905, 16.2814256281407, 
    16.381927638191, 16.4824296482412, 16.5829316582915, 16.6834336683417, 
    16.783935678392, 16.8844376884422, 16.9849396984925, 17.0854417085427, 
    17.185943718593, 17.2864457286432, 17.3869477386935, 17.4874497487437, 
    17.587951758794, 17.6884537688442, 17.7889557788945, 17.8894577889447, 
    17.989959798995, 18.0904618090452, 18.1909638190955, 18.2914658291457, 
    18.391967839196, 18.4924698492462, 18.5929718592965, 18.6934738693467, 
    18.793975879397, 18.8944778894472, 18.9949798994975, 19.0954819095477, 
    19.195983919598, 19.2964859296482, 19.3969879396985, 19.4974899497487, 
    19.597991959799, 19.6984939698492, 19.7989959798995, 19.8994979899497, 
    20}, "len(qValuesList)=", 200],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.92479713618762*^9, 3.9247971732556896`*^9, 3.9247973097769527`*^9, 
   3.924800356315308*^9, 3.9254216046735015`*^9, 3.9254231832430344`*^9, 
   3.925423304175123*^9, 3.925448483182951*^9, 3.9266376005150166`*^9, 
   3.9295536559533644`*^9, 3.9348687913844967`*^9, {3.9348689831504354`*^9, 
   3.9348690088388023`*^9}},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"351c4aed-b7ab-4bea-8336-496cb0a8ca7a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"maValuesList\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.5691510000000001`", ",", "0.379434`", ",", "0.28457550000000004`", ",",
      "0.2276604`", ",", "0.189717`", ",", "0.16261457142857141`", ",", 
     "0.14228775000000002`", ",", "0.126478`", ",", "0.1138302`", ",", 
     "0.10348199999999999`", ",", "0.0948585`", ",", "0.08756169230769231`", 
     ",", "0.08130728571428571`", ",", "0.0758868`", ",", 
     "0.07114387500000001`", ",", "0.06695894117647058`", ",", "0.063239`", 
     ",", "0.05991063157894737`", ",", "0.0569151`", ",", 
     "0.05420485714285715`", ",", "0.051740999999999995`", ",", 
     "0.04949139130434783`", ",", "0.04742925`", ",", "0.04553208`", ",", 
     "0.043780846153846156`", ",", "0.04215933333333333`", ",", 
     "0.040653642857142853`", ",", "0.03925179310344828`", ",", "0.0379434`", 
     ",", "0.03671941935483871`", ",", "0.035571937500000005`", ",", 
     "0.034494000000000004`", ",", "0.03347947058823529`", ",", 
     "0.032522914285714286`", ",", "0.0316195`", ",", "0.030764918918918922`",
      ",", "0.029955315789473684`", ",", "0.02918723076923077`", ",", 
     "0.02845755`", ",", "0.027763463414634145`", ",", 
     "0.027102428571428576`", ",", "0.02647213953488372`", ",", 
     "0.025870499999999998`", ",", "0.0252956`", ",", "0.024745695652173914`",
      ",", "0.0242191914893617`", ",", "0.023714625`", ",", 
     "0.02323065306122449`", ",", "0.02276604`", ",", "0.02231964705882353`", 
     ",", "0.021890423076923078`", ",", "0.021477396226415094`", ",", 
     "0.021079666666666667`", ",", "0.0206964`", ",", "0.020326821428571427`",
      ",", "0.01997021052631579`", ",", "0.01962589655172414`", ",", 
     "0.019293254237288136`", ",", "0.0189717`", ",", "0.018660688524590165`",
      ",", "0.018359709677419355`", ",", "0.018068285714285714`", ",", 
     "0.017785968750000002`", ",", "0.017512338461538463`", ",", 
     "0.017247000000000002`", ",", "0.01698958208955224`", ",", 
     "0.016739735294117646`", ",", "0.016497130434782608`", ",", 
     "0.016261457142857143`", ",", "0.01603242253521127`", ",", "0.01580975`",
      ",", "0.01559317808219178`", ",", "0.015382459459459461`", ",", 
     "0.015177359999999999`", ",", "0.014977657894736842`", ",", 
     "0.014783142857142858`", ",", "0.014593615384615385`", ",", 
     "0.014408886075949368`", ",", "0.014228775`", ",", 
     "0.014053111111111112`", ",", "0.013881731707317073`", ",", 
     "0.013714481927710844`", ",", "0.013551214285714288`", ",", 
     "0.013391788235294117`", ",", "0.01323606976744186`", ",", 
     "0.013083931034482759`", ",", "0.012935249999999999`", ",", 
     "0.012789910112359552`", ",", "0.0126478`", ",", "0.012508813186813187`",
      ",", "0.012372847826086957`", ",", "0.012239806451612904`", ",", 
     "0.01210959574468085`", ",", "0.011982126315789474`", ",", 
     "0.0118573125`", ",", "0.011735072164948453`", ",", 
     "0.011615326530612246`", ",", "0.011498`", ",", "0.01138302`", ",", 
     "0.01127031683168317`", ",", "0.011159823529411765`", ",", 
     "0.01105147572815534`", ",", "0.010945211538461539`", ",", 
     "0.010840971428571428`", ",", "0.010738698113207547`", ",", 
     "0.01063833644859813`", ",", "0.010539833333333333`", ",", 
     "0.0104431376146789`", ",", "0.0103482`", ",", "0.010254972972972974`", 
     ",", "0.010163410714285713`", ",", "0.010073469026548673`", ",", 
     "0.009985105263157896`", ",", "0.009898278260869565`", ",", 
     "0.00981294827586207`", ",", "0.009729076923076924`", ",", 
     "0.009646627118644068`", ",", "0.009565563025210085`", ",", 
     "0.00948585`", ",", "0.009407454545454545`", ",", 
     "0.009330344262295082`", ",", "0.009254487804878048`", ",", 
     "0.009179854838709678`", ",", "0.009106416`", ",", 
     "0.009034142857142857`", ",", "0.008963007874015747`", ",", 
     "0.008892984375000001`", ",", "0.008824046511627907`", ",", 
     "0.008756169230769231`", ",", "0.008689328244274808`", ",", 
     "0.008623500000000001`", ",", "0.008558661654135338`", ",", 
     "0.00849479104477612`", ",", "0.008431866666666666`", ",", 
     "0.008369867647058823`", ",", "0.008308773722627737`", ",", 
     "0.008248565217391304`", ",", "0.008189223021582735`", ",", 
     "0.008130728571428571`", ",", "0.008073063829787234`", ",", 
     "0.008016211267605634`", ",", "0.007960153846153846`", ",", 
     "0.007904875`", ",", "0.007850358620689654`", ",", 
     "0.00779658904109589`", ",", "0.0077435510204081626`", ",", 
     "0.007691229729729731`", ",", "0.007639610738255033`", ",", 
     "0.0075886799999999996`", ",", "0.007538423841059603`", ",", 
     "0.007488828947368421`", ",", "0.007439882352941176`", ",", 
     "0.007391571428571429`", ",", "0.007343883870967742`", ",", 
     "0.007296807692307693`", ",", "0.007250331210191083`", ",", 
     "0.007204443037974684`", ",", "0.007159132075471698`", ",", 
     "0.0071143875`", ",", "0.0070701987577639755`", ",", 
     "0.007026555555555556`", ",", "0.006983447852760736`", ",", 
     "0.006940865853658536`", ",", "0.0068988`", ",", "0.006857240963855422`",
      ",", "0.006816179640718563`", ",", "0.006775607142857144`", ",", 
     "0.006735514792899408`", ",", "0.006695894117647059`", ",", 
     "0.006656736842105263`", ",", "0.00661803488372093`", ",", 
     "0.006579780346820809`", ",", "0.006541965517241379`", ",", 
     "0.006504582857142858`", ",", "0.006467624999999999`", ",", 
     "0.006431084745762712`", ",", "0.006394955056179776`", ",", 
     "0.006359229050279329`", ",", "0.0063239`", ",", "0.006288961325966852`",
      ",", "0.0062544065934065935`", ",", "0.0062202295081967215`", ",", 
     "0.006186423913043478`", ",", "0.006152983783783784`", ",", 
     "0.006119903225806452`", ",", "0.006087176470588236`", ",", 
     "0.006054797872340425`", ",", "0.006022761904761905`", ",", 
     "0.005991063157894737`", ",", "0.005959696335078535`", ",", 
     "0.00592865625`", ",", "0.005897937823834197`", ",", 
     "0.005867536082474227`", ",", "0.005837446153846154`", ",", 
     "0.005807663265306123`", ",", "0.005778182741116752`", ",", "0.005749`", 
     ",", "0.0057201105527638196`", ",", "0.00569151`"}], "}"}], 
   "\[InvisibleSpace]", "\<\"len(maValuesList)=\"\>", "\[InvisibleSpace]", 
   "199"}],
  SequenceForm["maValuesList", CompressedData["
1:eJwtk3tQlGUYxRHJMLIJ8UJhpUIjiXIRWY0Rz1BoxIgGNUhiY3kdMNyJsL2z
N/bCsgsssMICclFYWUxNJNDSBAyIi0XGGMJQBFhiCk0Yk0JOzXT++P74vu99
n+c85/yeFXuF8QfmuLi4dPz3/GAS+ssFI7i2D9k10f34//0G4jy3DTz0vc7v
3+DVa563Lb1f838r1t7v230kuJnnruD5zEtD3YoveP4i4hf0f/hRSiPvNUDQ
uG5TXOoF3q/H5ucM5Rv9zrPOZ/h2vFJQ+ulZ1juD7W6pIVeaT7NuHbJGAvST
CU7Wr0X6qfmLZ3acYh8HrNZ22R1bDftVI8j+fsV33tXsexJetdrXRntOsP8J
XHH9vmCds4o6qhBYln73R0cl9VSi/qqs9aaqgrrK4X3o6K+Ro8ep7ziCbuco
5h0po85S6AfCBVqfUuotQXT0xKMlv9mp2465ZkPq3Z5i6i/GQ5vjcntnEeco
gnNFg//0wDHOcwy/BNqcAY9tnMuGc8mFY8IQG+crhGnrYb+FHxdyzkK0vzyx
p6ylgPMWIGbP5dJOnwLOnY/QxKnlGap8zp+P2qeGfVsmrPTBihnPLkvTASv9
sCLpXsfZirE8+pKHB4ZB5/WUPPqTh8Te8Mm3JnPpUy4ms5raty/OpV85OO/W
11+xNYe+WdCc9tXUIY2F/lmwtNW9ZrjDTB/NmDGOliQsMdPPbBQleexflZpN
X7Mx/kmA8mq3if6asONx2JniEBN9zoKmar98Y3kW/c6CMGzX3CDPLPpuRL8h
tm2xyUj/jfgpLO5SjruRORgwk9gifN1sYB4GDEc448YWGZiLHpsM9ulVJ/TM
R4+I3j8sXaF65qRDZIrHu5ZOHfPSYZcwcL1gn4656dCjjF+T66Jjfpk4PBC2
/GBVJnPMRN/2hMPmLZnMMxPPlpy037ynZa5aWE2jK5cVaZmvFrOuY2s2RGmZ
sxZdxQ1vuz3QMG8N3rsXLtrr0DB3DRZWmizrkjTMX4NzVrlk50INOVDjka/n
7c+71eRBDfcPNry03qAmF2oMDJTPXopSkw815jVGfRnspiYnKvyZdvSOpk1F
XlRwdX/izTKjityo4Deou5YcqyI/KiS+EbvtlpeKHClRmRbquNCkJE9KuMYe
3N8YoyRXSowVtkWUDWeQrwwINFsE0ZIMcpYBneNGb/miDPKmQETc/WldvYLc
KaDevGxkLF5B/hQIsi14svovOTmUI3tzpOuZEjl5lKNwg4/+bqScXMohO4uY
6N9l5FOGiJIXZuuPycipDE3uucHeUTLyKsO4U5xwcEpKbqVYuvadOnO1lPxK
4T6Uv1q2U0qOpaiwdphXPi0lzxK0ZxtD01sl5FqCi6/M+O2VSsi3BEn22Tk/
h0rIuQRVHYP/DE2IybsYk132m/GnxeReDJf7jushyWLyL4ZHjFeV0F/MPRBj
+OJq3ZxxEfdBhPm7018cqhNxL0QIvPWM/O9UEfdDhH8Bqoz2Nw==
   "], "len(maValuesList)=", 199],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.92479713618762*^9, 3.9247971732556896`*^9, 3.9247973097769527`*^9, 
   3.924800356315308*^9, 3.9254216046735015`*^9, 3.9254231832430344`*^9, 
   3.925423304175123*^9, 3.925448483182951*^9, 3.9266376005150166`*^9, 
   3.9295536559533644`*^9, 3.9348687913844967`*^9, {3.9348689831504354`*^9, 
   3.9348690088478017`*^9}},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"3554e28b-e10d-4c41-abfa-718a0096eb6f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"faValuesList\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "10000000", ",", "15000000", ",", "20000000", ",", "25000000", ",", 
     "30000000", ",", "35000000", ",", "40000000", ",", "45000000", ",", 
     "50000000", ",", "55000000", ",", "60000000", ",", "65000000", ",", 
     "70000000", ",", "75000000", ",", "80000000", ",", "85000000", ",", 
     "90000000", ",", "95000000", ",", "100000000", ",", "105000000", ",", 
     "110000000", ",", "115000000", ",", "120000000", ",", "125000000", ",", 
     "130000000", ",", "135000000", ",", "140000000", ",", "145000000", ",", 
     "150000000", ",", "155000000", ",", "160000000", ",", "165000000", ",", 
     "170000000", ",", "175000000", ",", "180000000", ",", "185000000", ",", 
     "190000000", ",", "195000000", ",", "200000000", ",", "205000000", ",", 
     "210000000", ",", "215000000", ",", "220000000", ",", "225000000", ",", 
     "230000000", ",", "235000000", ",", "240000000", ",", "245000000", ",", 
     "250000000", ",", "255000000", ",", "260000000", ",", "265000000", ",", 
     "270000000", ",", "275000000", ",", "280000000", ",", "285000000", ",", 
     "290000000", ",", "295000000", ",", "300000000", ",", "305000000", ",", 
     "310000000", ",", "315000000", ",", "320000000", ",", "325000000", ",", 
     "330000000", ",", "335000000", ",", "340000000", ",", "345000000", ",", 
     "350000000", ",", "355000000", ",", "360000000", ",", "365000000", ",", 
     "370000000", ",", "375000000", ",", "380000000", ",", "385000000", ",", 
     "390000000", ",", "395000000", ",", "400000000", ",", "405000000", ",", 
     "410000000", ",", "415000000", ",", "420000000", ",", "425000000", ",", 
     "430000000", ",", "435000000", ",", "440000000", ",", "445000000", ",", 
     "450000000", ",", "455000000", ",", "460000000", ",", "465000000", ",", 
     "470000000", ",", "475000000", ",", "480000000", ",", "485000000", ",", 
     "490000000", ",", "495000000", ",", "500000000", ",", "505000000", ",", 
     "510000000", ",", "515000000", ",", "520000000", ",", "525000000", ",", 
     "530000000", ",", "535000000", ",", "540000000", ",", "545000000", ",", 
     "550000000", ",", "555000000", ",", "560000000", ",", "565000000", ",", 
     "570000000", ",", "575000000", ",", "580000000", ",", "585000000", ",", 
     "590000000", ",", "595000000", ",", "600000000", ",", "605000000", ",", 
     "610000000", ",", "615000000", ",", "620000000", ",", "625000000", ",", 
     "630000000", ",", "635000000", ",", "640000000", ",", "645000000", ",", 
     "650000000", ",", "655000000", ",", "660000000", ",", "665000000", ",", 
     "670000000", ",", "675000000", ",", "680000000", ",", "685000000", ",", 
     "690000000", ",", "695000000", ",", "700000000", ",", "705000000", ",", 
     "710000000", ",", "715000000", ",", "720000000", ",", "725000000", ",", 
     "730000000", ",", "735000000", ",", "740000000", ",", "745000000", ",", 
     "750000000", ",", "755000000", ",", "760000000", ",", "765000000", ",", 
     "770000000", ",", "775000000", ",", "780000000", ",", "785000000", ",", 
     "790000000", ",", "795000000", ",", "800000000", ",", "805000000", ",", 
     "810000000", ",", "815000000", ",", "820000000", ",", "825000000", ",", 
     "830000000", ",", "835000000", ",", "840000000", ",", "845000000", ",", 
     "850000000", ",", "855000000", ",", "860000000", ",", "865000000", ",", 
     "870000000", ",", "875000000", ",", "880000000", ",", "885000000", ",", 
     "890000000", ",", "895000000", ",", "900000000", ",", "905000000", ",", 
     "910000000", ",", "915000000", ",", "920000000", ",", "925000000", ",", 
     "930000000", ",", "935000000", ",", "940000000", ",", "945000000", ",", 
     "950000000", ",", "955000000", ",", "960000000", ",", "965000000", ",", 
     "970000000", ",", "975000000", ",", "980000000", ",", "985000000", ",", 
     "990000000", ",", "995000000", ",", "1000000000"}], "}"}], 
   "\[InvisibleSpace]", "\<\"len(faValuesList)=\"\>", "\[InvisibleSpace]", 
   "199"}],
  SequenceForm["faValuesList", CompressedData["
1:eJwNwwtsCwgYAOC/3fpYX+te7bo+tm7t2nXtunZt164hfwwzERe2Y4jcKTuE
7MaY5cL554aI2NgMEQwbOcE8jgjGfq87xhi5O2GMhROPMXe548zr7ks+c+Tb
iRUCAPjl/7RpC3D/YwCXR4A1ywR04YqAVRohTI0IcU+7kF4PCTlcFAWrm6Lw
1oMoMjqjeU5NNBy7GI2f1SIaO13EzftE0P+PCJ0jxLSkXszn74pBZZPglCoJ
tXVKeFAuhXCZFFe1SenmaykbhsXAnDUx+NNvMfTJLOPiChk0n5LhQ7Gcskvk
XN0ih/Mv5KgMKqisTsGtPQoYNCixYK6SVh5Xco9ABYbxKpy9VUVHn6j4ozcW
ipfH4sarsfRAq2bHLDVUH1bjuQ9qUhTH8eTmOGjtj8NXrngKfRfPdT/HQ098
Auq/SqBv9ifwkbcJ8LEwEcesT6Sme4ncZ08Cx+IkXHwuiVipYflUDUzeq8Hd
f2no5XAtB9dqoe62Fm9kJFNKZTKXdyTDEakOP5TqqGiXjhtf6qAvlIJZq1Jo
0a0U7jTpQT5Pj5NO6GlXlIEHvjBAcJsBf3hqoOs+I+tqjVDebcTDOhO9Lzfx
6KMmaPxkwvtjU8m+OZWrHqVCpzsNZUvT6MvLabwz0QwDX5sx/6CZVrwzc/eo
dNA1puOsvnQ65MjgoeoMGH0hAzfEWujeNAvbfrRA1d8WPItWilln5dI7Vthp
zcQXCzIpcDaTa2U26J5kw+RWG80ctHF72A5Dq+046lc7rU/L4t75WWA7mYUL
RQ46M8HB0h0OKH3uwJZANj1fkc3+G9lQq3fitdlO0h5zcgRc0D7Ohe+2uGjk
Hy5u8ORA77IczOzKoQUaN3dE3CA95MaS927aUZTLz5pywf8wF8npoas1HtZc
8kAkzosHp3vp331eLnzjhYYReXi3Po+svXlcafNBR5UPJeyjiQo/by/zw7M2
P/r+9NPyYQHuWhMAze8BnJGeTwcq8vntqXwolASxviRId1qCbBkIQmUwhKfr
QiS+GeIJxgLYPrcAnx4voDxhmL8fH4aureH/ALFOLJY=
   "], "len(faValuesList)=", 199],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.92479713618762*^9, 3.9247971732556896`*^9, 3.9247973097769527`*^9, 
   3.924800356315308*^9, 3.9254216046735015`*^9, 3.9254231832430344`*^9, 
   3.925423304175123*^9, 3.925448483182951*^9, 3.9266376005150166`*^9, 
   3.9295536559533644`*^9, 3.9348687913844967`*^9, {3.9348689831504354`*^9, 
   3.9348690088578033`*^9}},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"21ac8d4d-1c43-42c4-adea-ce3d01c25f6e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Collect data into groups and set approx distribution function.\
\>", "Section",
 CellChangeTimes->{{3.9247965565037146`*^9, 3.924796566009045*^9}, {
   3.924796621995207*^9, 3.9247966221463127`*^9}, 3.924797685492002*^9, {
   3.9247985209672723`*^9, 
   3.924798533623858*^9}},ExpressionUUID->"577a06c1-38c0-4729-a11d-\
59aff21e1218"],

Cell["\<\
Here we try to transpose data in such a way to have a value of the comoving \
momenta and proper value of the function distribution (maybe multiply with \
some power of comoving momenta) - the less operation with data, the better \
results I will get. Important in the third line you set how look the `axion \
distribution function` in shortcut: `AxDistFunction`. In generall I suggest \
to use: `f(q)*q^3`.\
\>", "Text",
 CellChangeTimes->{{3.924796575991288*^9, 3.9247965928637147`*^9}, {
  3.924796623828636*^9, 3.9247967819797506`*^9}, {3.9247977117461567`*^9, 
  3.9247977939461203`*^9}},ExpressionUUID->"2891d8e3-d8ea-4680-b0f5-\
355ed3d5545a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Helpfull", " ", "function", " ", "to", " ", "create", " ", "Transposed", 
     " ", "data"}], ",", " ", 
    RowBox[{
    "remeber", " ", "that", " ", "`i`", " ", "will", " ", "refer", " ", "to", 
     " ", "vale", " ", "of", " ", "`f_a`", " ", "in", " ", 
     RowBox[{"`faList`", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"transposeData", "[", 
     RowBox[{"i_", ",", "list_", ",", "listOfLists_List"}], "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"list", ",", 
       RowBox[{"listOfLists", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Transpose", " ", "data", " ", "numerous", " ", "of", " ", "times"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AxDistFunctionTabList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"transposeData", "[", 
        RowBox[{"i", ",", "qValuesList", ",", "distributionsQPow3"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "NumberOfDistributions"}], "}"}]}], "]"}]}], ";"}], 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{"f", 
     RowBox[{"(", "q", ")"}], "*", 
     RowBox[{"q", "^", "3"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AxDistFunctionList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"AxDistFunctionTabList", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Method", "->", "\"\<Spline\>\""}], ",", 
         RowBox[{"InterpolationOrder", "->", "3"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "NumberOfDistributions"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Defined", " ", "the", " ", "approx", " ", "axion", " ", "distribution", 
      " ", "function"}], ",", " ", 
     RowBox[{"`f", 
      RowBox[{"(", "q", ")"}], "*", 
      RowBox[{"q", "^", "3"}], "`"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fApprox", "[", 
      RowBox[{"x_", ",", "A_", ",", "b_", ",", "\[Mu]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "*", "A", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"x", "/", "b"}], " ", "+", " ", "\[Mu]"}], "]"}], "-", 
          "1"}], ")"}]}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fApprox", "[", 
      RowBox[{"x_", ",", "A_", ",", "b_", ",", "\[Mu]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "2"}], 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}]], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"A", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["x", "2"]}]], "-", "b"}], ")"}]}], "+", 
          "\[Mu]"}], "]"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fApprox", "[", 
      RowBox[{"x_", ",", "A_", ",", "b_", ",", "\[Mu]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"A", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["x", "2"]}]], "-", "b"}], ")"}]}], "+", 
          "\[Mu]"}], "]"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fApprox", "[", 
      RowBox[{"x_", ",", "A_", ",", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Exp", "[", 
         RowBox[{"A", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}]], "-", "b"}], ")"}]}], "]"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fApprox", "[", 
      RowBox[{"x_", ",", "A_", ",", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"A", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}]]}], "-", "b"}], "]"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fApprox", "[", 
     RowBox[{"x_", ",", "A_", ",", "b_", ",", "\[Mu]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "^", "2"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"A", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}]]}], "-", "b"}], "]"}], "+", "\[Mu]"}],
        ")"}], 
      RowBox[{"-", "1"}]]}]}]}]}]], "Input",
 CellChangeTimes->{{3.924796831241522*^9, 3.9247968316932435`*^9}, {
  3.9247970307664957`*^9, 3.9247970547070827`*^9}, {3.9247973054545774`*^9, 
  3.924797305633904*^9}, {3.9247973487608004`*^9, 3.9247973490973835`*^9}, {
  3.9247973946123095`*^9, 3.924797394792923*^9}, {3.924797473641601*^9, 
  3.924797566648369*^9}, {3.9247976567845907`*^9, 3.9247976620340333`*^9}, {
  3.9247984831810455`*^9, 3.9247985073866014`*^9}, {3.9254216090111647`*^9, 
  3.9254216127840214`*^9}, {3.9254217272014923`*^9, 3.925421738418955*^9}, {
  3.9254218279850645`*^9, 3.925421828582478*^9}, {3.9254224328374095`*^9, 
  3.925422449126927*^9}, {3.9254230762587852`*^9, 3.9254230846941757`*^9}, {
  3.925448490576871*^9, 3.9254485120597715`*^9}, {3.92544857859368*^9, 
  3.925448625951602*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"cac48558-9723-443f-aa7c-567aa11fcada"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(Optional) sanity check of interpolation.", "Section",
 CellChangeTimes->{{3.9247978161042123`*^9, 3.924797841950569*^9}, {
   3.92479835249813*^9, 3.924798361056295*^9}, 
   3.926647182525582*^9},ExpressionUUID->"7510d97c-6160-4c58-b231-\
a04743f388a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "original", " ", "data", " ", "points", " ", "and", " ", 
    "the", " ", "interpolated", " ", "function", " ", "on", " ", "the", " ", 
    "same", " ", "plot"}], "*)"}], 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"AxDistFunctionTabList", "[", 
       RowBox[{"[", "199", "]"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<q\>\"", ",", "\"\<f(q)*q^3\>\""}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AxDistFunctionList", "[", 
        RowBox[{"[", "199", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"Min", "[", "qValuesList", "]"}], ",", 
        RowBox[{"Max", "[", "qValuesList", "]"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Blue"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9247981248249025`*^9, 3.9247981690472937`*^9}, {
  3.9247982466960545`*^9, 3.924798271634676*^9}, {3.924798369030238*^9, 
  3.9247983971034517`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"ff88f481-52e1-4f69-b612-690c450697da"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
petvWeZnlcAo5GmzG4mMsc2piiYNSpA0THwoVSCje4KVu/slJdB/fzTVX4uJ
t1/0Vk4dHY76v4i9v5mMc9ZdWj/T6RBNnw+v0SNj0OHlO33+dOi5FeWvuI2M
ZzacXXdanA7cu1q8bIzIOMJ76lnoiCJorci6hO4kY+/hWWfPUkUI83ht2mlK
xvz9g19KvRXhpfSyIZcFGX0UJCiRhorQ3mCsp2NNRtqbd78+SSmCskEHLeYA
GTsFE67falQAmwmy9DsHMv7X5T5IeaUAFx4dFxp2JuM3j6FkhRgFqBdYw2Lk
Tsb2NzojFy0VYOHz7hkfLzKeC77P3qytAJTg+JG7x5l8VuaOpEgogOmmrt4q
HzIS73k/1rIoQMCAQvusHxnJBtld/r9pkJZ6qpZyhozn5x76RtTToNK86JNF
EBn1TlXrrS+mgVSRWc7TEDIe+Lnng3MCDXb4JD9uu0zG+cVLc2JXaHCC2nuP
PZyMjiFWo9N+NCi7efq60w0ybrkpS9q7nwZurndchVLIuPdYkUi2LA36F+aP
qN8lo5q+pY+QIA0Ox9oeMU0j4/vNSQlr2GjQrZB32CuDjEa22wR2TFPBsUTw
cPhDMrLdWncy+xcVOq19XDKzyLirL02Po5kKB/58cy7LJqMdlq/KfaSCrViE
02IOGS9Hjj9oTKFCy/MBR7F8Mp694XNS6goVrHcYOWoXktFLtELxmzcVzH1X
D518T8a2gpZS3EwFk+rTB/q+krFL5/ZPj3IKfD7caM9SS0ZX54GQoYcUMJpX
t5duYO6//su7sAgKbKON2Nq2kbH2r4Lzv30UKC3eZev/nYw1mQnjDC0KEFaP
9sd2kXHoe4CvgzgF9EIO23ztJyN7rW/axUEyFIiWWv8eZOLtIxK+15FB55m0
NfsfMvpW2fP+KCJDruE5K/kxMlb+vn7O6zEZNDraLOEfGRP/ldZ5JJLhpY+O
5aEpMg4m9c8XXyWD6rp4i7OzZPwU3du/J4AMDK195q+XyXhUT6rg2QEyPKnK
3lfHQsGtNmrBu83IoOjCvW90LQU7or4W5m0nAyX6k6kCNwWjZczsr6uQIZ1C
NjVaT8HSLp6k92QyyBWF7HXhp+Cv8DUc+yXIIPV7655UUQoauhiqGXCSIeXC
7d0F4hRMmnX7ZLsqD2Iis7uapSiYKeVj5D4jDyLbc0w2kCnYYLMg3tcnD/Ft
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
ufRd3r2Jjnulot8qmE0S3LE/y2Nb6WjWpbnzieok8YTa51bcQcf9oSPXuzdM
EiNmw08Eeuj4Pctm8+OmCeLE/TmN4lE6unFvHz7iOUHw6Sw1DYzT0fGmlilY
TBAvqlYDBKboaLvSZKSsN0GMT3IUuS0w/QgaLP7FN0H4GYsYCqxTQguKt3Fo
2T9C+LvYr63cStjZzFad8OIfkXtSKtxtvRKeuf0pgP/eP2Immfy1SEgJnR4H
rB04948I/LPJyk1OCYfkXpx8t+UfccJl10oIWQlD/yVsXa/4jzjS6pyVSlPC
hliVjyob/xFmH2+u1ikrYdT7lJyZqXGCkjr6dKuuEipqOJ4wfDFO1O3OYhOw
VMKnEcK6GeRxQuGJXH7RZSW8K5bHmw9jhJTcFpeWMCVMqjGzIcmNEYKJ+3j/
RSjhzHr3gjCWMWLp0oXDtBhmfedcsWzZKNFg38kXe0cJF/8EaVzEUeICV7K7
W54SBp56uBqrNkL4X3wheKlACVOakzy38YwQntOf36UWKaEjl2a11cAfwrpn
Wqi+TAnf8D5yfpryh1AqtCrdWqOExddTgg1Xhwk5NW/v/fVKmGtt4G/YNkyI
PAgVPdWkhIl2suOnXg0TLLGvjj3sUELj1W9/m12HiRaPDeICg0o4vZf/uETj
EJE9d9/15LASyhxPSBR6PkRcuqb18tuoEvIZsrt5Rg4Ryo/td0ZOKeFV9+23
0ncOEWu2jMT9nlVCh6l2/UDFIaKl4kKX8aISWpLtvZ5xM+sHM06vZWXg1Qzr
1p6G38T+MzplLuwMrBacas8v+E0or6vkLeVkoLJz2UDif7+JFtpYRvAGBlrV
Mx6QfZh5ty0N01IMlHjFcJGT+E2wzlRJW8sx0CGP6rLC/ptovergmUNm4HiZ
ojsxMUiEPghlOanErH9CTzz+dZCw1RbZ+02FgdT0Ugf+gkFC+dOjJMYmBvr/
Gp8KyxwkWvurVX9vZuAXenGadfAgke3vFGS8lYGnkx/qO7oz+7FNfMokGPhd
pTI/zYJZT9no4LKDgfjYxlqbPEiw5mY9fm/CwNoFvlVdbmY/Q/0p6b0M9Nz3
X2Ln3wEi9IjL9Q5LBg6296U45w8QdpOTLVv2MzDv1mD0VOIAoXI5TD7Jnrm+
I56aenqAaEt/WmjlzMAO6dK9VSrMfO/0YPVxBlpu15dNuvmLYPW9psk4xUBe
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
49tbCtXdsgngcSHoSeMIw6ePOT82PokH6aL6lw6/GH6G2mhIXY6HG9en94yO
svG8FG/MNywepj6MHVb8x0Za0d4wCOLhckvLWOUYG78cM203WxQPuzrkpu+e
YKOiQuA5rb88SB3Mmh8whcLYaUbJDlU8wD/vlstMpZC1t+fti0wefBBZuTp/
GoWB6Qn9ead5cHb2Ic1N0ynM+mi7/pMzD1hyV6FtBoVVsG7D5Z08eK4wrO8u
RuGSq0udpv3Hg1Nq2rsni1M4a9ts9uxlPFDQ8LdMmk1h0awxqefiPLirU+O4
Zg6FGuK9gd5/uHBIf6pHvSSF7zhP+v994YLUbgMfC2kK//bmtZ55zYXrltFB
32QoLO70zF/8hAvWB55Ghs2lcPXGpT1vG7gwxVOWt1COwmuzyodfV3Hh0gnz
tBJ5CqcovT2oXMGFnSHpufoLKPxu++huXRkXfpztKupYSOFaql6+tJQLyXzF
imOLKbytLWozwuxDpkvNzKWMv+Jt/Bjm/vu8wgdZChROM/CqPXWbC2dLBps1
l1P4JFT+fc0dLrBuabx5tILCeTYS4zZPudDWcPKDvRKF7W48SdMOLvg1VQ38
UqZQxeDDotw+Lii8nDQas5I5H6uvuGucC3e7t05WVKNQ2P5bxUyaB+5fI8Uq
V1HYUrtRtXIlDyRHGmVM1lB4pdtE1V+XB9fHJRd/VKfQvMVHNcOaB9Yz9ir7
syi8z/qmtsSPB1OkU9ZKUxTGFT3s/JvCgx1KyzaDJoUn1mxukO3iwXf1g8at
WhTKc+b1tk2Lh2TtfFM3bQrL6lwOyKyJh/fGbOfEDRTezW7ukwiKB7+jutED
uhTmStS6WKjxQcE/LCF0C4VfDM/v3LmXD3fCHmQu0KPQcZrntedBfJBM2V2y
zYDCRLni9KJmPlzPSah8Y0ih0ynNzyF/+GBV2F5/1JhCm5Vs/2GFBBBW2z/P
3MnEL7JvgbtLAmx/cLFTw4RC517L5NLIBBhq/vL54W4Ka4Ou3FMXJkDimzXf
7fZQqCvWNjekJgE2fjzy96cphW5Pdw8avUiAnm/XpsaYUXhB/lLDmt4EiPz9
e/YKcwrtVa0mPRpNAHURkLtpQeFCwwHJhimJ0CJ+WmGXFYX69HvHyumJzHxh
ot5hTWGFVpfdfmbtPXnJRndbCtkrNHhBkxOh4e9Xw9/7Kay/adNRy+hZ9ufN
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
YyPKvycmCL69tiSp/1Swzv/Ud+Lk
        "]]},
      Annotation[#, "Charting`Private`Tag$18716#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"q\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"f(q)*q^3\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20.}, {-5.1918452176987*^-7, 0.01762325540237962}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9247981710760345`*^9, 3.9247982732695065`*^9, {3.9247983725297947`*^9, 
   3.9247983978692803`*^9}, 3.9254216215835376`*^9, 3.9266376081890273`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"c9fc826b-2a9d-4fe0-90df-0f1ae90076dd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
(Optional) select a distribution and make a fit - update way of finding fit.\
\>", "Section",
 CellChangeTimes->{
  3.9247983497122326`*^9, {3.9248028544749327`*^9, 
   3.9248028711684203`*^9}},ExpressionUUID->"5556a98d-3614-4ff3-b1c8-\
32639a3768a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "1"}], ":", " ", 
    RowBox[{"Settings", " ", "to", " ", "make", " ", "a", " ", 
     RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SelectedDist", " ", "=", " ", 
     RowBox[{"AxDistFunctionList", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", " ", "11"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"step", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataToFit", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"SelectedDist", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xmin", ",", "xmax", ",", "step"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "2"}], ":", 
     " ", 
     RowBox[{"Perform", " ", "the", " ", "nonlinear", " ", 
      RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"fit", "=", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"dataToFit", ",", 
       RowBox[{"{", 
        RowBox[{"fApprox", "[", 
         RowBox[{"x", ",", "A", ",", "b", ",", "\[Mu]"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"A", ",", "b", ",", "\[Mu]"}], "}"}], ",", "x", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Method", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<NMinimize\>\"", ",", 
          RowBox[{"Method", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<RandomSearch\>\"", ",", 
             RowBox[{"\"\<SearchPoints\>\"", "->", "100"}]}], "}"}]}]}], 
         "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fit", "=", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"dataToFit", ",", 
        RowBox[{"{", 
         RowBox[{"fApprox", "[", 
          RowBox[{"x", ",", "A", ",", "b"}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"A", ",", "b"}], "}"}], ",", "x", ",", "\[IndentingNewLine]", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<NMinimize\>\"", ",", 
           RowBox[{"Method", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<RandomSearch\>\"", ",", 
              RowBox[{"\"\<SearchPoints\>\"", "->", "100"}]}], "}"}]}]}], 
          "}"}]}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "3"}], ":", 
     " ", 
     RowBox[{"Optional", " ", 
      RowBox[{"information", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Extract", " ", "best"}], "-", 
     RowBox[{"fit", " ", "parameters"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bestFitParams", "=", 
     RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<best fit parameters:\>\"", 
      RowBox[{"bestFitParams", "[", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Visualize", " ", "the", " ", "fit"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", "data", "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"fit", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "4"}], ":", 
     " ", 
     RowBox[{"Plot", " ", "distribution", " ", "and", " ", 
      RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedDist", "[", "x", "]"}], ",", " ", 
       RowBox[{"fit", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "11"}], "}"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<(k/T\!\(\*SuperscriptBox[\()\), \
\(3\)]\)\!\(\*SubscriptBox[\(f\), \(p\)]\)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k/T\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", "22"}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "2"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Numerical solution\>\"", ",", 
        "\"\<fit to numerical solution\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzE8og3EAxvG3SSk1pF0kWcYuK6xpU9sY8ycHkxCld1Gal7ER2xSpSSKN
iGzYZCNpImk52ETyN2W14iD/Qq2sOCCt8D6/w9Pn8NSX32yobuFQFJXODgbs
zMSnIqLyCGNmobP7wQ4VVdxVyK/N9UKD0LoLfydMe5CeajqCRXT7C7RZlvK+
WH3FbQVwm/pohbGW0k74mHhL5BktVsgRyYbg2nnGKBTEFxIrNDYbLFK7iBLz
3xT5zZxpqD5+m4OBOY4dPpkUTijiVRJ1zJgbGpOWV+ArVx+CdfnrN/BF/HsP
QwuXz6RzmKX8ZlW6hlVwY9FYAnv98+Ww1TujgcFxUQ1spBPq4Ymyg4HeuIMe
qHfkWCAtnRyEpwpmCKbclI7An2EPcWth1w5nNt+d8M4/4IM7Ufk97H9PO80s
iKj6pNozGPy6CsL5+mviaqr8FdJabxgGknXZWaySqF8Gu3hl6WJW8VJlBgwt
C8PQfTFLpAT7+xJWR8Mh8R9DrQ5+
  "],
 CellLabel->"In[25]:=",ExpressionUUID->"7562128a-b165-492c-9428-cb9409d45bd2"],

Cell[BoxData[
 RowBox[{"\<\"best fit parameters:\"\>", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[Rule]", "0.7489006450121146`"}], ",", 
     RowBox[{"b", "\[Rule]", 
      RowBox[{"-", "0.09887137923743217`"}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0.3707512524185819`"}]}], "}"}], "[", 
   "]"}]}]], "Print",
 CellChangeTimes->{
  3.9248003828172603`*^9, {3.924800533150672*^9, 3.924800538329313*^9}, 
   3.9248005870686226`*^9, 3.9248006296860647`*^9, 3.924800664646001*^9, 
   3.9248007128415403`*^9, 3.9248007553191013`*^9, {3.9248007968692465`*^9, 
   3.9248008138852315`*^9}, {3.924801206820995*^9, 3.924801222918085*^9}, {
   3.9248012831396627`*^9, 3.924801319660125*^9}, {3.9248020977921658`*^9, 
   3.92480211782412*^9}, 3.9248021820690203`*^9, {3.9248022539158254`*^9, 
   3.9248023806547885`*^9}, 3.924802515238985*^9, 3.9248025626711316`*^9, 
   3.9248026259282866`*^9, {3.9248027704968305`*^9, 3.924802810864499*^9}, {
   3.924803000983673*^9, 3.9248033257928886`*^9}, {3.925421628050102*^9, 
   3.9254216485738955`*^9}, 3.925421713492611*^9, 3.9254217465104895`*^9, 
   3.9254218344321527`*^9, {3.925421876957597*^9, 3.9254219039514017`*^9}, {
   3.925422518889172*^9, 3.925422535614687*^9}, 3.925423094064378*^9, 
   3.925423195264576*^9, 3.9254233120664787`*^9, {3.9254469195679364`*^9, 
   3.9254469400526366`*^9}, {3.9254485674095893`*^9, 
   3.9254485868664627`*^9}, {3.925448618026601*^9, 3.9254486346016936`*^9}, 
   3.925452293027465*^9, 3.926637632009162*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"278ebad3-cb40-4398-8182-d9045418ea0e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
hf8BSeSIig==
          "]]}, Annotation[#, "Charting`Private`Tag$23448#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
P8+JsiU=
          "]]}, Annotation[#, "Charting`Private`Tag$23448#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"(k/T\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\\!\\(\\*SubscriptBox[\\(f\\), \\(p\\)]\\)\"", HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox["\"k/T\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Directive[
       GrayLevel[0], 
       Thickness[Large]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, LabelStyle -> 22, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 11}, {-1.116542151745653*^-6, 0.7408769937767226}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Numerical solution\"", "\"fit to numerical solution\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 22, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "22"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.924799021514452*^9, {3.9247992640059795`*^9, 3.924799917492851*^9}, {
   3.9247999958168535`*^9, 3.9248003828782625`*^9}, {3.9248005332246723`*^9, 
   3.9248005384003115`*^9}, 3.924800587147625*^9, 3.924800629767064*^9, 
   3.924800664725011*^9, 3.9248007129125423`*^9, 3.9248007553941116`*^9, {
   3.9248007969432497`*^9, 3.924800813975234*^9}, {3.9248012070810347`*^9, 
   3.924801223144084*^9}, {3.924801283212663*^9, 3.924801319863948*^9}, {
   3.9248020979311657`*^9, 3.9248021179780617`*^9}, 3.9248021822230377`*^9, {
   3.9248022539868245`*^9, 3.9248023807127895`*^9}, 3.9248025153089857`*^9, 
   3.924802562739132*^9, 3.9248026260040627`*^9, {3.924802770573829*^9, 
   3.924802810933498*^9}, {3.9248030010426717`*^9, 3.9248033258618903`*^9}, {
   3.925421628139102*^9, 3.9254216486528997`*^9}, 3.92542171357161*^9, 
   3.92542174658349*^9, 3.925421834497154*^9, {3.9254218770336*^9, 
   3.9254219040313997`*^9}, {3.925422518968171*^9, 3.925422535687689*^9}, 
   3.925423094141384*^9, 3.9254231955535817`*^9, 3.9254233123554873`*^9, {
   3.9254469196729407`*^9, 3.9254469401406374`*^9}, {3.9254485677395906`*^9, 
   3.925448586945465*^9}, {3.925448618111598*^9, 3.9254486347196903`*^9}, 
   3.925452293155486*^9, 3.9266376321701612`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"a2601081-6957-41a9-bb7a-de4d1a4a77a6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find all parameters for each distribution function.", "Section",
 CellChangeTimes->{{3.924803506667553*^9, 
  3.924803514653206*^9}},ExpressionUUID->"860f6c3a-3075-4df1-be17-\
9c5f234016b8"],

Cell["\<\
We already create two list: `maValuesList` - axion masses and `faValuesList` \
-  scale of spontaneous breaking of the PQ symmetry. Now we have to read the \
distribution function and find parameters, which describes best fit to data \
stored in `AxDistFunctionTabList`. We need this because in the end we are \
looking for function: A(m_a), b(m_a) and \[Mu](m_a), where A, b and \[Mu] are \
parameters which we will find out.\
\>", "Text",
 CellChangeTimes->{{3.9248035386734443`*^9, 
  3.9248035764854965`*^9}},ExpressionUUID->"17d8774a-f83d-4423-b07a-\
e00363bb8899"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"clear", " ", "up"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AparameterList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bparameterList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]parameterList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"find", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", "NumberOfDistributions"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "==", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<step: \>\"", ",", "i"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "1"}], ":", 
        " ", 
        RowBox[{"Settings", " ", "to", " ", "make", " ", "a", " ", 
         RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"SelectedDist", " ", "=", " ", 
       RowBox[{"AxDistFunctionList", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xmin", " ", "=", " ", "0.0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xmax", " ", "=", " ", "11"}], ";", "\[IndentingNewLine]", 
      RowBox[{"step", " ", "=", " ", "0.005"}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataToFit", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"SelectedDist", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xmin", ",", "xmax", ",", "step"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "2"}], ":", 
        " ", 
        RowBox[{"Perform", " ", "the", " ", "nonlinear", " ", 
         RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], "\n", 
      RowBox[{"fit", "=", 
       RowBox[{"NonlinearModelFit", "[", 
        RowBox[{"dataToFit", ",", 
         RowBox[{"{", 
          RowBox[{"fApprox", "[", 
           RowBox[{"x", ",", "A", ",", "b", ",", "\[Mu]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"A", ",", "b", ",", "\[Mu]"}], "}"}], ",", "x", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<NMinimize\>\"", ",", 
            RowBox[{"Method", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<RandomSearch\>\"", ",", 
               RowBox[{"\"\<SearchPoints\>\"", "->", "100"}]}], "}"}]}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"fit", "=", 
         RowBox[{"NonlinearModelFit", "[", 
          RowBox[{"dataToFit", ",", 
           RowBox[{"{", 
            RowBox[{"fApprox", "[", 
             RowBox[{"x", ",", "A", ",", "b"}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"A", ",", "b"}], "}"}], ",", "x", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Method", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<NMinimize\>\"", ",", 
              RowBox[{"Method", "->", 
               RowBox[{"{", 
                RowBox[{"\"\<RandomSearch\>\"", ",", 
                 RowBox[{"\"\<SearchPoints\>\"", "->", "100"}]}], "}"}]}]}], 
             "}"}]}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "3"}], ":", 
        " ", 
        RowBox[{
        "Find", " ", "the", " ", "best", " ", "parameters", " ", "and", " ", 
         "Append", " ", "them", " ", "to", " ", "right", " ", 
         RowBox[{"List", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"bestFitParams", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"A", ",", "b", ",", "\[Mu]"}], "}"}], "/.", 
        RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"bestFitParams", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"A", ",", "b"}], "}"}], "/.", 
          RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"AparameterList", ",", 
        RowBox[{"bestFitParams", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"bparameterList", ",", 
        RowBox[{"bestFitParams", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"\[Mu]parameterList", ",", 
        RowBox[{"bestFitParams", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "Test"}], " ", "my", " ", "results"}], "***)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<AparameterList\>\"", ",", " ", "AparameterList", ",", " ", 
       "\"\<len(AparameterList)\>\"", ",", " ", 
       RowBox[{"Length", "[", "AparameterList", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<bparameterList\>\"", ",", " ", "bparameterList", ",", " ", 
       "\"\<len(bparameterList)\>\"", ",", " ", 
       RowBox[{"Length", "[", "bparameterList", "]"}]}], "]"}], ";"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<\[Mu]parameterList\>\"", ",", " ", "\[Mu]parameterList", ",", " ", 
       "\"\<len(\[Mu]parameterList)\>\"", ",", " ", 
       RowBox[{"Length", "[", "\[Mu]parameterList", "]"}]}], "]"}], ";"}], 
    "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9248036390233374`*^9, 3.9248037091808634`*^9}, {
   3.924803772112191*^9, 3.9248038881899157`*^9}, {3.9248039412717843`*^9, 
   3.9248039416247873`*^9}, 3.925422545389052*^9, {3.9254232587708435`*^9, 
   3.925423284848629*^9}, {3.925448543831103*^9, 3.92544855657883*^9}, 
   3.9266469547610188`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"37d99190-2249-4f05-95af-b3657bbdebb8"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["step: ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.929553703905868*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"76b29a9b-f64c-4574-83ac-710450e28469"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "20"}],
  SequenceForm["step: ", 20],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.929553743328269*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"30b8774c-c53e-420a-af95-16fb3b327b0e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "30"}],
  SequenceForm["step: ", 30],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.929553783000676*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"71f14e6a-f146-4399-9964-285486e52d17"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "40"}],
  SequenceForm["step: ", 40],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.929553823963092*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"7f90849e-b559-4ec7-bb21-c2bc29239ee7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "50"}],
  SequenceForm["step: ", 50],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.9295538648849998`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"3b1365c6-b907-4f8a-8797-362cded2456e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "60"}],
  SequenceForm["step: ", 60],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.9295539061853275`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"570a3eca-cf3e-4844-a1f7-26ff989840ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "70"}],
  SequenceForm["step: ", 70],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.9295539472767467`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"3ea71629-d7bc-41ee-b850-4a3d223d524b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "80"}],
  SequenceForm["step: ", 80],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.9295539867247734`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"bb9efe4f-c241-4d17-a5a5-0cbf2c3c9e48"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "90"}],
  SequenceForm["step: ", 90],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.9295540312462263`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"b688fcf0-3f2e-4ca6-bbb4-0b11a2bdbe97"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "100"}],
  SequenceForm["step: ", 100],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.9295540740272913`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"124c94e7-e6c4-4a4d-be5d-15da877edb1f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "110"}],
  SequenceForm["step: ", 110],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.929554115942718*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"10a8b56d-e585-452c-bb46-f9da474d3307"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "120"}],
  SequenceForm["step: ", 120],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.929554157880213*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"269eb9e5-751e-4030-ae9f-d5e3a5ed8d21"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "130"}],
  SequenceForm["step: ", 130],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.9295541999276466`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"cf106a9a-b34a-4833-bc7c-65b42ebe6cdd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "140"}],
  SequenceForm["step: ", 140],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.9295542425000877`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"090843cd-75c0-4e17-8b29-6a529b988127"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "150"}],
  SequenceForm["step: ", 150],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.929554283533125*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"1f2ed644-5bc7-4f98-93d4-be8a2db591cf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "160"}],
  SequenceForm["step: ", 160],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.9295543226365757`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"384be3a9-7045-49ff-b78a-d75b354e088b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "170"}],
  SequenceForm["step: ", 170],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.929554362896988*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"ae773848-9eba-46a5-8e60-0e170b10087a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "180"}],
  SequenceForm["step: ", 180],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.9295544014733806`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"acc1e225-0643-431b-b08e-3f1efa2c8a98"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "190"}],
  SequenceForm["step: ", 190],
  Editable->False]], "Print",
 CellChangeTimes->{3.924803988212788*^9, 3.925421946057312*^9, 
  3.925422568582161*^9, 3.925423113367663*^9, 3.9254232138721995`*^9, 
  3.925423329426111*^9, 3.925448681525671*^9, 3.926637674469737*^9, 
  3.929554442737802*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"0b65eb86-655f-4d8e-842a-87d71819b878"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find function A(m_a), b(m_a) and \[Mu](m_a).", "Section",
 CellChangeTimes->{{3.9248047889548645`*^9, 
  3.924804790640278*^9}},ExpressionUUID->"b4f2b77e-fdf5-4e95-bde7-\
698b561c88ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"A", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameterA", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", "AparameterList"}], 
       "}"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
     "into", " ", "a", " ", "list", " ", "of", " ", "data", " ", "points"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
     " ", "with", " ", 
     RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "AparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{"Max", "[", "AparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", "Plot", " ", "the", " ", "data", " ", 
     "with", " ", "black", " ", 
     RowBox[{"dots", "**"}]}], "******)"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"dataParameterA", ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<parameter: A(\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",", 
           "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
           "None"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"LabelStyle", "->", "22"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.924804823881069*^9, 3.92480486325163*^9}, {
  3.9248049050448537`*^9, 3.9248049902024465`*^9}, {3.926638458893525*^9, 
  3.9266385002158623`*^9}, {3.926638538852708*^9, 3.9266385707167616`*^9}, {
  3.9266386134991407`*^9, 3.926638635683058*^9}, {3.926639698773446*^9, 
  3.9266397432772655`*^9}, {3.9266397965899563`*^9, 3.9266398523694363`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"495be311-a8cd-41e0-a6be-a4d2cf0bd39c"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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

     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.5636095022063944, 0.7356542463700371},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: A(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.168779688194484, -0.5636095022063932}, {0.7356542463700354, 
   1.139737147435914}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.924804999696274*^9, 3.925422360883956*^9, 3.9254494335319157`*^9, {
   3.926638479190995*^9, 3.926638501646495*^9}, 3.926638573856015*^9, {
   3.9266386286077394`*^9, 3.9266386379618273`*^9}, 3.9266397468584814`*^9, 
   3.926639812611486*^9, 3.926639853044981*^9, 3.9295544886652822`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"2cde0a3e-7a37-4e4d-9320-3a2ddfd6df96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
    " ", "with", " ", 
    RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "AparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", 
     RowBox[{"Log", "[", 
      RowBox[{"0.1", "*", 
       RowBox[{"2", "/", "5"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{"Max", "[", "AparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "Plot", " ", "the", " ", "data", 
     " ", "with", " ", "black", " ", "dots"}], " ", "********)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"dataParameterA", ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<parameter: A(\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",", 
           "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(m\), \(a\)]\) [eV]\>\"", ",", "None"}], 
          "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"LabelStyle", "->", "22"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.92480516969178*^9, 3.9248052038996544`*^9}, {
  3.9248053178758283`*^9, 3.9248053207853336`*^9}, {3.926638659474255*^9, 
  3.9266386749518137`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"4d72a27e-7e85-4243-989f-46028b1ae748"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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

     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3.2188758248682077`, 0.7356542463700371},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: A(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\) [eV]\"", HoldForm],
       TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.168779688194484, -3.2188758248682006`}, {0.7356542463700354,
    1.139737147435914}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.924805184549158*^9, 3.924805204870996*^9}, {
   3.9266386517418528`*^9, 3.9266386758122807`*^9}, 3.9295544917893143`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"fc428838-2155-4667-bd1b-d06e140866a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"b", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameterb", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", "bparameterList"}], 
       "}"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
     "into", " ", "a", " ", "list", " ", "of", " ", "data", " ", "points"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
     " ", "with", " ", 
     RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "bparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{"Max", "[", "bparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "Plot", " ", "the", " ", "data", 
     " ", "with", " ", "black", " ", "dots"}], " ", "********)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"dataParameterb", ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<parameter: b(\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",", 
           "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
           "None"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"LabelStyle", "->", "22"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.924805282716332*^9, 3.9248053594791603`*^9}, {
  3.9248054002835712`*^9, 3.9248054012090597`*^9}, {3.9248054322065353`*^9, 
  3.924805461297391*^9}, {3.9266387004283657`*^9, 3.92663872604012*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"4382a1aa-45a8-4477-9ac6-b804a33d36ad"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.5636095022063944, -0.09887137923743239},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: b(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.168779688194484, -0.5636095022063932}, \
{-2.9671680911435168`, -0.09887137923743217}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9248053632272243`*^9, 3.924805394681943*^9, {3.924805448014742*^9, 
   3.9248054618122425`*^9}, 3.9254223790538416`*^9, 3.925449440666629*^9, 
   3.9266387270174103`*^9, 3.929554494459613*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"91d3fc7f-21f3-4a72-824f-b631c0aa7a0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"\[Mu]", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "*", "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameter\[Mu]", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", 
        "\[Mu]parameterList"}], "}"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
     "into", " ", "a", " ", "list", " ", "of", " ", "data", " ", "points"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", "to", " ", "proper", " ", "work", " ", 
     "with", " ", 
     RowBox[{"plot", "**", "**", "**"}], "*"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "\[Mu]parameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{"Max", "[", "\[Mu]parameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "Plot", " ", "the", " ", "data", 
     " ", "with", " ", "black", " ", "dots"}], " ", "********)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"dataParameter\[Mu]", ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<parameter: \[Mu](\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",",
            "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
           "None"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"LabelStyle", "->", "22"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.924805719727708*^9, 3.9248057661045036`*^9}, {
  3.924805857382472*^9, 3.9248058633978405`*^9}, {3.9266387692683*^9, 
  3.9266387935104046`*^9}, {3.92663895374577*^9, 3.926638990933858*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"385bc57c-4ef3-46ed-b85e-0978e804bfdd"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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
mJDTvPBvPoXE99UZbpbG+B/gQSQN
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.5636095022063944, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: \[Mu](\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.168779688194484, -0.5636095022063932}, \
{-16.231760011718105`, 0.3707512524185819}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9248057692942696`*^9, 3.924805804577259*^9, 3.9248058660027666`*^9, 
   3.9254223896959677`*^9, 3.9254494439929934`*^9, 3.9266387965343647`*^9, {
   3.926638973671854*^9, 3.9266389925042543`*^9}, 3.92955449689965*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"ad24d771-2a35-40b0-9cc2-fb9fd034f19a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find fit funtion: A(m_a), b(m_a) and \[Mu](m_a)", "Section",
 CellChangeTimes->{{3.9266391197475257`*^9, 3.92663915902977*^9}, {
  3.9266413267217765`*^9, 
  3.9266413267517776`*^9}},ExpressionUUID->"c88dce5d-d78e-4c69-95e5-\
862e3ff2f82b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"A", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
    "into", " ", "a", " ", "list", " ", "of", " ", "points"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameterA", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", "AparameterList"}], 
       "}"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Use", " ", "FindFormula", " ", "to", " ", "find", " ", "a", " ", 
     "suitable", " ", "model", " ", "for", " ", "the", " ", "data"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"polyModA", "=", 
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"dataParameterA", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"x", "^", "i"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], ",", "x"}], 
     "]"}]}], "\n", 
   RowBox[{"polyModA", "[", "\"\<BestFit\>\"", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
     " ", "with", " ", 
     RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "AparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{"Max", "[", "AparameterList", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"input", "=", 
     RowBox[{"Log", "[", "maValuesList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", 
     RowBox[{"plotting", " ", "**", "**", "**"}], "*"}], "*)"}], "\n", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"dataParameterA", ",", 
       RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<parameter: A(\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",", 
            "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
            "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"LabelStyle", "->", "22"}], ",", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"polyModA", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Min", "@", "input"}], ",", 
         RowBox[{"Max", "@", "input"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Green"}]}], "]"}]}], "\[IndentingNewLine]",
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.926639170255819*^9, 3.926639185968951*^9}, {
  3.926639355068102*^9, 3.926639453319235*^9}, {3.926639539688136*^9, 
  3.92663954284776*^9}, {3.9266403193853292`*^9, 3.9266403703914127`*^9}, {
  3.926640403160126*^9, 3.9266404079399605`*^9}, {3.9266404716691914`*^9, 
  3.9266405141385098`*^9}, {3.9266406367243767`*^9, 3.92664064992825*^9}, {
  3.9266406799899073`*^9, 3.9266407714043508`*^9}, {3.9266408142537727`*^9, 
  3.926640814361808*^9}, {3.9266409204400187`*^9, 3.926640929567874*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"966bf734-fe1f-489b-85a5-aa15af3122e4"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"2.210209982614508`", "\[VeryThinSpace]", "+", 
       RowBox[{"8.963814438008505`", " ", "x"}], "+", 
       RowBox[{"23.551335687657247`", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"35.25458361576668`", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"33.51959470957631`", " ", 
        SuperscriptBox["x", "4"]}], "+", 
       RowBox[{"21.39510752775396`", " ", 
        SuperscriptBox["x", "5"]}], "+", 
       RowBox[{"9.436000323117979`", " ", 
        SuperscriptBox["x", "6"]}], "+", 
       RowBox[{"2.906002723660472`", " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"0.622192651660749`", " ", 
        SuperscriptBox["x", "8"]}], "+", 
       RowBox[{"0.09064484842554649`", " ", 
        SuperscriptBox["x", "9"]}], "+", 
       RowBox[{"0.008562227352084718`", " ", 
        SuperscriptBox["x", "10"]}], "+", 
       RowBox[{"0.0004726565058179485`", " ", 
        SuperscriptBox["x", "11"]}], "+", 
       RowBox[{"0.000011574687953187249`", " ", 
        SuperscriptBox["x", "12"]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {2.210209982614508, 8.963814438008505, 23.551335687657247`, 
     35.25458361576668, 33.51959470957631, 21.39510752775396, 
     9.436000323117979, 2.906002723660472, 0.622192651660749, 
     0.09064484842554649, 0.008562227352084718, 0.0004726565058179485, 
     0.000011574687953187249`}, {{$CellContext`x}, {
      1, $CellContext`x, $CellContext`x^2, $CellContext`x^3, \
$CellContext`x^4, $CellContext`x^5, $CellContext`x^6, $CellContext`x^7, \
$CellContext`x^8, $CellContext`x^9, $CellContext`x^10, $CellContext`x^11, \
$CellContext`x^12}}, {0, 0}}, CompressedData["
1:eJxTTMoPSmViYGBgBOLjDDDwwX6UHqVH6VF6lB6liaEB3rTt/Q==
    "], CompressedData["
1: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

    "], CompressedData["
1:eJxE2nc4UN8fB3BkZu9VKDsje49zs7L33jOjZGTvvStbRkaIQkZIyLn2iEKh
iMjeRIri9/3nx32e+/fruefec87n8z73mt19PUcsDAyMvv9uYoz/X7vyTMy+
QzQECx1xbI+8/Q0+ycv53fubvt7bcYTFT73xqUXeF0ebQJSpuuPrMxIKBZci
+YxoP8J3YWkdbjGvsCS+RstTZL7zM47w61jLqCidCXWV1xpvMuj5Ztlx435U
mdRnHfn/O0obn9EKrJ2O+y9YBDiJt+Vf5HMpyjJvdTQYKy7USGzK12JXDiKm
Gx1kR/WJ7eHr8s97Stw3atY60tWHvLN+rMozU/JJJzGtdjj2B/3Ntl6RF7+b
GJBcvtyxTc+4L/lz6dyJ5ZVYqmI86NgznWW0UfojvzU0edu986yj9RZb+t+D
S8BYrnIAUhFAapdRPP0YUgCFTeuyRijhK7JU7LBFOlAniWFafZsZzvwrqA2s
YAU/x7Locl9zwUUufrNgopvg/85QGM/sy+qjjogx9QLDGEzQ6MJ0MLVFAPlV
7Uirb1KC1Vlly0GHKzDBfWQqEYsdCKl+6XpNexMevUynGsAUB/ypnB3suAhs
asV6UiioCr4kLGo4lepB7n/x36uyzM+dXArn7z45xx2XhW5uZzLgAt/FlZg1
KwqI97k76HYCE5hj3fPHs+WGXH5hXpBWFIRurc0PxiGw5JLpt9esmuDK2y9L
k+ImsKJNZQFlcQBvut8oRb31gC6xC+7BI0Hnzq6GR8YM6b+OBwJ9lX0OlwFr
dAeT629aOJJVPoXZww5KevOpDHqEodLY/eOiAwQUfo/Tz9HSgZXxvFlPn1oC
7CdGcu7LrnCpm9uU290fpHDMRe7djIV3U41ve3FknDuhqo0OI0JnHT0cminQ
lQRcP6uNbnx+FX53YeZOWeMF20TzHFwCMpD4HvPPO0HqYPzzTC//kBk0jiHK
tWZ2BSUag0yzfgGQe7q27eGnePB6VzPZSDQHbjc26DHmPj93jP4O3StMxIAZ
j/fndujJAWP27xP6mmtwIy6pT0VFCPxLuvu6dOkW/DLWWWWZoA+YKqeYi4Uc
4MSmMmnh/APwLS/tSkJWDOw2AdlpulnAedE2aZfiOXxXVfzxy9fmc8dW61ON
kx0mnBr6ae33gwII0uSrfolhg6ufi53cNcSAuTdnsonUbeg8dbBzqmcG7v3l
56bKvQu9xnGa8inDQML3TfyT+cdQFeEV2TEuARaC6QFy2w3wU41rfOPznnMn
R+Dpixx2LPixpXJyJ4MKrDOWFK4bc8IOM9VTNEAKOOy8vieApwWN1Q8/6OHZ
gpiOggyg4w3dVReiX6zEALUx6TS6qRyYl8jrFsxXBQaH57HtDjvg7CdCg3Tm
sXNnIHv/1dAkFnT3YexfFaABihW1T3Sv34BpM2IV1H1yYCBCozaBWQ/2tB/e
WTN2BM9X7ud1XQ+A7LWjAsy5KYCTJixA170YCtyc+iUc9xr8jKDP/M3bDwkT
gt889585dwpidJhagi7BPJZHVhkttOBxd7b+5x+8MAmTNfZPFgKi/QI8NNwM
4fd6Fy9CaldgxZbPVt0ZBi9PfhyzM0oH1JmxfFeTn8N9WyJx/6o28KTv0k1F
n1FYifPLA9xaOncOXv8iCKPEhpFXUs0+C9CDFL3Zura8mzBlm+VH9icF4DtB
3b0ybwIj4/bjGyTuAzbK/TGfrCi4fEwRuJeeA1Ke/Kz6PlEDfT8u3qcx7QL5
9+p8dpSn4GBIqS7w3T533JC7vENF2NCKLG9KPYcBaPhXtI+yCcKecElyHQZl
UL/gMn8pzAKarOXcS7PyAg9UuLHHauKg3gCHT1z8U+BkgMGD1jTA5/+U9+Rs
BoCJtMarSvPvcHzR/MFvmsNzR1qYfv+IDQeerCop2+wxAlO/nzKvfIWg25Wv
3PedboPP1wflXZht4By9U2Wglg9Y0JCF0lzJsJz1oHQ7twS0aLZdN8p6A3mH
mG+QyX8ECX44c1r+S7ADR2Mz0vrvudPrT9/IUowDScwWQjRkr4JmO5nQB13C
kPJyBNnjZjXwQN/N6R+JHazIKDWKd/EHpwXhdnzhj+EnfFrqO1rlIIVEeiyB
8x3k3ksV7Lf9BOKNe0xzUjbgfZODxIpCLOT/zlhiIp8ADS4M11C/xRrCBLRF
13l5CUWh4uGaXxKRJshcCpLrJnKAYTFMXebVQYDLrmLXmiEdxkzqvkatXgBT
sRFsd+FOmO99PHTA/AXUGkjSORjvwZeW/lhiu3jnjn8V65/1aFxoX/3SeqKO
GTg4K9StaYrBT4xBL9wctMGdNNJud1onaDxIR/KONgzM2lis+c9nwr/KJW1D
QzVgsJB5BreqBz7RKdhMC58F05ddzGj9DiED5dYUuRjJufNtJs39aAsXpl56
MnXVnQUcmttL9iaJw/qNoSTBOR2wo6NEN87nDA9ULQO09SPAZPmmrPSnHPia
Ti0lebAOjBlglF8JG4Bh3ckKp4oLYNM8giGL/xjScf59+baT4tz59/xh3A9d
PMh2jbg4/pQFyPdYl892S0BT8xL/BSI94Puh3G9FyxXOL1JwEvBGAQudupa7
e3kw4dPzHTzL16C2gPrwZ/UwTHpuU3dctAQaWsAKQ+wZHL/EvUPyh+bcoeqw
cOWuw4NPHyqYhydeAw8Wymn0/kjC6jTGqjMpfVBMOXzcHnAXXptuHuCgjgF8
8S66U+KF8O6AUe/vK81Amy3hd/+VURjpjVc0bbQGRsgNqZs7sdBN7vq+4j7G
c0emendXiAgf2n3cJtWluA7GKClmAbc0TJ+bNFd3MQAUz+pPw6vdISVJUNkY
cRzITro9y6lfDC1JqQz2CN6CdVIOPrvUcdjz1ST31HkLdJ2+ZTukx0VDjzx7
F/NYzh0ljrr7Fvb4UOlzHK981nWAVJoNDRnIwEXMGpzUbEOgpX6Z6M0DD6jE
PmOkRJ0ANscsFSeuPoNaHkY+/qztYD7CDFCJTsAJgJ/StbkL0q1JqcF7ArRG
SidIrZL13AmLJdr41YQPJ9saw+NpWEGNdlkpZbAstGd7uvWsxwhQZ/O3u2d5
QufahvruG0mg/xelo/NJKez/bkUVKwJBdIl+JR3+F5iXb1EnaPgTpE/f+PNt
hhi1sCugcSTjPHfoqUhnVfEI4A3Jn5SO6azgJCh1SKJQDv7q5/9h+dMY/CJ3
nsts9YJdScFvSzRTQEZLO6q/UQ6lSVJHybdQ8OVbpW7W5Rl4k+NuUMX2IUj4
tubjxUmOMrVYaXh/vnHuzIRcf5lhQAC1ifK+4hGzgTqq4X9m7+RhVaOa/FMW
U/BjgPp06Yc33PilVCYT8gjsce+6UWxVwL4Fz0i61i6QVcCz8ExmDtZ43THa
bfkN5r2z3z5No0Sv1PqUPPrLf+7cV2gcIC0kgO3BtDqFUWyAfpc78/1dACcj
eElVNc0A75cFMiZSH+jn53IaPPMYjNFtXGbFeAk9OFZtdJ/2AM61hAU27Xn4
oWRDpL35BBxOaXnpCdKgPm+P7k11C547bkeb77aWCWAM9+ix4REbYOr8+iL+
N4B/1vztlQPMgSHyrgdL1hc62h4us2OkAUnxxjF8tmpYeq3PwSurD5DSbvxE
aX9A44AdxdrVUyAV//D9JDY9arKIedsQiJw7Kx9ubJrzXoZZ1Nnf9JzZQRpT
maJHJAKJPHLbIkotQJLW5wXLe37QkEnr0JA7HVQ67Hiom7yCuB5r7QLPBsBt
mbySa78X4Qe7jndVHJgIi8P1XEeSK+iDmN3drH2xc6ecrVY66v5lWBMZ+6Vl
gh1sdPE6pl6+BbGfrz9cG7EEYfSbbf8K/SH5vWSmEeMMQNAqGCA9Ugsz8Tol
kO4hgCX+uFB8dxnyxXdFX/mJhWRZo2Ys2sxoZa4al+M3yXOnGZ2si6+9DJ8N
rWNV3eIANq3hSX8e34IDZ0Zf3X9bAbJS4o7XnwJgcvsilX5SJtjuHBgl/l0H
/zkxppr8GQYtxHp3fp6twqUaR9XvX7CRX9LkhcQO19Ch7xQafliy587V+oOV
lJ3LEOli3FCp4gD7HkUNjdQK8EgCzyWSzAa4zhFjmhIGQSOC0rOqrizwJvDs
lxN3A+y7hzdNfe0jEOzq7wOcG9C1dkf8xjQuQu/Gmswry4qyeWTceSsIzp1b
eFMP6ngJYcYBznwlJSf4yxZgMpajAEsLWm7rlNqAcQN0vUshGK4ThEo+x8gB
zV319JR2r+H+7hSGhPYo+HEmbITvtAXHv6yacxzhI9oBYaVOwuyo+U75l2OM
W+cO+Ra/MqkzIfR/+Y57058TyAus+5ozKEIfqsvu+eK2ILWJbWE0JARODGdR
kd16AhrkzvS/FzfCMEOFhq3YMWBtoDd5s20HHs3/YTrhI0SoXniq86twonql
8ZHojsK5o0WvugWLCeEjATUhzhlOYPUhKNUiVxEOs7n/tBu0BWObh1h2LaHw
37P2Z2/icgGOD1/W09UmOFYooEbRPw7YMVo1h6n24KuEk9aBMGLkoRzJ2bY/
NzpHx1o1dKp07hCgpvPfvhDCRdnEVk9ZLvByPuH1dzolWJ0RmlFkYQfK2YNm
DX+FQTJD8/gHo3ngkVp7OrPYGxhwlSopguIzkDy5tEplvA81XwhW1GySIn+d
m1qIB3jQe8+Pij/w3z53DqQW3gSREcFv11kx5/O5QKz068D9TCU4u1D9RG/b
DrBWCxXfzg2HKTLF3fTMBWCGo7VWLLEFJhUNv6Z1mgDTnxbsZ0t/wg2GkT82
UuTIj91TzTVxfpT2l+N2cLjauXMd77l5jRIRTEjDmYk/5gKTWl7k+eTK8Ci2
o9c3zB7QSO9j/ZOMgGcdqanhHk+BgW7UzpvFt1D8HWFCXeckuPHhbgHd6QEs
rsj5SJhMgTx++dRqy04AtRvfzQo+0Dh3TN10+eMDiOAjTYH5ICNukEJQJ7uS
pAzZ3DPVCckcwOALim3prxHwcXe0RFRPIXAwJJoLVmqDCc0Z+rxcX8BP7cWO
OrtfULp47sR6gxJpJYjozm0RRF+IKRh7JmmfO7ll1RIMVUQQo5IjZKiWG4iV
O9t8w1aBtKQnTSRFDoCJr4/6ODASzuGsH50+LALvrw8kmFW1Q/Wh9zuOWV/B
I1dc6+yxI1jMQ75sb0KNJOn8OGNlEUa30+23Tq7rXtRVYpoqD74RQdv/Nrx4
ghvgi9HVoLhgFXgNh20j7KYj+Pgy/YD3ShT8uipouSJTDP658zny0HdAj4bO
9zLEM8BtPyWlSfMPrCFqtLsyToPQhyR2VmeJoLdyjQL10/TOHcslYYIyYmI4
XEu3D21uAIYcRGR7XwV2UhZRWr1zBBNbE62D7VHwzqf5UtfNYlBBvcWypASh
/YOznUfJ3wDhM7m9k/FjyHzcNpxsTofYXGlyNbsqhla84djAozI4dx5pMt54
K0MMX9598SK66QZYXPeepne+DZuUH+dXaDiBCowDxUHraJguZugZUPBfv8Yn
9ZQAC/2vX9A4kqOaAyLx8JO+41/oNK/L1bxHj9gMkbOqvRZHHSvWrllXGJ47
u52dLtCVGF4t2Z/9fpkHzK2m36OYuQ2TMfZuWH91Ap9UNi6xYsXAEZ6hazg6
zwDlUdrkHkThk6APRNR630HKTKL4C8xTGCNhLJyfyYh0M/Zg5JlLoqxXs+zz
tY3PnTfSr2q7sokhV1+794IlD1DTrsqZ01KFpVHjmRF37oDP/ZIn70tjYNHs
q96zS6XAlvcHeUpkJ0zTLaakZ5oHfmPUM+sVZ9B9aTJOWuUqQpPYwexCKY1q
4uR5YFw2PXew1l9d/9BFDDFt03IyX/GAkKnajnioCm2v3PlOenAH3Mn5WgtV
YqHSaT+NRUspaEzVZx1S7oJdsm8Vr2zPg36sWy/CqzFQJf2k6nRcZuRLiUX7
yLQMOuiSnT8waXbuwNf3b25tE8MbV44/4WDwgvky0lMqQTVoizaJXA53Bne/
qrEdrcfC7VuCjsQeZWB3/uxuPnE3dKJvLSLtXAAE8kexm0mYaLDbCO2oCwtS
PReou/haDtWQEF0SbrE4d57p6xZz0pPA20WZVHLavODGcxqepCI1SLNxac6D
0AU8rH7Q4/IwDrbukuXgcZWDurI/n/YmuqFQaoH34pMfQP2hTHXNfSw0Fd2a
FDS+hggwkurbaAP0TswN/IAaq3PnhGroRdwtElgTcKX+dgEv2F3m+7ZHog7f
1r1QVcxyAYpvne9SCMVDc9JLLPLz5QAHLxO2lfTA16Rz+sk+i0DiHld7m8kl
lDxQ6q+L+nUkc/Wrb5sGguovC2msmtucO+rH9/ep3UhgrLZTxM11XqB/snJX
O1gdFhCE/olmcQWH2KO6G5/jIVsx3W5F3nPAn/qXZMejF+ZZxl/7Y7AE7Jun
dIlUsNEIAT5cP2VWZNeP+O5jvVuoqpgowRtX23Mno2S44GsaCbQkyZ46EeUD
l6nWjypX1eGibkqi8AtXcI3rMv5OQAIkfnjXV8q4AsS24VMFIX0wvZcO56rE
MnihiIuTLoWDFvCIMRrdZkMMevn1l2wUUJO0Pb+eKLtz50gUMf/WQgIr8qNz
msL5gK5StT2egQZMdVWu1hF2A2LqYw/omBLhe2mZzDXKSrDNbpKuT9UP9RPN
3NeZVkD9joiXsjAu6ubTRYity44Y4rQ87fJTRNcsJCy5n9ufOyZE867s30mg
Na6riPMgH8jpZrC5904DskmvsX5rdQNvycOG7DoTIdwKyK8arQT6pmWtbmv9
cDaCndKAYBUMGydKXhHEQ08XO01DbDgQvD+rjMLZSqhq6reHJ58czh3Bo4zy
FhxSePzuzxs6Sn6gPYHtOs+pCdXxFeAXhbv/fTjVcQNOSTCE6INC4OMX/42j
8fVmOACVWam2NY5WgXOKAdZlEXxUtuuF3DtfTsRLhexEqkMZNZp3/KtH7HTu
bIx6JxTdIIXp2bNjH8z4wWPe0GHnx5pwQrTSVmXoLkiLsna+TZgMhSxxylR1
XgL3J7c7uHMHYa4bv2z/6hqYm7gdgiNDgG6+o6jrTOdCajM8J+d3VP6rQ8yb
lXTuXPSnfIFi37VIYa9Ky6eMYn5w15O8Av+3JuRj4/3JoXcPbLSEuk2/Sob3
Ln0QoyCvAq15PavNPkMwuSolvOXbOjD4EuGErXoZ5cVfdolt5kZs0ep3fNyq
6NGc1slqgfO5sxzzMjTUixRiz5e3ua/wA8vqr+s9VlowufvEJWDqHrD53jwQ
apACuReX+obGqkBKW4u2kf57eNxz4k81sQH4XyjE/TUjROPLxNawF24g22wD
4mxuamh9dZSo7i+Xc0dWo3o5PJMU+vCZSzrw3gTFvNEWZd1asFb1d5e8lTt4
+LNyn/9PCtypDAp0z6wGvcokf/8IDUO+rUccw6ObIDsvqfmHJxHKZd0SKEnJ
i/BwfFAdbFRHY27qEaWZup07dlZrLzebSaH+h6maII+bYMWXK+8ltzaUInTF
DfrhDoIyrRNWCx5CROGgY9+kBhDfFlXNoRqB30bU+iY/boGSE4+5VynEqMvf
XUlmdT5E6gZDJBuBJmoiKe30ru/uueM0qjDQ+4UU0m59kGptuAlspxmYvqVo
Q33VGRle5/tg8y2RbcWtR7BCdslA9+or4MI4t8DxewR2pDR85hrfBpGe5r+N
akjQqWMSmroEfiTGRelYzFELLWx/7bEK3C/qqgb3E8oTUnik+fIN16+bwAQz
R1xuTxs2YNH6G2zeB0TJlwPdVh7Bv9MGslELr0C16BSa9+0DnP3ui9c4tQO+
c1OSfBgnRTNtH31eG7mJeH4btsQZ1Eb9j2rLr/XcP3fQDC+7TWIyqBxaubDI
KABqt24mrXHrQAwk1+lY3AOQEMaG0So/hqmMud+BQS3gjIvN8LX7CB1fYZe/
8dgF22qTzHhhZGjWvUEiuxQBJOZxg99Ang56J9fTTfaFx0W/zTX0hoiJDD66
YzivKyMAdNgKfnww04Epn+/ciAvwAIUBCtf8cx7DYpJ4kWfNtWCQ2HQUf/Ij
LF4rd6z89Z/zUMAmhoYcDV2NFigQE0RGHbFV9ox00ZToBapIP89zh7GclXiL
jwziqblsWVoIALwPwowGSTowWYSNevStB0C72K0m1h9DApvAEEfGOvDluPc0
TGMUavCweHGG7oHvazR3LWvJ0TaPnhjWH4LITzBjEUSjh9Jpvkp3UvM6dzSK
vug/kiWD8fFZEYTBAuAzcxidf6sOLDhIaZw68QC+7qWXBGVT4aAabI0OqwO3
VgTLJjtHIYPleCYf3j647wG8EjUo0M9GpPz7aUKInsnl985f9VBKLVer/eve
5854SrProQYZdLr15MwiTwDECDA2yG7owHhVzrynMp5gTLFtJ/ZRKgQpqYSn
P+oAqcK7u4RSY5Dc1r6xKXUfKFKZVuFtUKAchnOyuMrCSNiYbvDbEn00Vnau
iBfzwbkzp6bOcM2CDMo+SKgzeCsA6AP1Xpcz6EKmg31D1hBPIF57RDo5nwqv
i3Y+G7ldD8SsOK7Q1o/BVkXyD+1XfwLnKknrj0mU6Dz313aLv8IIubQPr+d9
A7Qz8ZnclaULxzablZbKjQz2LFIPHUwJgA2rhsnXqrpwykDC9067J5D8G2fD
IpIGqe8nfPpZXQ+e8ORl/7oxDp9WXT2WffkTBDdST8/xU6EjO8sv9xtFkLkQ
zgcpwBAd5Er53Dfic+70tf/C+hhABjPyX7jKHwkAGpmnQy7+ujB1RTPZ7Z8n
+HzTfcM2Ng1+JDXDdaNsAC9x6ufKSsehQCafk5DUARBvKAoS/ESF2paJ/e32
EkVwtn70kNIYoW7fyaDoO9+L3EX/9T2jeDL4MjQ6V4xaEDDffy/YV64LByNc
uARkvYClQn1f7lQaDC4beiMY0AD8eqzIrjF/gvZB9WZZgwfg/SXeChhEjT4W
ksr9KCSGvHtb4/F7xwi1F02gvdvgd+4sjUdNVGSRwTzvBt0ZIUEw0PSxcOST
Lizt8PnaGOwFUrKf0w3eSIdjv9MilOYaAHn8H2uH3E8w99hQzNHiECgvto/H
s9Og/hzxLhS/xBBcmY5ilRFj1Hveqcmjxv/cSa6qq+ovJYOE/kQ+QjqCQEE7
tTACSw/WMGwK/mv1AqovZIl3gtPh2p94wlKl1yA/VpvpLs1naLXs7J67cwhw
dK+HxIzSoF/VG5Tj2sQRAUFqp3+1JmjjV3Up1VcB504nZ7JOcz0ZpOokmpK6
Jwis2Npezd/Ug5giDe24J17g1RWLOfwP6VCeu4Naveo1wLz/rkEk/TNMXTB8
KBj9C9y1+sVfH0aLkjFT4vPGSiBy8scv6XNMUdJRctyTxsCL+jpakMoXkkET
mleyRwmCIMtdVHHXQg8qrWAQjUt6Ay4h1XGaaxnw1dMiLwnKRjBcb1r0lmwC
GvrTinMwHIHWrJqwywJ06C3GsNB/epKIS52HYn6UGfr0UrtCUmfQRb/goCOD
O0IG6zRFTF3KBUHP5YjemgQ9yNYn/8LO3xvkYzGI03lnQO55JjzXwEZwW40+
6PjhBERK6pge1B2BFzM55IkLdKhf5z+f39elkOP4x4vR3uaonqLF8umn4HNn
oWYaw2WaDE7/mhtJ6xQEBpMcWUxNevBp9RFbU5M3KH/BY0fUkwHrP64NfJtv
BGMe5Hu7xJPQsr+GlFbtNxBX+ZrGm02Pxgg7N9H/kkIujY1zjN+xQBuOJl6a
bYWcOx8G61MKV8kg3KgU8ZkVBDyWFATIgh7komzBGznwBonjpa/3aTIh635d
Z6pqEyhYru/OTZmE3NeKVi8v/gZW1i7tW5oMKCb5JWyr99LIEKt+cqyNJdoy
Xsn0jDDsYl/gl7/08pAMhhQtUVAcCwIv3G03WhJ9GLxy+dsLoQcg8/g0a9A5
E576PyCIrmsCz9Qohw+Ip+C+W3GeetgfMM+MYzyAy4i+cSdm6SyTQdI5foY8
tbRCZ5MH1Ldpw8+d9b94fslY5HB/fm7RlVoI/GQJxHomqQ+9qs34NT0eAN+N
rID0t5lwyfdjTz19M1Bmlz08eTgF+w/n+D4zHoN9Im7BVpQRHbirPHArUhZp
XIvSZLC2RulDswtxqi+cujCZA0VScmj20ps+QkAIhC7P4S056EOWku2oxuoH
QGZL4ZMGURZ88syB/0pkMyi5FSddTfYF/vnK1vys5Ri8bDjl6gi9go5cdW2b
sZVD3ju65AUL2aB67p1x9EoR5w4hg1jwZ0Zy+Kkqi9JIXQi8RzFezT7Sh1fb
vjgsrj8ArTcO2X9ZZsF8SdH4d+vN4ArGz1qc9C8QetvZNpicgOJJDc5R2aso
i0r562RFeWRxzFigoNkGPcLoWuf5fuFw2u7jynORQzLy2RsbjkIg8lLn9dS3
+rDScM/oK6cPeL9mcPDwVRZ0v0fPkaP/BvwVS/XHovkKnWYUnTH+nIDLqQ4s
W6dX0T30UhMnNUAqDvbdt+Vs0RtC8k/kQiPPncCFmKhIEXL4F/vvSyRcCLiL
G8b+W9SHzCbds9kOPoCb13OIBjMbYhALOD9vewOCPLd6i558hb6xPXRxuX9B
ViYRFWknE2r8bGf4cQJABtioJ+/326ILZG1a+sxR504tc/xUESCHzoFiX8xy
hYCLSsghG6kBvN2VHna12Ad8tXCRTdHLhpMzZq3r7C2g8ErY/Ler07Afoh8V
ZP+BjHlXYuE4ZvRKdupp2BlA9npC51gM7NB4StV6t64LZ1MyYDFXgxzmZE6u
i78WAp1ZH6PxJQ2g7H2NVrdvPuDTa5aFvWfZUEwH5tg8agGK7ixMzSXTUIA9
41Ro/h9oDvBNvcHJgroT25f+9EWQ2phbvzAW7NBQdXbjBNfoixyp7Vqopwk5
pOXLIf06LAR05H4jlXYG8M9aBEUUvS84wj00UjzMhvfl9WPw/rSAypbEBW6u
GZgyVcuiG3sKkuxoW98ksaBBr3GurO8gSM9b3ghSL3uUs9mqvZoq5tzB3d58
wO5ADhNbse/dWhEC4w83hfGTDeCmgSu2g6EvWKoMkItWzoHOSjbks3Zvgefu
5DPhmhkYmajYk8t7BjoMd+lv7bGg2Maunbaut5AoJo5ZdWwHNH3HTe8reuHk
48mlNt8nh05XvjF7YQiD7H/85hyNBhDlniYhTfUFuDJioC47B6o9YJlaeP8W
XKUkWB4V+QbJWCcSiD6dgSWWiYFu42voG67DA5PlW0j01TT7xhwHVP4e9CTz
ij13mipgBlcQOfzgeF/GlV4YvMrHrMeeNYBpH5Rrot/7gigsF/yh1Rx4k1o3
jEq8FTw3TJXGavsG22N8UnTlMJBKQLQp13ENZa4sJB+xV0Acjyps1G86ojl5
5o667HHnjsOX11IBseTwkGd7hEdIGJjK5fOW4hrC6o23lj14fiCk4r3KqOQT
OMXzscmzuBW4wSXFToVZWHs28YQvHQM5TBV7XsN5HZ29RefXsaCAEC8MXyXu
d0RXd/Scnk5fOAxLYhIvUskhm0/ndLOaMMixtW7BuWkI28znskZv+YExLtuG
rsQn8H2wrMQfwjZQQU9eS/p+FvbeeD+Ss4qB/GhS46RIvY4uD81F89grIrH2
8zN/7JxQDQnjgt8Z8ecOjX6UTFs+OTQq+mJNai8MJi7hIDeMDeGPvsPRyhA/
8OCVOHbJ9BN4OlHYW+nbBt4uqkusGszBrAmSnFQ5TIRLOqLgzsl1lBDPMY9s
SRF5Rvb4CxnGHXRSV5TVVjfh3JGXEd979ZwczgTt6AgHCQPg9aGcIswQDrV/
idF64wf2FJAjN95cKHOHhD9yvg3E3c4pU52dg4+PeJ1pMjGRsyhlUO3Ein5T
Zrpyz1kJWfxWoKpbeAd94aOH+YUs8dxJkEw5jqknhwo9nwrY0oXBtHBTf0e5
IQxUxuSC+37AhZxF81pILnw+a6kQodEOKKcElulEvsPpfps37JuYSEUmj/r8
GCtaqFXsIr+lhCTx8lu+Bc4oqyqbkO34hfP0WvaRXDs5bFSp5198IQw6WFPD
hEYMIet6CO8Zrz+QZT0ZQIdzoZfE6I+y5nZg+e+RsnbAdziM64r/TgELyWme
OMUEbKhxcstKjLcy4tqKL6++6Iwefy0tPs5JunD6H0RO95HDhsHbS16dwoB6
DCl0OzSEkOYUh+iOP+D3NBDVZMqDgTvDB9vX34FsgrO13nffoZ6U8+y3PCwk
CeOgiLiGDdXtDT6RO1FGQMk01aVEF/RecydfuW3yuUO6FydgMfbfPD3jKxj9
IgyKwfQvtytGMH92hH2lyB8I086bdrnnwXqfdHvzh++AySLyPhR7Hj4jauqN
OsBC3EbZg7GusqME+laELtEqiEJg4Nl3QVd0S2K43IEv5dwZfVKWhs6Qw3/Z
uLyYe8LgD0m/joiCEczEmT15/NUfoDn2OGwdedCo65Bt/c87cMWueNtHbR7+
zuvRr9G8hLQrH87NJrOjE/sgDIv0NrIxwcC4OO2Klkt/+yD298JpHVUUJVoh
h+517bZY+CIAh3vHq8fFCBIYtP0ioAoA0mTx+PdJ86HCZwbRXMcOgCHTZfzy
8Tzc6f931eL5JYSovJOl+B87ym0dBwnybiOv+B6GEca7oWRGUtZXRx6eO5Ni
L4tk9shhTWML/gSTCJgjmGRiefyfw1UUpacZANr4O8VKrfPh/UOpbNfRDhD3
IIqSaXIeYvrmdCVhYiOXRxqzVe5zoPalrFIhXKpIj0YAMBK7i1q8bTule/bo
3LFXpDXVPyGHmV9IloNFRUDGsz5ypSYjyCXrTOIWGwAGd3mdul7lw7hPdTeq
mSCQof8gNHx1AW7XRqxKW2AjYdU1JR/nOVAf4zIT82ZVhC844V7X8l20ZIea
I1P28bmT9nh1VgeHAn41ftVypC4CeP6uY4vOGMG10qeYBh0BoHbH7f77s3xI
kcYEXhtAIKkfPtTssABPO8TF3JqxkfFe0VIpQ070U4tyYomKGrLv+JxC78k9
9CP+8CbXywsnnq63RpSUAh7GPZFTsRMBQQ/vVu9iGkO+taBe4t8BABF/yNeh
XQBLyFxoBxMhsGuW/j3zcgHiE1aZ01HiIHOddy9FD3CiLl9/y+l+UUOKvnFK
YGq5o9+jZ2luM6Re5L3NnQgWPQV02L7Ec9dfBPSEZLf5cxpDRoP17hyBQHAr
aT8kr7AAfsbgk9+GEMgOak1J/1yANNNsxLfu4yDZdGc8L+W40PZu91XHu+rI
fvHxwgfs+6jQ2LWF/cQLR3IhjLj5OgU0s40TuPNQBJBV/pwb1jCGXcYJ9ofO
gWAblw/Y7hTAjSQsVZYjCBIrHz0al/oBX68yY68M4SDXhige1rzmQlsGOY9n
MTSQIb5Jqvb2++iQG1Uc978LB7NbK9qAlwK2mKv8lSgVAX4vbdFdT2NYSl6H
x1YcCASxtw3J5J/CxxGOA9Z8KKD/KKv8LPIHbGsQPcPhxkVe3JJ8mszDjc4f
+a+9zdJAuKaEl+1lPNCeM0zJTY+0c8d1WJt6WvS/ccuiE19oEQGPPoviLWQZ
w+4lH2r2L4FARWK9pOLhU5gYUWBcZY8CtdUfXC8Gf8DLT/+hBbG4CMUtm88K
z7hR8reZfL/5NJHbLC2RR7keKJYWD4f08oVTNfqYV12eAoaflsXYfxABt3n0
DEpajWE+X9XOb7Ig8O6gi+jG7NP/9u3nKTi5KJgqlnJeoViE1F37VNWLuEju
SWftGOMNVGcoWz6zVxMRFAifyTn2QN8PbvjRWKZfzNNObuGy2xSQiSkjvn1R
BOR4yt8W+m4MZ482jgpvB4HykMPADL5CuF59Fd/tIwooI4gkzcwXoUWcaY+Q
Ah5SojJdJ555A2Vwic19bKOF+Hh2uquYe6LvyWf1Qj9fOCrXTB6t6VLAK4TP
Znb/iIAdQ6WwNGwTGPo54yFDeBC46tg2sRJcCB+FcDjN4HaCN/kMnzBLFyHT
F/YyvhI8ZP2fnpUnKQ/6Zd6idfVEC7FhDW/AavdEyYXPJry0M84dEYEnpXTm
FNBuZ4ThlEQUTLVEpHVxmcDpulEKl+YgoDeHQ8j2vhACZgtVU9lOsIVg+X7b
XISkTAuJ+Zj4SOCDQ/nQRB7UOprsWn6ONlI+lMo6yOyF3lz+yHwweOFgYXSN
CzlQwGPp+1NLrKKgnOeMtlfDBP6qz19I2g4C3hj8kaXERfAxbqvhvHcnYHzA
ar0pugSn+7J0Q23xEUm24kULXF404K9auQGjDtK390asIMoLFa8KVMS6nXmR
K1tdCZK4RwHxcgyeV0iIgueZgyW5HiYQk6XLLIo9GNBuu5jwiBbBqqqHgg9e
dAIOJH6cL2wJmifVT42i+EiHj+QsYRQvSo/nbYPnpoMs8dXaB616oXEba8YF
vRfORov3L25fCsibt0StoikKNnnwu5AME9iuvjahbREMYiVOw8otiqC7l3UM
+XwnmPn+nqG4fwmiIj8vZV0nQJCmnM4EDD7UEyMiwrFVB3mbKsXioOWNVhHv
OfcoZ12cY1wWLcQLo4D37aReobaiALMYD7et2QTyRjys20sLBj5Cd/aoo4vg
05vzJ29ou4BwDn64EsUybKDSbh2IIkC8xCJ5PofyoRnPTjTciXQRWW+heaNG
b1Sy0jEysP/CMegOfT8aRwHTicVP6HxFAUel8S+CaRP4ZpdM0WUgGPDIjJQF
vCyCD+8sIK5aXSDXpFmXwWIZ6mHOrbstESBh6RlNm//40OvennjXrHSRoMJs
Bv2rD1DXDtmXberZF+fOW6Lj8Y8poLRQWahmoii4Mz7FyHtqAq3y65abzoKB
mglW9uhYEfzBKIPLHtMFZKhK55nKl+HBcn9kkMplhIRHBudDCD/6kTfwV3Ct
LkLwN1/eJPYB6kRTtZz08cL5o0ePy/eEAhroarRaPxUFcR0fTq5fM4WhSM7u
V9EQgE3j2XH1uAhminX+WW3tAgZwPFpvdxlKLt7wO6q8jDS+LWsLPOVHl/Df
2ERc0kOUCho7HXcfoE+apUVWjXIucr5f443viilgkxmBgE69KHBt/kW3o2AK
+eUnmz+7hYDI98wMVteKYU20yIfG/S5weuqR/lpqBQZv4cJZIkLEjacuZjvs
Jvq9fyqFz1gPUTUupg4y90HVctcfjc5eOPsNJIJyLyggvdqSCXOvKFCqf/jz
sZMpHPO7n/q8OASos5aVpN0uhqHSAtJJ3N3glusbZ8WYFWj/k99UwIMQiVf0
iqXCFEB/Z2f1hr/UQ45G/Cuz+3zQmxEK+yrOT86dvZsR3S/rKSDG6o1Xw19E
QWbffQKCBFN4ymswqjMZAqZ+XDdsvV8MVbCuHzjbdAOWwCU7zI8r8Hm84K2N
cUKEPP1mRMYtAZQevjEIxNBHFMhatt+K+KJUFH466j8vnEeUWK14rRSw+U1Q
pfmWKGihpZ8wfmkKL312HxwlCgVrZIB/KqsYngVK1GtldwMtDJYf6wyrcOSS
SiiJBBEi4ruc7BstgD4Qo4qiN9JHXF9pGS6W+KJ/+B/kT4flXuRVRVmWel0U
cPj6YusAhhjIvwnHQoZNIc1ayciNW6HgWJ6VZ629GL5SNL4pM9INZoRdNTGc
VmE1nTzVk3wi5HiTF+dtrwCahplcYFmlj+gEFGlQUvihAVln3b+J8y7y0fKI
n0lDFBB7YtuYjkoM+G9a+wbtmEK9l6P8Fn6hIF3wnur2YjEk9brMKYjTA/hV
HuEjdauQadmdJBGTGLn5WU/FikAQZQ4i31O6ZIDENT9RUIn0Qz1HBxtLCi6c
s2ndztfjFNArqHlThVMMcC/1iuqSm8HQxW9STlWhYLBMOG6FsARqewQa8cn0
AJloitCqv6vQz6cw8LsTMfJ6wrzeTkMQfeBROjRqZoB4Eb+uCPvph9r4JBp/
4c8/d1Zf7BAPT1PA3Ka/yyZSYkDAsizqTMgMiuW8QlTnQ4GHy9+FT0Il0NXE
JljAuwdsrjIx3Lq9BtfL/7rkvSdG7jj8Ke99JIhGX9cPxmgwQP7uYqy3Ovqj
9B2Ej/PRC8f4/gu6zz8oYFCYYJ26phhI6c39GGtgBqdeiafi0ISBuSdvzJtM
S2DO82MTqRc9QAj4qWNmrEHJBOy9FiESpHw8Oi5hXBDN45LSHyU0RHq7hXxO
pvxR+xTVW5uGBeeOp7AS6/AGBSyaSWlgsREDFhO3klZ8zCBHnrdvnloY0LgC
d5PCSyC+GVaN2nwPeFLvFLU2twZD6fw4pZ+QIBEJf5pf0AqhRWLRxQqOhohw
VlmzrGYA6t0RrtW/ceGYbmHda/z53/qGzWww5SUGkgVusVzPNoNPlz1kCcPC
wD3l4WLD5yVQ2qFIzpauF/gO1oke86zDKltlLiYMUmROdqeA20IIvTrg0mLU
YYjURd1hiuwMQBn+KaQJRD09d/CV6oUfnlDAofWJX14xYiCnRu9Y7I0ZxO7T
ETRsCAPUTb/dKUdKIFGc/YcQ7f+clbgpIf91mI4XR253hxRRM8gowikWQh+/
EdgmYDBC0kcATb9EIMq59XCV7UrhuZO48qbB+BIlzFfK+7ebLQZYlLQjOb6Y
Qepc9fyAlTCQbdho0nNQAv8GinEUxfaChas+i2nd6xCD0xYb9wMpYq1WwSW3
LIQ+a+TJsPAxQg7yWglJawNRq7kp7rKmC2fsLhMXBSEl3MM16Nd7IQa+JMkz
7/0xg+t8X+3biMNBT+J7azfGZ/Cfu9Hl/vb/nifE4BM9+QY0HApPi2YkQ5yk
fYvGeIRR31ctGFqjRkjgHR43I64g9LMvZZYJd9HFf4OfswbbKShhjumf1zlt
YsB3w04sm8EcauGfhlRyhoO2h2YxOLeewTeTqoqHB70go+0We5/lBgyCSpqN
2mSITMAH705PYbSfXSnxG58xks7zuqigOAjdf//Qls3/wpEuSR43Y6CE4teK
mbtGxMDHB9I89NLmcCzVDEQj4SBkc3Aw3fkZZE+eLODk7QOaiqlGuS82oNWN
mD6qaDJEVAqXjPiNMIrrrBB/OckY6UJ06RYZg9F/h/jfG/sunKtpNwLXrlFC
C+xku7HvYkDPIcfaz9wcfrFQH9EwDwfxbJ8FaR49gyy8p/NW9n3g8ZOWtbSj
DXgdpz675A0Z4mu++qPuVBg17BTW/7RqjDz/Ny3LnR2Mkl0m/kNEV3zuKPxz
OHDhpoQGOEITvftiANewSLg+yBxy/+1Qu+QTDo69A9qSG5/BhpGNmdzcPkBx
TdeuVnEThn0rM7TaIkPEJd5a1yqJoOq5TxWlVEwQbFyKkLuUISjDEEk6t8uF
UziL5TcjQAlFa7RGi7DFwSj7NM5gnjmMLpKdev4wHJi3/7t7NP0Mdhwcmk+P
9gFGqX9K+6mb0EwxN1flOjlymiF4iJcigk4FUTVLl5sg7+7lIdWPQ1CrcK90
wtYL501cuSgiQQkrPm1W2NCIgx/p0sIdrebQuvZ7jlRFOKhNXVcywiqFA+2p
fCwE/aC9+s4Vk7lNeNvlOqaVMTny76kH7ZtPImgFLR/uFI4p4v+I7GidJBQl
zs2YrScuOXewcSbscuQpYdYfz1pcLnHwO5mLNm3aHL4ytappRcNBsAm+WiVX
KdS20LjmAvrBs/vC9+d5t+D0Vzb24mRyRPsMQxpeEUXFRWIfkjiZIsk1Z/js
D0PRR0yjxsy2F0636CWBBWVK2HC7UjJdUhxsS8cSKpyYQ3gVV4pnOhzQZloE
72qVQpG+Lrwmv34QXb03kBK4BUvcPj8j6yRHKjE/fGZ2FEXx0jqrZ3tNkUOr
/QUzkjBU5kfivE7jhVOdmz7MpEUJ30qPZOCqiwOWsXfOYwwWkNq4yyLhIBzw
3Ob8zuNTCrfKCutxX/WD1hu0by36t2Cj1CvGqiNyRGCEzXqiWhTF6o7vVOEy
QwqavHaTHoWhG6lCliqXn507D2ZXXLUMKSHJUhaZrYU4oCQbigFSFjCmhUl8
gjgCqN/97m+eVwqzfRIPzJb7wbelvRFNmm1oMefO681HgbxvKtP+8UsU9f8X
wauaaIa4sMePTOOHozkhmi+xbC4cVkZ7MU8LSnhlSfa45J448Hkk9SbF1AKa
vpdfI+eMAFeTRdXC0FLovXijuP7qALDHKXxi47ANBZuI/BztKZD5LNVrykAM
jftsorGwaYaYhQi9cFcLR2eUg19GNl04WHOelnH2lPAjcXLB+1BxUPBR2uCt
vwVMsNpOkwERgMETzyR7pRR2215NITYcADQEmNUZ9duQTru5IPIJBRKqZKJ9
miCGUmG+iaLQMUfCuomQ0ORwdE83QqaPuPTcGfz5mCjVlRK6Nc8rzj4SB/vE
pVW92RZQ9zBd38g0AtCs3yl/RlwG279vpbglD4A+uaaCNYwdGH4yrDD4gQIR
ZXA0Ivwkhj7FVhX90mCOLFw6vH35QzgqRKYi89HxwslY17//0JMSJgzIS04V
iYPOiV8UDU0WcEpEVs3aKwKQVWRLlgqXwfEh8sD3XQOA3o8Uy1p7B7oFTRPL
4FIiMVFqr+8yiaPu3+q7ReksECHCz34UFBFo2tXluIJ3Fw7GfbfaMH9K6BCk
0/m2ThyMeN+bDPtsASUU8jKNkyLAgAA2zRPTMmjJucAlcDIApP/geh0U7MBf
/Y+LJ2UoEblX7KvXXMTRb89ysjhDLBDXwNKoLMMIlFPk5Qk/XdnF/xT2L/84
hFHCv8P3OWI7xYEY7eltvgMLOMaOYyBfGgFWlpRAZFgZ9JrP9MoSGgRn9eJx
lZs7UAUTluV7UyK3FfW8brwWR9M4cshqFiyQwCbX61lPItDHv654R3tdOGCI
7IFcLCUc7Wx4ITUuDuK/2DW2UlhCDPqAZzTtEWCRmanduqwMemvKCJy5DIIB
Xdftd1d34XVX487EF5RIGp/Tp5gzcTQh7PaT/tuWyMwAuEw+G4EWp2EOFAxf
OH+C+1SIUihhs+5B2tQPcfA+hsWFR9ASKi4UFH/7HAGwLHxSBYfK4N+BZmnX
4kFQLv8xTkJpF0alWxQVz1Mi5L58qcLqEmjBM4kc31eWCK6Q/h4uayRaLesw
Gchdfu78enkzfySdErKwjF+zORAHB6Ipr4K1LeH2lW63jO0IoBZs2nm0Wwa1
Hr25Pzk1CJh79q3Qu7vQJGNl7TsdFaIpWs4rnC2BZm9u+TTTWCEEuT9S/Jwj
UaGkXD/G2AtnVfZHdkwuJRT625kzii0BXNGJsVf3LKFRxAqTNF4kuET/16Ce
phySlTU/VyYbArSfmhRMM3bhW1smtds6VMjd5L880T8k0LdPF/ISQ60Qnyi1
LLuaSNS6UDUy7MeFw/LrrY1gMSVcuUoqwUctAZAz/Cs9SZbwHUft5ChzJJhY
qNWylSmHtKd7Hc0qQ0BWpx0Xo20XHskL3JuMo0KcGmKpOQQkURrX6Ac7y1bI
n2+/Yd9BJBos5/ahHHl+7hT5jDOOPaeEwgILct7sEkDtG+V4W6UlHO3wrjeR
iARDVJuvse3KYcQb+8wbYUNgUtU6oPHHLszU0MV42EGFHFKjHnQhkmjxipDb
krY1cuNhQHe5dBQKW/TEUosuHGKKtK07NZTQmU1z45moBGjXHJXL7rOEBGNi
Qx90IsH7Q5CSH1cOPSK6cAqbhgCF7ot7AYR7EP9aU53bERUSHK7WazYoifpR
ym26tVgjtYtexmeRUWh2a12KHEbFxfoWU/ln/zUlzBzVDOxQkgDJRIRlBkuW
8P1Ktay4SySodrb5xlVdDl8xhO5QbQ+Bxu8WTerCexAv5ZGAx01qBN/ie+Em
rRTaa+slhJLbIBU4FQKjg1GoyM/8lzU2F46xD5O9dyslnLf9zNlrKAHGZMPV
DrGsYHK7HPujiEjglkj7snKsHLph1gsms78HQ3MLHLzme1DRGZcv7w410vjH
LH7YUQrFe1h5jUrFBglBjnGvUEajSPFjx3n0wnk3ra6xhlLC2Ecj/G8cJYDX
8rpXAIsV7HDBLJh8Egl6LbX+Mv0uh49FeKqwLd8DZUm9dIaoPRgWKG6yWUiN
PNmsJPzXIIX6husE1QTbIPjWrqlz5tFoH47P4wnWynOHS3FlwqCfEqo1sA5k
+kgAM4BjOy9rBQnD0Q6y+kiAEY07GX/1OeRnsJYPzXgPrBPufKR5uQePAm46
2E9RI/1eH5sCsaTRzVvOR4/qbRCNKfo4xrJolLSuBONh7IUjsoXN1jRCCf+U
dd+0jpEAJhsPjfjMrWD4zbPnUoOR4C+mGbJy6zkMjnR+/3voPXg1F9nAMr4H
+ZhXLmGQ0yDxm/O0yrrSKA+/k9abVRukjUCj8MN2NPqueTkBb/3C2e5lNCD+
TAnv+VblUmVKgOwT3QxLfyv4y3z3vuFCJBAlD0SknJ9Dp75Log8uDQPnzFIK
iZM96K8pv4Gq0iDhtqftVkXSKDGLsCQnsy0SaXAn9UQiBv08GHt2S+vFuXNN
jyDObJoSjh8ug6ZSCcC7wmnmlWkFp+sjBG2PI4HH3+pvESn/OfhJ5rtSw+Cx
uGu3Bes+tNH5N1IRSYNYUmlLdu9Io3frbnjOGNoicyK/qAqjYlBrUSUR0HDh
qNpSzxTM/1f3MmaZKL6WABz6p8tu9VaQvdUY14oiCjDg6V15V/8cpoTvX7/n
NQw+RBEWPVTfh068fQ6vW2mQYNZLjL7yMiivG0PtZLItQq5RMd8yEoOSdDgc
n9K9PHfM2w49J1co4QdwRNPRJQFQdNpf7YMV/PT9A57GjSjwwHri0s7kc8h+
1O2+XjkM+P2NQ4a99+GjSyz2iwc0SKq4xqH3o/+cE1BL122LUFnrv1JniEWX
fapYw8IuHMeKUSe8bUo4IulcyzEuAW5dX9Qg2bSCP4MwtXluRYGfDO9yqf49
h6KqLKzO88Og7EGdCH3+PhxJdoiQ4KdFvOTNzdvnZNBrLpq8hSf/vR+1A1ED
p1iU39otAi5fODgGSlN8B5QQQ/muSdCCBIhVsCxsxreG5OPvDk5MowC7zNMV
/usVUI2wnm2ZbgRQuJMUenbvw+aCPr/aO7RIvYTlvK6ALLqhZjXnKmyHyG+8
4huvj0WXSIMXO7WqLup4bscfaseU8MH3WqR9TwJw3Wh4qcxuDe3ps8jfeUYB
6s4re7IqFbD/1msTB50RwC20nzmxuQ+FerXO1ItpkUs4/lcEI2RRyj8YMUFu
dgj5v3Gt/rNY9Dvf7auxzRfOET5aaoVBBZfvUjzdxJAEqurBVa2INex2Hmv3
TIgC83CnHblbAa3E1ksX4kYAddvdnyrUP+GV05HRy9O0yFuNvhKzMVm0ukvg
y8dndkjnzqSusGYcOvl16ITgWvXF/HG6I+GCSwUPuoqeEpBJAquqkGkaK2so
1xxMTlscBQoiZwykUivgH/2CHZuOEdCZQ5vWI/sT+tivVW5S0SGf75oSjrDK
oe85jHJcZ+yQmTrLHcq8OFQO/4m2VtKF02m82uJKRAULC595UzFLAuW1Gk+T
QGuY32/BVvMmCgzXNrVxNlXAcN5c5rlfI+DEjFJT2+knrCbAV9jTokMGPXm3
E33k0LIzpbDb1PZIt5fQd5e1ONS96euK3q8L50aEiaI9BRU8Wn2qQcwvCTiu
yT0Pz7KGU4zHxOIfo0BvjPVfgukKSBjNd8WS/wOIZcLBWHr4E9J/MTOlS6BD
CJh4Fh/3yaEzKFB31bJH6sy1v4lIxKMZTCbptHY15w7fkf6+Hh0VJFg1MjmQ
kQQHg+kNj+qtYean/KW6lSjwBaeHYf6sAur7Xhv+6vgB0DFQxcU2//xfk3X+
D/XaBnA8KSeRUX0fu0GLpZQiMVMd941QoQUVj/IdMTjJMikqCs2QXZbSlKM4
nRhDKiSF+0Yo0YylskbWxJNkyak4fmqev+D9ul6vz+u6LuR1sSWHUaUAT/zQ
iXyvaIKd8748eR15AlqC9oyAyCs4si5Q/VajyCkWF+umUQk0cLil+sU+GlBm
HW7gNLqgy7dtK6nzlxf+qF5q3rocJJdfqnQ0/TXYaTJUbtDzFR3y0pp49VMB
hoX0+5/1NsHmS3yigvAJaG+h2av99greEmt6rGfH/V9Oa9sqDYV1C70d9ayI
c6IBb2efDSdGXJDKjY7SEDk26El+QvHZk4M67xeNtbS8BinDmezRZZOorb1y
3NFYEbpq/GPiUGGC++G2ILfvC05EodNBrSj8VyhTvj9H5JgbvmoZ0yHQp8MF
AcCLBl7ELllEiJMoQKN5oHETG1SIH59c65ODDilnXteWEACH1MGigq2TSH2x
wG3ZaUX4onWqZpckwNKHNu5ONnSDLVnbasYCo/DcJ5V4O+mCX07voNiqp3oE
IvEN2Q+BNOB80RaOyJKIhq44rtrNBt2c4ebGpBw0c4DjNqghAJUPXm4JdZpE
/lp6Mu/yFKHk1tjgSX2Ay+ru3F/i5walj3O6ftZFYeuW47cIc5HTbqv65ZIh
gTY/cS9nRdBAFZhmFVJJZDVN6Fo5s8EHRnCRz+Mc9K40vilrlwD88O5udro8
if4ZCMirG1aEH3O7EhqdAbZRtgks4blBa6UipzClaPy/QwIVw2CRM1dNjd65
Y6HrDH72RMpCB43sfJYuiZgrD5/2O80GVVd33xbvzEHfAubfkI4CkMRdfxHw
J1Eea0i8fa0SZJEBgvoIgDltVs75A26QyVz8LdA7Gmv33Z4qLBQ5k58zJscB
gZ4lMmYZWTRAuaC7Yj2dRAnfx81jotlAXyfoZtwiHkrebeuhekYACm7LUba2
TqKu8QvNUi5K8Fn2bpnRAoC/Df1HbVDdHS490+nbWx6NJ73bpFPGRI5A6o1l
ugWBLuDWNvRgYe/EvLxXb0miBolDxWl32CCzcn++9Hoe6g/QPNeWKAC1/mlM
3blJ9LO5ufsYVwlGNRco6nUAvPHpjVAXZ3d4PrkvuGxlDK6PPGbVpPngl5Op
nsKF1gRKaXzKoiAakC8bvsZ0IFFmUV5nWgkboC8yPaF7eCifz1ycyheAkauL
3PW1ppCeLf3j61YlONQVUpWyFOKMZFVTpTR3ePjGxzYp9xicXDQa50uKnDM6
NuLdBwkUMb5h1KaRBq6/LJ+YciXRslCxhpjXbLD86ZzRyCkeetOtNru/TgBm
NVd+Mj0whdbU3ylmrFSGCVs7O1W2QMwttVkv1+IOSw5OwFclMTg/dW3VSa7I
Oaorl8Y6QqAelcxTwZ00IOwzaD7nR6J9qcQt/0E2KJD1KbNK4iFvgxS75f0C
IE/MtB07N4VSA+9IrbZRhqc9GUa1ThBbIuPRQ7JM6PLewG9OOhaXyYY01LSI
HKFZts+8M4FqV0lRb47QQAO1Z/9ECIn8uUHH9/5kgym7B4G3innI4qfhsup5
AdimZrX6cuYUMm5h5fVdUYZcYtndZA7Ee0ttHQXWTOioJK+eyYjFmcF2SaGU
h78cO67rLbYrgZbal63lfaOB2fcrQl1iSFTpHq0tR3DAkw4Nn4F2Hsot+ntF
iLIQsDTEzj2sn0Lz9p8ZzdXK0CRu87ewAoipbFIvPooJGR+NVjwujsWSpb3T
aXtFjuRR6+2LPQnUvjzsrxwJOtCkPz2P00g0VMySad3AAbKXVLPXzvOQ3lyR
k6GREFAge+zT5BRSkor/3LtIBU5WpIondUBcO//n1tgaJvyZ4v51p3Qcttlr
3kOJEDkhl+UOBp0ikHvX1ec3CDrgW9w8rPA3idRHNddFQg5wWyex6cjaXDSb
TQ6OHhKC3w2v2+lRp9EZJ4YqZZcKvC5BcqskTPHHI9y1L8U94Aq5rHgD1zg8
fvy8wQAWOexWVbEhFoE23L+Te34NHQydkd/g9ohE4YVeIbpHOaDLHi4JtcxF
B2pf38vyEYJnyYz4YMtpZFBKPHI6pwIrxWQT5fRNsY4ZfGEJPWChi9ZNbkkc
jv7AbFWYEzm1od5OtkEEoh7sOG+9hQ4U3x2QuotItLmiftNzHw7gNRsZ/nky
F/WUHbnmGC0E+7ROhjX7TSPupZGg6iIV6BsYWRJ9zBQzrXoGl1zygNv+Otbq
T4nH1AtCHo/+6JdDjj31yw8h0Hv1gcOU3+lAzkVDtqOBRHkefKuDHA4ANIfa
Bwm5aOJ4YI7M30Jwfj9Xdht3GoU8emJkPaEC5w0lhtWiTBfunAYUK/OA4akD
syXMeLw3wiONGyhyOj3PHvntMoHCrve5Vu2jg1oFVVuJDhL5utB7BTc5wCbp
t8rSR7lIa/nbd5VYCJZ76av/WTWNGr58KvmyWRW6f9f+2lpoimt9JdN3fveA
B+4kP/ctj8eQUhY+XChyltWXaDheIdDFugvY05EOml2T2zWHSRRvH7Dc/CEH
OC+u0H3yNheVCy1VznYt9GbSlLJybBrp212oKTypChPI4Xx+jyneq/29opjm
Cdfo+E+lyiVgyQob25SJ/5uHYv8hK45AW4StKfNMOgiTT3y5c4pEdak6b3l1
HNDrNSaT9z0XUe5WntSeFQJLNssuXm4G7SfHN6Rmq8JXddfHs6TNcGTJQ1/f
IE+4rviZxUbfBFxYE/I+fUvhL6d7sDF3KIlA+2gZc5EBdLC6sFPfajEDVT36
x3Hpew64RZHwu6bGR7RQj4o2ogncs3eDBJhBXjLkg6QBVajp0B/31NgMCz5Y
sJiPPaGkzshZvboEvLyaq7TUV+TYGHskrksj0BvzFeqLw+mgJkhMew+FgRrU
nO7aTXHAUZuQI2fM+KjtdjAleksTGCjfb57lNYOePfdan7eGCvs6mp2/uplh
PKoVf3PaE9JPCzWEson4w+3Ovhd5Isfj9upMp/SFv9fovaJPAh1cC7coN1Fh
oP7a2PpUqQhw36Tu1R4PPoquOGVPs24C2Q76pjuSZ1CYn6FdvwsVpvdVGey7
aoZ/fKJGy2z3guXzrkV4VyLu8GaqjY6KHEoveyIqk0ATsaT0q1t0MN5dKKmr
w0A7Cnjd9RoLBznI+e3qGD5Sta2PGPJoAjvqjml0PptB80n+vxmnU+HuTM+P
lWVmeBVhs6nijBf8feM2h49/JOLPWy0fnNQt+uXo7tVKfniPQDKqJ+VVeHSQ
dkOeKrOdgY5GZ4xPGUUAqeL7F5vz+SipdE9GyuUm0BF+to4zOIPCvQ9Sstup
8Md8vb3TyIIjsdEkr8hrob8/eizTErFq9fkQK2+RM6uwLrWFTyD9nV5Oxx/T
QVH1D5lBUwa6uWfjasI2AtSkGb280sRHe4rRNZDRBNodWFRj2W/ognqM8TYF
NfjfdGublfLmeFD9SuS7KS9osNpie9fzRNwWM+IRzi+C/wK8g3ms
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.9266394614520364`*^9, 3.926640377176856*^9, 3.9266404140820513`*^9, {
   3.9266404788516536`*^9, 3.92664051845539*^9}, 3.926640774324299*^9, 
   3.9266408183344965`*^9, {3.926640923803655*^9, 3.9266409317804904`*^9}, 
   3.9295545008006887`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"d59eabe0-0a06-4472-bdc4-31e0493242ec"],

Cell[BoxData[
 RowBox[{"2.210209982614508`", "\[VeryThinSpace]", "+", 
  RowBox[{"8.963814438008505`", " ", "x"}], "+", 
  RowBox[{"23.551335687657247`", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"35.25458361576668`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"33.51959470957631`", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  RowBox[{"21.39510752775396`", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"9.436000323117979`", " ", 
   SuperscriptBox["x", "6"]}], "+", 
  RowBox[{"2.906002723660472`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"0.622192651660749`", " ", 
   SuperscriptBox["x", "8"]}], "+", 
  RowBox[{"0.09064484842554649`", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  RowBox[{"0.008562227352084718`", " ", 
   SuperscriptBox["x", "10"]}], "+", 
  RowBox[{"0.0004726565058179485`", " ", 
   SuperscriptBox["x", "11"]}], "+", 
  RowBox[{"0.000011574687953187249`", " ", 
   SuperscriptBox["x", "12"]}]}]], "Output",
 CellChangeTimes->{
  3.9266394614520364`*^9, 3.926640377176856*^9, 3.9266404140820513`*^9, {
   3.9266404788516536`*^9, 3.92664051845539*^9}, 3.926640774324299*^9, 
   3.9266408183344965`*^9, {3.926640923803655*^9, 3.9266409317804904`*^9}, 
   3.9295545008066893`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"5b0a1c75-c0b0-4ab7-983d-b96ff109ffb4"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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

      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
AA==
        "]]},
      Annotation[#, "Charting`Private`Tag$694978#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.5636095022063944, 0.7356542463700371},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: A(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.168779688194484, -0.5636095022063932}, {0.7356542463700354, 
   1.139737147435914}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9266394614520364`*^9, 3.926640377176856*^9, 3.9266404140820513`*^9, {
   3.9266404788516536`*^9, 3.92664051845539*^9}, 3.926640774324299*^9, 
   3.9266408183344965`*^9, {3.926640923803655*^9, 3.9266409317804904`*^9}, 
   3.929554500928692*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"78d9bb46-8bbe-4c80-b93b-9d7d6d660173"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"b", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
    "into", " ", "a", " ", "list", " ", "of", " ", "points"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameterb", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", "bparameterList"}], 
       "}"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Use", " ", "FindFormula", " ", "to", " ", "find", " ", "a", " ", 
     "suitable", " ", "model", " ", "for", " ", "the", " ", "data"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"polyModb", "=", 
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"dataParameterb", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"x", "^", "i"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "11"}], "}"}]}], "]"}], ",", "x"}], 
     "]"}]}], "\n", 
   RowBox[{"polyModb", "[", "\"\<BestFit\>\"", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
     " ", "with", " ", 
     RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "dataParameterb", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"input", "=", 
     RowBox[{"Log", "[", "maValuesList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", 
     RowBox[{"plotting", " ", "**", "**", "**"}], "*"}], "*)"}], "\n", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"dataParameterb", ",", 
       RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<parameter: b(\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",", 
            "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
            "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"LabelStyle", "->", "22"}], ",", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"polyModb", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Min", "@", "input"}], ",", 
         RowBox[{"Max", "@", "input"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Green"}]}], "]"}]}], "\[IndentingNewLine]",
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9266408508516254`*^9, 3.926640913933364*^9}, {
  3.926640958932021*^9, 3.9266409590720577`*^9}, {3.9266410000665793`*^9, 
  3.9266410127079735`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"4e91b80b-b9b5-45cd-8ad1-c4caf1b68008"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"3.2946659519341663`", "\[VeryThinSpace]", "+", 
       RowBox[{"21.003547977773113`", " ", "x"}], "+", 
       RowBox[{"57.270271167823694`", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"89.89199861298592`", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"88.42190679788304`", " ", 
        SuperscriptBox["x", "4"]}], "+", 
       RowBox[{"57.317397732014065`", " ", 
        SuperscriptBox["x", "5"]}], "+", 
       RowBox[{"25.05810866853754`", " ", 
        SuperscriptBox["x", "6"]}], "+", 
       RowBox[{"7.405581810010173`", " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"1.4542722438929385`", " ", 
        SuperscriptBox["x", "8"]}], "+", 
       RowBox[{"0.18145329342295483`", " ", 
        SuperscriptBox["x", "9"]}], "+", 
       RowBox[{"0.013006044421892704`", " ", 
        SuperscriptBox["x", "10"]}], "+", 
       RowBox[{"0.00040757562539717884`", " ", 
        SuperscriptBox["x", "11"]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {3.2946659519341663`, 21.003547977773113`, 57.270271167823694`, 
     89.89199861298592, 88.42190679788304, 57.317397732014065`, 
     25.05810866853754, 7.405581810010173, 1.4542722438929385`, 
     0.18145329342295483`, 0.013006044421892704`, 
     0.00040757562539717884`}, {{$CellContext`x}, {
      1, $CellContext`x, $CellContext`x^2, $CellContext`x^3, \
$CellContext`x^4, $CellContext`x^5, $CellContext`x^6, $CellContext`x^7, \
$CellContext`x^8, $CellContext`x^9, $CellContext`x^10, $CellContext`x^11}}, {
     0, 0}}, CompressedData["
1:eJxTTMoPSmViYGBgBOLjDDDwwX6UHqVH6VF6lB6liaEB3rTt/Q==
    "], CompressedData["
1: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
    "], CompressedData["
1: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
VsGEi3VVdMDUSj2idEUS2fE1vZw+bQSEMtXNZHs+6OUxmymKvhRQE25h1nnx
ChFefVMtk/IZkmZM70lG/kKX7X6JV4Wy4ui4GSlEoxWwM2p/nrNnWh7Gn5GS
TLeADixYXqruxEmidG9Z9XUbI9CYJ6AeVLyBhKQuDLKcSIWXj3N9FBhr0Icq
y9zXdENg6s8qL8CxgxrTy0OPSLDhznKGhvwzUsQ8Kq+pP4qwOoyfXS6qkPXS
QaWejKVHkSTqOBL+tjzOCPjeqZU6+d9Aj4g45NlupILwNBe5Z2ANOq/NHvTn
3hBg+ZVcNyt3UOl4Jv3dGTacX+s/398nlbA/sQ9mI29Y4/2Z8jECjzE6GPs1
1ZvcKolMhgXSuWqN4HHZDl9t7Q1UVCriRN2RClUfF7smpmvQwDX6jXWaYbDt
LKdl1f6N5LW+JItmsOOipN1r2X8pYcQDgwKDl2zwfl93VeKTBTqA5RIZ30lJ
JGLLQInNGIEQYwN579YNdHew4NUmSxrwbla2Jl2oRTnfq9qzEodB+ETuwpHZ
38jO3qP5hx4HjpCemMTuvTLWw2ucEO1ge7g/i6sRP9+mg+DcOQaGP5LIh2zV
i/WoMdyePzJRKnUTpf3ZT+92T4N9/5uUkZW16Kk244ctmhHY9MrL1gndRdPc
pOZdZJy4em8antZCFSxF4GfwY1s7vL/0l9wvgYgeNqenZj2ZpdBPnkCip4rG
4FNmJa537Sa6tZwekPI6DeZufeyoYq9Dmvyq23v3RqBze0rsM+cftEktLNmI
48R1XdbsOntHFatZjNDjsLfH+5WhKlvqtPRg9fwGe7iEFAr5PkU+52IMPPmr
ETVlN5HKj3OfdKnT4eFTF/Fjd+pQ/tkY5TK6Udj9wlf3tOEPel69L9QScgzX
e9yzadzxDPbe1SP7tpQD3qfikLv9mZMePr1IZzTTkULvcQQvJ+8bw/GmUZfZ
pZuo8dQ2/y/bdHikKBv7ZqkOHSP4WUGaMgpww8mx2mIP5Q3rCvarHsfxaBW9
SlBXw2YHzCVy6g59QcdNMjUheqCjnzy17CqF7hC3nkx6bQwlphtmXwR90ftF
k617L9PB+wq7QKZxPforl+RPxPIF3MbV3Ql299CRJBeeH/vHcRs44lpBZoQV
b216r55xxPuBM1ERd2To4S/J3+dYmBTyljeN/jdrDNwW7ZMZLr5IWPR6Dwth
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
Webljm8IoKOJj8uLgULif34UffU=
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.926640950875372*^9, 3.926640960892747*^9}, {
   3.926641001435898*^9, 3.9266410131310377`*^9}, 3.929554505090737*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"f177b61a-2d09-4cbf-95fe-0f9f95a89c42"],

Cell[BoxData[
 RowBox[{"3.2946659519341663`", "\[VeryThinSpace]", "+", 
  RowBox[{"21.003547977773113`", " ", "x"}], "+", 
  RowBox[{"57.270271167823694`", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"89.89199861298592`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"88.42190679788304`", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  RowBox[{"57.317397732014065`", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"25.05810866853754`", " ", 
   SuperscriptBox["x", "6"]}], "+", 
  RowBox[{"7.405581810010173`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"1.4542722438929385`", " ", 
   SuperscriptBox["x", "8"]}], "+", 
  RowBox[{"0.18145329342295483`", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  RowBox[{"0.013006044421892704`", " ", 
   SuperscriptBox["x", "10"]}], "+", 
  RowBox[{"0.00040757562539717884`", " ", 
   SuperscriptBox["x", "11"]}]}]], "Output",
 CellChangeTimes->{{3.926640950875372*^9, 3.926640960892747*^9}, {
   3.926641001435898*^9, 3.9266410131310377`*^9}, 3.9295545050967355`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"2a86c494-25eb-4103-b80a-99fc05dce3c1"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
kChvXw==
        "]]},
      Annotation[#, "Charting`Private`Tag$696824#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.5636095022063944, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: b(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.168779688194484, -0.5636095022063932}, {-5.168779688194484, 
   0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926640950875372*^9, 3.926640960892747*^9}, {
   3.926641001435898*^9, 3.9266410131310377`*^9}, 3.929554505190733*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"5717e788-6d00-4d87-a00f-c5511c5bba65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"\[Mu]", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "*", "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
    "into", " ", "a", " ", "list", " ", "of", " ", "points"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameter\[Mu]", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", 
        "\[Mu]parameterList"}], "}"}], "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Use", " ", "FindFormula", " ", "to", " ", "find", " ", "a", " ", 
     "suitable", " ", "model", " ", "for", " ", "the", " ", "data"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"polyMod\[Mu]", "=", 
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"dataParameter\[Mu]", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"x", "^", "i"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], ",", "x"}], 
     "]"}]}], "\n", 
   RowBox[{"polyMod\[Mu]", "[", "\"\<BestFit\>\"", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
     " ", "with", " ", 
     RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "dataParameter\[Mu]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ymax", " ", "=", " ", 
    RowBox[{"Max", "[", "dataParameter\[Mu]", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"input", "=", 
     RowBox[{"Log", "[", "maValuesList", "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", 
     RowBox[{"plotting", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"dataParameter\[Mu]", ",", 
       RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<parameter: \[Mu](\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", 
            ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
            "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"LabelStyle", "->", "22"}], ",", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"polyMod\[Mu]", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Min", "@", "input"}], ",", 
         RowBox[{"Max", "@", "input"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Green"}]}], "]"}]}], "\[IndentingNewLine]",
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.926641075919797*^9, 3.9266411170728736`*^9}, {
  3.9266411471271176`*^9, 3.92664116144119*^9}, {3.926641199607256*^9, 
  3.926641199647251*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"317c3109-653c-4a8f-af29-3ea5a39ce19a"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "77.31991354145508`"}], "-", 
       RowBox[{"481.49174362794383`", " ", "x"}], "-", 
       RowBox[{"1266.5595311513182`", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"1891.934911471192`", " ", 
        SuperscriptBox["x", "3"]}], "-", 
       RowBox[{"1807.416721204991`", " ", 
        SuperscriptBox["x", "4"]}], "-", 
       RowBox[{"1171.0339830414844`", " ", 
        SuperscriptBox["x", "5"]}], "-", 
       RowBox[{"530.7465676687291`", " ", 
        SuperscriptBox["x", "6"]}], "-", 
       RowBox[{"170.47288406698095`", " ", 
        SuperscriptBox["x", "7"]}], "-", 
       RowBox[{"38.692691291288966`", " ", 
        SuperscriptBox["x", "8"]}], "-", 
       RowBox[{"6.075305167306231`", " ", 
        SuperscriptBox["x", "9"]}], "-", 
       RowBox[{"0.6282510679247476`", " ", 
        SuperscriptBox["x", "10"]}], "-", 
       RowBox[{"0.038507172918787656`", " ", 
        SuperscriptBox["x", "11"]}], "-", 
       RowBox[{"0.0010598851497474128`", " ", 
        SuperscriptBox["x", "12"]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-77.31991354145508, -481.49174362794383`, \
-1266.5595311513182`, -1891.934911471192, -1807.416721204991, \
-1171.0339830414844`, -530.7465676687291, -170.47288406698095`, \
-38.692691291288966`, -6.075305167306231, -0.6282510679247476, \
-0.038507172918787656`, -0.0010598851497474128`}, {{$CellContext`x}, {
      1, $CellContext`x, $CellContext`x^2, $CellContext`x^3, \
$CellContext`x^4, $CellContext`x^5, $CellContext`x^6, $CellContext`x^7, \
$CellContext`x^8, $CellContext`x^9, $CellContext`x^10, $CellContext`x^11, \
$CellContext`x^12}}, {0, 0}}, CompressedData["
1:eJxTTMoPSmViYGBgBOLjDDDwwX6UHqVH6VF6lB6liaEB3rTt/Q==
    "], CompressedData["
1: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
mJDTvPBvPoXE99UZbpbG+B/gQSQN
    "], CompressedData["
1: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
D/XaBnA8KSeRUX0fu0GLpZQiMVMd941QoQUVj/IdMTjJMikqCs2QXZbSlKM4
nRhDKiSF+0Yo0YylskbWxJNkyak4fmqev+D9ul6vz+u6LuR1sSWHUaUAT/zQ
iXyvaIKd8748eR15AlqC9oyAyCs4si5Q/VajyCkWF+umUQk0cLil+sU+GlBm
HW7gNLqgy7dtK6nzlxf+qF5q3rocJJdfqnQ0/TXYaTJUbtDzFR3y0pp49VMB
hoX0+5/1NsHmS3yigvAJaG+h2av99greEmt6rGfH/V9Oa9sqDYV1C70d9ayI
c6IBb2efDSdGXJDKjY7SEDk26El+QvHZk4M67xeNtbS8BinDmezRZZOorb1y
3NFYEbpq/GPiUGGC++G2ILfvC05EodNBrSj8VyhTvj9H5JgbvmoZ0yHQp8MF
AcCLBl7ELllEiJMoQKN5oHETG1SIH59c65ODDilnXteWEACH1MGigq2TSH2x
wG3ZaUX4onWqZpckwNKHNu5ONnSDLVnbasYCo/DcJ5V4O+mCX07voNiqp3oE
IvEN2Q+BNOB80RaOyJKIhq44rtrNBt2c4ebGpBw0c4DjNqghAJUPXm4JdZpE
/lp6Mu/yFKHk1tjgSX2Ay+ru3F/i5walj3O6ftZFYeuW47cIc5HTbqv65ZIh
gTY/cS9nRdBAFZhmFVJJZDVN6Fo5s8EHRnCRz+Mc9K40vilrlwD88O5udro8
if4ZCMirG1aEH3O7EhqdAbZRtgks4blBa6UipzClaPy/QwIVw2CRM1dNjd65
Y6HrDH72RMpCB43sfJYuiZgrD5/2O80GVVd33xbvzEHfAubfkI4CkMRdfxHw
J1Eea0i8fa0SZJEBgvoIgDltVs75A26QyVz8LdA7Gmv33Z4qLBQ5k58zJscB
gZ4lMmYZWTRAuaC7Yj2dRAnfx81jotlAXyfoZtwiHkrebeuhekYACm7LUba2
TqKu8QvNUi5K8Fn2bpnRAoC/Df1HbVDdHS490+nbWx6NJ73bpFPGRI5A6o1l
ugWBLuDWNvRgYe/EvLxXb0miBolDxWl32CCzcn++9Hoe6g/QPNeWKAC1/mlM
3blJ9LO5ufsYVwlGNRco6nUAvPHpjVAXZ3d4PrkvuGxlDK6PPGbVpPngl5Op
nsKF1gRKaXzKoiAakC8bvsZ0IFFmUV5nWgkboC8yPaF7eCifz1ycyheAkauL
3PW1ppCeLf3j61YlONQVUpWyFOKMZFVTpTR3ePjGxzYp9xicXDQa50uKnDM6
NuLdBwkUMb5h1KaRBq6/LJ+YciXRslCxhpjXbLD86ZzRyCkeetOtNru/TgBm
NVd+Mj0whdbU3ylmrFSGCVs7O1W2QMwttVkv1+IOSw5OwFclMTg/dW3VSa7I
Oaorl8Y6QqAelcxTwZ00IOwzaD7nR6J9qcQt/0E2KJD1KbNK4iFvgxS75f0C
IE/MtB07N4VSA+9IrbZRhqc9GUa1ThBbIuPRQ7JM6PLewG9OOhaXyYY01LSI
HKFZts+8M4FqV0lRb47QQAO1Z/9ECIn8uUHH9/5kgym7B4G3innI4qfhsup5
AdimZrX6cuYUMm5h5fVdUYZcYtndZA7Ee0ttHQXWTOioJK+eyYjFmcF2SaGU
h78cO67rLbYrgZbal63lfaOB2fcrQl1iSFTpHq0tR3DAkw4Nn4F2Hsot+ntF
iLIQsDTEzj2sn0Lz9p8ZzdXK0CRu87ewAoipbFIvPooJGR+NVjwujsWSpb3T
aXtFjuRR6+2LPQnUvjzsrxwJOtCkPz2P00g0VMySad3AAbKXVLPXzvOQ3lyR
k6GREFAge+zT5BRSkor/3LtIBU5WpIondUBcO//n1tgaJvyZ4v51p3Qcttlr
3kOJEDkhl+UOBp0ikHvX1ec3CDrgW9w8rPA3idRHNddFQg5wWyex6cjaXDSb
TQ6OHhKC3w2v2+lRp9EZJ4YqZZcKvC5BcqskTPHHI9y1L8U94Aq5rHgD1zg8
fvy8wQAWOexWVbEhFoE23L+Te34NHQydkd/g9ohE4YVeIbpHOaDLHi4JtcxF
B2pf38vyEYJnyYz4YMtpZFBKPHI6pwIrxWQT5fRNsY4ZfGEJPWChi9ZNbkkc
jv7AbFWYEzm1od5OtkEEoh7sOG+9hQ4U3x2QuotItLmiftNzHw7gNRsZ/nky
F/WUHbnmGC0E+7ROhjX7TSPupZGg6iIV6BsYWRJ9zBQzrXoGl1zygNv+Otbq
T4nH1AtCHo/+6JdDjj31yw8h0Hv1gcOU3+lAzkVDtqOBRHkefKuDHA4ANIfa
Bwm5aOJ4YI7M30Jwfj9Xdht3GoU8emJkPaEC5w0lhtWiTBfunAYUK/OA4akD
syXMeLw3wiONGyhyOj3PHvntMoHCrve5Vu2jg1oFVVuJDhL5utB7BTc5wCbp
t8rSR7lIa/nbd5VYCJZ76av/WTWNGr58KvmyWRW6f9f+2lpoimt9JdN3fveA
B+4kP/ctj8eQUhY+XChyltWXaDheIdDFugvY05EOml2T2zWHSRRvH7Dc/CEH
OC+u0H3yNheVCy1VznYt9GbSlLJybBrp212oKTypChPI4Xx+jyneq/29opjm
Cdfo+E+lyiVgyQob25SJ/5uHYv8hK45AW4StKfNMOgiTT3y5c4pEdak6b3l1
HNDrNSaT9z0XUe5WntSeFQJLNssuXm4G7SfHN6Rmq8JXddfHs6TNcGTJQ1/f
IE+4rviZxUbfBFxYE/I+fUvhL6d7sDF3KIlA+2gZc5EBdLC6sFPfajEDVT36
x3Hpew64RZHwu6bGR7RQj4o2ogncs3eDBJhBXjLkg6QBVajp0B/31NgMCz5Y
sJiPPaGkzshZvboEvLyaq7TUV+TYGHskrksj0BvzFeqLw+mgJkhMew+FgRrU
nO7aTXHAUZuQI2fM+KjtdjAleksTGCjfb57lNYOePfdan7eGCvs6mp2/uplh
PKoVf3PaE9JPCzWEson4w+3Ovhd5Isfj9upMp/SFv9fovaJPAh1cC7coN1Fh
oP7a2PpUqQhw36Tu1R4PPoquOGVPs24C2Q76pjuSZ1CYn6FdvwsVpvdVGey7
aoZ/fKJGy2z3guXzrkV4VyLu8GaqjY6KHEoveyIqk0ATsaT0q1t0MN5dKKmr
w0A7Cnjd9RoLBznI+e3qGD5Sta2PGPJoAjvqjml0PptB80n+vxmnU+HuTM+P
lWVmeBVhs6nijBf8feM2h49/JOLPWy0fnNQt+uXo7tVKfniPQDKqJ+VVeHSQ
dkOeKrOdgY5GZ4xPGUUAqeL7F5vz+SipdE9GyuUm0BF+to4zOIPCvQ9Sstup
8Md8vb3TyIIjsdEkr8hrob8/eizTErFq9fkQK2+RM6uwLrWFTyD9nV5Oxx/T
QVH1D5lBUwa6uWfjasI2AtSkGb280sRHe4rRNZDRBNodWFRj2W/ognqM8TYF
NfjfdGublfLmeFD9SuS7KS9osNpie9fzRNwWM+IRzi+C/wK8g3ms
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.926641121485301*^9, 3.9266411633400497`*^9, 
  3.926641210241469*^9, 3.929554508342771*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"3e835a05-c51b-49e8-a5a3-afbb7a508d71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "77.31991354145508`"}], "-", 
  RowBox[{"481.49174362794383`", " ", "x"}], "-", 
  RowBox[{"1266.5595311513182`", " ", 
   SuperscriptBox["x", "2"]}], "-", 
  RowBox[{"1891.934911471192`", " ", 
   SuperscriptBox["x", "3"]}], "-", 
  RowBox[{"1807.416721204991`", " ", 
   SuperscriptBox["x", "4"]}], "-", 
  RowBox[{"1171.0339830414844`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"530.7465676687291`", " ", 
   SuperscriptBox["x", "6"]}], "-", 
  RowBox[{"170.47288406698095`", " ", 
   SuperscriptBox["x", "7"]}], "-", 
  RowBox[{"38.692691291288966`", " ", 
   SuperscriptBox["x", "8"]}], "-", 
  RowBox[{"6.075305167306231`", " ", 
   SuperscriptBox["x", "9"]}], "-", 
  RowBox[{"0.6282510679247476`", " ", 
   SuperscriptBox["x", "10"]}], "-", 
  RowBox[{"0.038507172918787656`", " ", 
   SuperscriptBox["x", "11"]}], "-", 
  RowBox[{"0.0010598851497474128`", " ", 
   SuperscriptBox["x", "12"]}]}]], "Output",
 CellChangeTimes->{3.926641121485301*^9, 3.9266411633400497`*^9, 
  3.926641210241469*^9, 3.9295545083487673`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"8fdaa358-b51b-4675-9446-2e622f588ec8"],

Cell[BoxData["0.3707512524185819`"], "Output",
 CellChangeTimes->{3.926641121485301*^9, 3.9266411633400497`*^9, 
  3.926641210241469*^9, 3.9295545083537703`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"0ad7b404-71f9-4df8-ab68-49800f8b80b0"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
mJDTvPBvPoXE99UZbpbG+B/gQSQN
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwd2Hc8Vf8bAPB7kTLKSEgIUYiMb6SUQ5SRkrJJJJKQjLIqSpFkF2lRyoiy
UkmeIxmV0LKTPQv3GveW9Xvu75+83q/P83k+8zzn3KSPnT7kykahULbjP6y/
sT6c2/8qriZ1z4Z+WZa3nmz3lvMZkltNUijZ6nLO68m2OXHSdy3LrQG+eZJk
8xpep2sUludDvptJkI3Gow9KGwTRcXLqtWJka//pR7s/o0neaxovxMjuizNP
Gj6x2l3Z9z4SI+kvKM8G61jtautiL4qRQjIi5cJVaN3fv19riZF2//Rbz75k
tQ99DsxfSw7m3uPflo4Oe6dply5KLvKYh788w4qvejiRI0wO7V3nJOvDyr+B
+/VtYbIpfEAnwZvVzrgQd02YzGAEzXucYrUHebqcFCYN+h6ek3Rl5Us7+ERB
mLxeNu11xYYVf0g8Pm8NKXoy1e4wwYp/AMVvhEi1ml//TfCyzLbcZAH/Hqr2
dOFh9W84v39SkGz4mfu4hYvlVnf7PkHScyZAhORkWej8rQ+CZLYs71w8hZU/
/F3ULUFS8rLWO/VpATT3vJW6IMmtm3DwbAc6bEPD8TMCZN/r3V4LOeh0l4ks
Hn5SbOIZEZPNaq8Pq6Lyk4dk1wmuy2L175H9PMFHvoudKtXKZPm+ztU6PjLd
JZPifx9NaYrODeYjHVdyJo8mokmn34U9q8h2pw9lLSEsn9bxKVtJfll+cEXR
fla8V8CxZB5yuJNSKm3KssDGx5d4SEpRoUuCCSt+udesDw+p6rAafAxZ4x2O
eb+fh4wvaA5Q0ft///KVK3jIA7ZH+vK2srzR0fgiN/kx16Miax3LmkarA7nI
qv1X/O+N8ON6ct8Fxy8nDerL32waZtkxceHScvK9yTRb0SDLm3KjA5aTNYYu
CTV9aEpffJXdcrJOT+/ZxE9Wu7nNc7nlZIPGwpDeV7SuReWJt5xku0SA/WAZ
y0/HZKeXkbQ/x3erxKDJ5J9K5zlIm7cv+8hotBOv9i5fDrIihvvKoWus/BGF
lic4yJjNBbUBV1nts433zTnIjSfnTMvD0N3HNiVs5CAd+hOsjQNY+R/0TX5h
J2vbKzxdHFn5nVt8t7CT92pFU1JUWfG9EQYLVLJfs2A1twrL/q0npqik4hPD
+FBl1vxX8CWNUMlXEWevOSuy8uXyUJup5De97yGbZVnziU7e8ZxKcpXHOYEI
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
MeFAkPS+1kdU0t3xvt2ey0zo/M/q6Z90Ksm/71UhbwQTZrPhlOgdXI/fyXsx
V5hw2WX6k3IqzqducPOeq0zgl1RQ0r9JJQ/O1dYw0YpJib+94qhkN7VojXkU
E17urzW9HIPrk6uumkEbrJjPS72G7UZmvjevMeHoeVevqstUsnV0dXV1NBOS
T2iNiwbifo8aT47EMEFaxuvAlgBczyT9oNsN/L3fmfFM35eK9WfdnZ/oOnOe
096e6MqG7vJYPH9e3cbLJ3E/9jc3y8YxobfGX+W2G65X0/JpJHpBu2uiygnP
S2ayf1c8E6JnBQ+2HcHzUMs3SECLFhoWjNthvvrNgb/Qj0+F8nPYUEmtlo+h
8glMUN9Y6LPWEteb/9vMEw3dA01bDuH8r/4bz0Wb3hFTMzDD+Wa4WPej2yzN
EmxNcf1pt6+KJjLBjT+C5m2M+XYIBxuiwXNiWdJeKhlltMLDBy36wU7spT6e
B1mxPxl9Rq5mS4culczOG5ApRn8MV9Nf2kUlA/VUh+rRG7ruWm/QppKp3IdT
e9ChO1Z4Gmrh/v7g2UpDN9/yCzulgfnC176aQ6tMdSXHqeN6K/RkqElMiDIz
ySlWwf3gN/Nhuffpi7ctSphvvWD6PMZrr5D+OqdAJXWTHJ/T0cnHYwbXb8L7
Ebrybh/6D8n4py+L/W8vuTSi90q48LlL43rqRJaVoh8ENWyIkaSSNkrE+RQ0
8wd+1q5D1xz/6Ic2V39s+l0UfTB01ASdG8vvzFxDJcM6QjvE0exjIQHiq3G+
WSfujOB+OhgOXdPlp5JG/LvkC9EvHh26f3wl7r/+8jA/9CpKRVEUN973Jz/S
VdGVr5I7mjgw34dPGnfwPMXWUCanqbh/VpufGKH9z5ziWLtEIX2U51sm8X5s
VNyt7PwX3X87UA198Wq+3pVZChml+aHvA96v1l5Rq5wpCimaqsx1BB19Z+IC
7Q+FdGLeCfHD+9jHsEtaM0YhJ1P+q57F+7vToiZr+zDmU5V8548e573XFN5L
IV89Nmp0us4Ew5MrBh7/opDDyns7G/D+p1f7/f3QifEaK29tQx++YCIj2EIh
SYMirr/4/OS1v9DU/E4hKRlBJOv54twmvc/uC4V0b+ySeBzJhFcTDL+HnzBf
ws0abXwexZ0fV6uz/nfU6FyWPD7fAW/5263eUkiLwx88rPD5b1gbOh5cRiEN
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
jS0Ic/XCTa6WyvTXLcT/AIvnUaE=
        "]]},
      Annotation[#, "Charting`Private`Tag$698671#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.5636095022063944, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: \[Mu](\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.168779688194484, -0.5636095022063932}, \
{-16.231760011718105`, 0.3707512524185819}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.926641121485301*^9, 3.9266411633400497`*^9, 
  3.926641210241469*^9, 3.929554508472768*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"b24976f1-1e19-43c5-b2f6-7dbf3824b89e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second interpolation", "Section",
 CellChangeTimes->{{3.9266414524646783`*^9, 
  3.9266414616689825`*^9}},ExpressionUUID->"18b746f1-6ade-48bb-8830-\
b85b3abfc58b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**"}], "*", " ", "Select", " ", "distribution",
     " ", "that", " ", "we", " ", "already", " ", "have"}], " ", 
   "**********)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NumberOfDist", " ", "=", " ", "1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SelectedDist", " ", "=", " ", 
     RowBox[{"AxDistFunctionList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SelectedMass", " ", "=", " ", 
     RowBox[{"maValuesList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Numerical", " ", "Solution",
      " ", "in", " ", "second", " ", 
     RowBox[{"interpolation", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Avalue", " ", "=", " ", 
     RowBox[{"polyModA", "[", 
      RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", GridBox[{
     {
      RowBox[{
       RowBox[{"bvalue", " ", "=", " ", 
        RowBox[{"polyModb", "[", 
         RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}]},
     {
      RowBox[{
       RowBox[{"\[Mu]value", " ", "=", " ", 
        RowBox[{"polyMod\[Mu]", "[", 
         RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}]}
    }], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Compute", " ", "the", " ", 
     "integral", " ", "of", " ", "the", " ", "selected", " ", 
     RowBox[{"distributions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"upperLimit", "=", "13"}], ";"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<A = Int of q^3 f(q) (MAXIM): \>\"", ",", 
     RowBox[{"integralF", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"SelectedDist", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<B = Int of x^2(Exp[A\!\(\*SqrtBox[\(1 + \*SuperscriptBox[\(x\), \
\(2\)]\)]\)-b]+\[Mu]\!\(\*SuperscriptBox[\()\), \(-1\)]\): \>\"", ",", 
     RowBox[{"integralFit", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"fApprox", "[", 
         RowBox[{"x", ",", "Avalue", ",", "bvalue", ",", "\[Mu]value"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<|A-B| / A = \>\"", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"integralF", " ", "-", "integralFit"}], "]"}], "/", " ", 
       "integralF"}], " ", "*", "100"}], ",", " ", "\"\< %\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Plot", " ", "distribution", 
     " ", "and", " ", 
     RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedDist", "[", "x", "]"}], ",", " ", 
       RowBox[{"fApprox", "[", 
        RowBox[{"x", ",", "Avalue", ",", "bvalue", ",", "\[Mu]value"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "11"}], "}"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<(k/T\!\(\*SuperscriptBox[\()\), \
\(3\)]\)\!\(\*SubscriptBox[\(f\), \(p\)]\)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k/T\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", "22"}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "2"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Numerical solution\>\"", ",", 
        "\"\<fit in second interpolation\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{
      "\"\<Distribution for \!\(\*SubscriptBox[\(m\), \(a\)]\): \>\"", "  ", "<>",
        " ", 
       RowBox[{"ToString", "[", "SelectedMass", "]"}], " ", "<>", " ", 
       "\"\< eV. Dist. i = \>\"", " ", "<>", " ", 
       RowBox[{"ToString", " ", "[", "NumberOfDist", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9266414726232386`*^9, 3.9266414977279024`*^9}, {
  3.9266415493081484`*^9, 3.926641611664627*^9}, {3.9266416464111276`*^9, 
  3.926641837330047*^9}, {3.926641896266323*^9, 3.9266418963926773`*^9}, {
  3.9266419505321536`*^9, 3.9266420267981825`*^9}, {3.926642070401165*^9, 
  3.926642116024396*^9}, {3.926642184094487*^9, 3.926642284196685*^9}, {
  3.9266423356298237`*^9, 3.926642374236045*^9}, {3.9266424616573343`*^9, 
  3.926642650001004*^9}, {3.926646227944824*^9, 3.9266462612312627`*^9}, {
  3.926646309958461*^9, 3.926646387166284*^9}, {3.926646425859995*^9, 
  3.9266466192479596`*^9}, {3.926650195449376*^9, 3.9266502344402037`*^9}, {
  3.9266597045743*^9, 3.9266597302424173`*^9}, {3.9266618488841686`*^9, 
  3.926661848956395*^9}, {3.9266618887801046`*^9, 3.9266619408282194`*^9}, {
  3.926661976229417*^9, 3.9266619763084173`*^9}, {3.926665689866827*^9, 
  3.926665689932828*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"f3974a57-3e18-4d33-adf8-c69fc82cdb2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "Null", "}"}], ",", 
   RowBox[{"{", "Null", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.926642043831077*^9, {3.9266420925694246`*^9, 3.9266421182073016`*^9}, {
   3.926642169173399*^9, 3.9266422844881644`*^9}, 3.926642340012446*^9, 
   3.92664237648328*^9, 3.926642480255657*^9, {3.9266425282413087`*^9, 
   3.926642650481271*^9}, 3.9266463140415134`*^9, 3.9266463627987185`*^9, 
   3.9266464395638647`*^9, 3.9266465202049685`*^9, {3.926646576248196*^9, 
   3.926646620104989*^9}, {3.926650196350602*^9, 3.926650235301532*^9}, 
   3.926659733816003*^9, 3.9266618500309973`*^9, {3.926661890624772*^9, 
   3.9266619412531214`*^9}, 3.926661977279603*^9, 3.9266656903309083`*^9, 
   3.929554512934826*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"b9332e93-0865-4587-9465-805e4bf5d08c"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"A = Int of q^3 f(q) (MAXIM): \"\>", "\[InvisibleSpace]", 
   "3.6451093351496464`"}],
  SequenceForm["A = Int of q^3 f(q) (MAXIM): ", 3.6451093351496464`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9266463629667187`*^9, 3.9266464397318645`*^9, 3.9266465203719697`*^9, {
   3.926646576414196*^9, 3.9266466202729893`*^9}, {3.9266501967326202`*^9, 
   3.926650235682536*^9}, 3.9266597339809995`*^9, 3.926661850356001*^9, {
   3.9266618910257673`*^9, 3.92666194163612*^9}, 3.9266619776386013`*^9, 
   3.9266656906989117`*^9, 3.929554513051826*^9},
 CellLabel->
  "During evaluation of \
In[78]:=",ExpressionUUID->"8ea19475-8ae6-4fe4-a15a-b998fa424576"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"B = Int of x^2(Exp[A\\!\\(\\*SqrtBox[\\(1 + \\*SuperscriptBox[\
\\(x\\), \\(2\\)]\\)]\\)-b]+\[Mu]\\!\\(\\*SuperscriptBox[\\()\\), \
\\(-1\\)]\\): \"\>", "\[InvisibleSpace]", "3.687662650836301`"}],
  SequenceForm[
  "B = Int of x^2(Exp[A\!\(\*SqrtBox[\(1 + \*SuperscriptBox[\(x\), \
\(2\)]\)]\)-b]+\[Mu]\!\(\*SuperscriptBox[\()\), \(-1\)]\): ", 
   3.687662650836301],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9266463629667187`*^9, 3.9266464397318645`*^9, 3.9266465203719697`*^9, {
   3.926646576414196*^9, 3.9266466202729893`*^9}, {3.9266501967326202`*^9, 
   3.926650235682536*^9}, 3.9266597339809995`*^9, 3.926661850356001*^9, {
   3.9266618910257673`*^9, 3.92666194163612*^9}, 3.9266619776386013`*^9, 
   3.9266656906989117`*^9, 3.9295545130708265`*^9},
 CellLabel->
  "During evaluation of \
In[78]:=",ExpressionUUID->"25e275a6-c56a-4209-aaf5-c3d115965634"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|A-B| / A = \"\>", "\[InvisibleSpace]", "1.1674084855648768`", 
   "\[InvisibleSpace]", "\<\" %\"\>"}],
  SequenceForm["|A-B| / A = ", 1.1674084855648768`, " %"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9266463629667187`*^9, 3.9266464397318645`*^9, 3.9266465203719697`*^9, {
   3.926646576414196*^9, 3.9266466202729893`*^9}, {3.9266501967326202`*^9, 
   3.926650235682536*^9}, 3.9266597339809995`*^9, 3.926661850356001*^9, {
   3.9266618910257673`*^9, 3.92666194163612*^9}, 3.9266619776386013`*^9, 
   3.9266656906989117`*^9, 3.929554513076827*^9},
 CellLabel->
  "During evaluation of \
In[78]:=",ExpressionUUID->"9a4002d4-06b3-4b74-a1c5-bfe5a997b955"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
hf8BSeSIig==
          "]]}, Annotation[#, "Charting`Private`Tag$701172#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1:eJwV1nk4VN8fB/CxzIxBZQ3Zl7GnlIrC5yQVSZEttCBkSSFb3xBlSShbE8ou
RLasEaFURPZky2SZW5EQZfe7v7/u83ruOfc5y+e8z5W0u3bGgZlAIMgyEQj/
fx6LTJNwlryvHRmRqf1gmU9LVkTmYHyWK1hNr23RyOnSxgaN/5ln3YT0y5pm
o0/ntEd6Psh71oTAvECfj+MgCxyv+d6nnhUJypsWnaFPueGsUUjj5tFYWJGb
RJZxwhB9hE/wUk0CpMjIuH0YkIam/dlX36kkgu+vyOYQViX4p6DWrJD1GOqO
iN3IyVYFZdG3wtECaeB77FsYq+l+2M2mqLF0NAPi9F4yn445BK1MnhMKhCzw
oCU41j5H4LD68oF1TTYkG4cnVvQfAcIi06ForxzgXBCc59Q/Dskz+ox6lTz4
7/bcnSqCAXR8G9CUyioAF/qSkVuGMbgMSX43OV8IevrFxSkME2Dtc44PFSgG
F2O14dFT5iAysea1cLQUahMbggLuWsMPevqJLdIvoMngyGyL5QWoHNGVkCWU
gQEjdCsx1waM+6M+WtSUQ7S5+/OMjksg1rs7w/1RBUgESknzBzrAdGevT4RX
JSi6iFjMal2GsFYRqVqVavBid3vZMucCtXXP/cSyakHXuI29OsED7tYYnToQ
9Aq+drlpHy31BPOqBWmj83Wwk1CRcu3zdZgt0ewIFngNI7KR9fcP+gDPGUbc
/NFG6FhRvfXQ+Sb4GVWvB5Y3wtTcz+cFrf4weuqeE4d0EyRLF9rrqAXCcwMV
bRnCGzh91b/CPSYIjh/1+WFW8xbOcs9aVBffgaIjeqZj8s0w4PvdjON2CPDp
7Hh99VEzWMroXo0+Gwpj2vUJ4V7voOyvdzg/Tzj4q5PQS5UPMGj0UG2u8h6U
KtFoIlkf4ZSIjnuLXSwMNr6/ubijDYhzJS3hS7HAfHbZ5lNcG/zRDY/OjImD
MyHnlIJut4OL++HyyffxMD8s1TBu2wGrNiWlrmdoIPS+38sspgvCEg1vFPQ9
hp1x7tjhti6I6lRM0455AofPU6xU2LrBLXJkmNMwBZz/HARyUDconDMMNG5P
hZfiqZSX13qA8dxMUnQhHSz97FNFTvcBbzWPdLVONrgdWeeiRPbBPfMTEidL
syF4K+3O4rs+YC5Jg58ST+FZ9nunT9qfoThfrBpYcmC5U3FvkEo/oMf544q9
uZCkMPd+fMsAuATEHf38tAAGBgPm8tuGgW2AbnBpsxScitQ+pbKOgFTph38G
h1/AUvBUfpzmCLTSu1Qf3nkB2xUs7f97PgJVJqcnjlHKwNRXrV8/6isw5N4e
3C5UDliE94UFKh3oafaWQ/qVYCerrBs/+Q0K5b+r507VwNmLSdu67CehO310
a1RYE8QXH7fZiaZhXcctuDulHebrfAvkv8zB0FmtZw+V+qBT6bleqdEi9JQv
Ov37Mwg1FiPVKbzLYDBbNtFjSgfZt9zKl6SWIcNQn657kQ5xu4+lyasuA9/r
R4bFznRwpRSHlp1ahjJdLUf3QDqI1AadaYlYBqs/lLnMXDoEislML2wug7zD
h7y3S3TQmXQRPzm9AgYV24L7H36Dj55LoStv1+C8lYDz6ZoxMLct72nsXgPj
HqaQS01jMHbaXTKCvgZWijNkj9YxWFL+/kpgbQ0Svg3p+A2OgQzW/0dt7zqs
6104fWBlDPytq2yvZayDucMLVR/1cVDR9dGaCNiAGxm2x6aLx+Hlnj2RBZEb
YCYXqKdYNQ66kjNfPJM2QLR57Y5t/ThYbTh4MVVsQOojyKptG4ewarMCsekN
EFS3dBb7MQ6jyvuELK02YSNk6mKKxAR8YP9vxVGYgDj1Ldr9703AvdV1p1Ep
3B8GzrjEToDBdHC/hSIB/dpxuO104gR8ao8o19MgIHcu7WTmnAnoi0m6qmhB
QCvdlhnkxgkY2/5y7FccAZm8CXd9sDgBa1JLrV7sTChJIEY08ewk1PP6a/zi
ZkKBCuVBIRcm4RYrIc9BiAkdFLk77oTvOzODHGouz4T4DRsLhNwngfJMANSP
MaFfkzQb4fBJ2L7rQNlqMBOizPUfSS+bBNVDPo9vLzOhyYzO+GoSA5h/af27
SWBGvApM/iYcDOhNJZp4k5mRS2b2fWwbA3yYH7I78TOjw/veqq8KMqCmpeyG
oSozciwZfN+pyACds3MWgs7MKIdVWXi/IQNMvK/wFX1hRrv1TtUtRDFARk7N
PXeUGf00tfpVFcOAv19WP6YzmFGWVM1NrwQGJGpG3olfYEa3Ts7XDDxmwDBL
/rwfFwtS8PdZMs1ngH0c1nlEjwXdU06W4XrHAO9iu+iBKhZUsGkSn7uEf3/f
REtxPQv6+3wuK3IVH3+NAymsmQUVC8UmOG8wYM87p1t7elhQ0KvzYrysGMwO
X/WInGFB5YM+XKLbMHBlv2mmRWVF7z7+O7tVBoMdMWuxvMqs6EhE29VYWQxa
+QM//djDiowYo+FbFTCQlww+TkOs6OS+8ba/OzFgHAjX+G3NigQna8duHcDA
1iFeNCOOFZmWlRz30ceAa4rPyjeJFWU9qchNNsCgwZ1GM0xnRVcqPHa/NMRA
zD9p20ohK5pVLm+eMMZgOC6NyaSFFbVvnjzy1xIDi4aCSVYCEVnFyJawOmNA
OrZTaohERMz1dQ1tLhhUfiy6ULqFiMT5PSUfXMGAr7+0/7wwETWJ6I0wu2PQ
/auqpXI/EflHPgnN8cHAUPhtoZMbEe2l0vrotzHwS54q7fEiokhJwqpbCAbZ
QryV2v5EZMfFnbYQisGKgF09XyQRtZSEuM/cxSCPj9DRkEdEXLpPaQn3MeiN
l+tRKiGiT+lK22YeYLDJc7qfVkVEvMd1JA/HYmDOnTp65R0RUVMrxXvjMWDd
qjkrOEFE9jxqk4WJGOyOvrRwZ4qI3FWfRfQmYWDNGbk0M09ElanE8YVkDF6w
DxKamUiIZ0qrSSoFAxuyH7eHOAm16N6O35uBQVRYGv+wLAnlzK6BfCYGVcT3
QsdVSOjuqkDd9iwMtrJulxLVIqFsW9kD37IxeEUo39NiRUKXPEuilPMw+H5r
aL+aHQkpe++WmMXNu8l8KM2ZhLJabNILn2Hgsm58xNuPhMJ757y2F2BA879x
nH6LhILkHTobcTeuphsYhJPQ6Eah7OXnGAiu/DaRpJFQ7pu5rrRCDHRvCJyN
SiEhQRU2lb1FGFxb0j73L5uEutmU4htwv/sbbd9eRkJd/l/CWooxmPOucFKv
JSHhT2EiR0swEFkcvpLVRELvF++21OC+/kfJ+0YXCYV0D/omlGKQ6mlyY+IL
CUUNmwUt4W6d+y/gNJ2Edp+/WWT+AoNF98zgGoyEFtTHicW4JWZbQqm/Sahy
l+w9pjIMTl6bi4j5S0JY/4j2Kdy+M4L3V9dJqD0pW+4h7kw3FOdIJKPefH69
z7g/TV+mdXGS0Vu29izucrw+XB8ka/KR0UHvy9rHcVOnKlNzhclowv22sC9u
I5evmTzSZLSy/5V2Bm7/H8TcAEUySqwuK2jGnee0s+C7KhntS2RznMDdg5kW
m2iQkRDV2mMd94ajf1k9IqNB85NdXBUYKDKyqhT0cH8IiBDD7SC77Rn/aTKS
jVVFsrjTHf9LZjInI8uZu1wKuIdyJiN/nSOj68F+6/9/vx0zChi4REb5VosU
CdzGcq+uNrvg7f8uqPPhjrosZ1PqQUYDGm7RLLjf5cYZp/iR0QN3U/YZfDxM
39d1Im6RUZNexose3JryzmreYWRU2Xkiohy3j1Mv1TaajGjX9WJjcJfmgYBh
Ahn5/I1tv4x7+ns+m8ZjMrL3Fj98ELecwvYVmUwyumLzY4aM2845eIrrGRkV
+H0f6MTX+8sPi0/fK8lostrluiluXsU3r3vryEjsK11uG+5TLiqlDW/x9aN6
Upvx/X37kzUhsZuMllk6yNK4NxXdQ0MGyCiz8MF8K14fB12HfNzp+Hgeme25
irt4qtRSb4aMLr0ZeZWD19dPJVEDtUUy6u+ibdHELXPlrqbEGhk9LdN53YbX
Z/L0BfElChvqvWNnTMfrN+wXx2QulQ0F9VmEdOL137jT93O8MhuqqDi0+zDu
Nbex97f2sqFVlUXTQvy8eM5U51scZkNmV4f5/PIxOP/bwZ18ng1tRsg39edi
kLiry/bPJTaU+9P+rgzu7muaJqMubCjc8eLolRwM9GZ59lf5saH1sDsGs/h5
Vpt7veqYwIa+v9Zwb8Lz4Jqq0q8zj9lQ8E5Brul0DPI9aF+1M9nQ7EDKWW7c
EvNXGreXsKGNtLjfp1Ix4PgjFP7uIxs6Nv/uLg3Pm7GF6zyyLBTE5yhNtIrD
IEkl9GMOOwVVE7yL5PA8M3KihcjxUNCr0Qs+s3je1Q9V/5WXpKBr5vIe16Px
9WlaH1QCCnrNWusPeF6eiQnPUr1JQcSi9UN//DGgtCaee3GbgpQptg+9buL3
AUs+/957FDQYxtCfu4GBim9buFoSBSlFuPYM43nNfoH7yoEqCjIfbu3yx/O8
UemxmtYfCoo1C2ket8Pz2+H5r7oVCuoY1koQscX7p9XlaDOzI9d++RWjixg8
4aELIm52tDgdnPzcGm+/LLOus4sdnbPPfLjLFM/f90XNeq7s6KLgucrLuvj5
sWsyNx1nRxHTJbdqJDHY5x49W/qTHYlPa6n6ieP5EnD23rZ5dsS5HMO3RxTP
l8SZulYCB6o30wtMFsTgRMcO6mExDrSuxKqtjd+vC4eu/9lpyYEyRBZde/H7
WY9fJobcwYGuWSxrmHQzYO59aEtNDSeSNl9lMvNmAI2WYJTUyImg0ObENU8G
HHTI6vf9wIlmic9Xw64xIIS5cVLtMyeKPqiVVeTMgO1aa0zFc5yop5Pr1Oh5
Bmi+8DyYJb8FHT+dYvjhKAPCn1wsiKRtQQsBc8mtvAwQ9dCIPue5FREoNx12
PJuE3Ff7RBPluFDRmPHTgdwJKBw79kScxI0O9Kpzv0wbh/3qAlzoHzcKpNWn
PnMfgwiK1OO1cR70cZBDiqT9DVrWsj99buDF/59qcl6J0iFKHPurX8KHWO1C
en90jICmfcb7wQf8qMTN6rph8hBUytCKya7bESGFJGAbPABlfCei2s8KoM8F
92J2m/RDiqwPd+l+QSTRrRGz074P2J1sI3fKCaFIzYcyu1x64DA1XOQY7w5k
fWdyNDGpCxxYqeb+v3egPGHPe+7ETuDkvR1i8FUYhR/+0Jw70gYZRyys1etE
0JRk3vCgRCts/nbUb3wkih5V2PzrznkP9I/7lMdDxJBctuq2V7uaobjFv0rK
ThzROKzbK/jfQNDNxsfr8hLIZEPjXh5zI0hkEUqWEiVQ4ZnZde/genjKNtLR
SJJEXjeO3o29WAtTRCGX/gBJpMg2ZKRsWA3yfLFfVqclkTBEJcdWVYBsjVPj
FQcpVG4qGbq8pwwoqSMVBUNSiFntdy3fegmMx90PXNaXRhod4bX2x4sgUDyt
Mb5RGnGKHTUbLMkHrrqpL5qqMmiHwNoV17JcCE/sWy1LlUGPlPeHavI+hQYO
8SRffiqyHihZF47IhN8PstlPhFARKvtpG+CWDseGrcfUw6hoYEw+74l9OqTK
89bI3aWizJMRXg3W6XCyMdiZGEVFHGUnH/GfSIe8+QsfGuKpiP7fqdZF2XSw
MxMKO5BFRXnen+UF36RB7477TNQmKgrgdn7GUp4KSpePDvC+paJdnxZrrbNS
4XbZWgnzOyo6MkWzeBWXCrtPutrQW6hIREh4xyOPVIgO0Hv9uIuKDhg9Pfdi
VyocozMH8HyjIvbZlzb+hSmQolxjyjRORY+4L8pbp6TAgp+H8uwEFU0LjGno
RKdAJjd9qP07Ph/sp6KCWwps6tQdjJilolkB7S+WO1PA/IEXj988Ff1bWw/+
TzQFioaUfjouUFGVDs08a0sKnPNKTtJdoqLK2J/uW2aeQFmDscfeFSqSePev
6NTXJ8C+haIvtUZFuSW32BI/PQFbywYJ7g0qevi66MaP+idQ/dR3aXMTn+/P
Fxs6xU/gfzVusq0=
          "]]}, Annotation[#, "Charting`Private`Tag$701172#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"(k/T\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\\!\\(\\*SubscriptBox[\\(f\\), \\(p\\)]\\)\"", HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox["\"k/T\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Directive[
       GrayLevel[0], 
       Thickness[Large]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, LabelStyle -> 22, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Distribution for \\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\): \
0.569151 eV. Dist. i = 1\"", TraditionalForm], 
     PlotRange -> {{0, 11}, {-1.116542151745653*^-6, 0.7408643076846132}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Numerical solution\"", "\"fit in second interpolation\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 22, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "22"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.926642043831077*^9, {3.9266420925694246`*^9, 3.9266421182073016`*^9}, {
   3.926642169173399*^9, 3.9266422844881644`*^9}, 3.926642340012446*^9, 
   3.92664237648328*^9, 3.926642480255657*^9, {3.9266425282413087`*^9, 
   3.926642650481271*^9}, 3.9266463140415134`*^9, 3.9266463627987185`*^9, 
   3.9266464395638647`*^9, 3.9266465202049685`*^9, {3.926646576248196*^9, 
   3.926646620104989*^9}, {3.926650196350602*^9, 3.926650235301532*^9}, 
   3.926659733816003*^9, 3.9266618500309973`*^9, {3.926661890624772*^9, 
   3.9266619412531214`*^9}, 3.926661977279603*^9, 3.9266656903309083`*^9, 
   3.929554513244828*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"7f66b3bb-7236-458d-96f9-9849db59a657"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison to Bose-Einstein and Boltzmann distribution", "Section",
 CellChangeTimes->{{3.9266429192038713`*^9, 
  3.9266429422111726`*^9}},ExpressionUUID->"dcb55237-1142-49f5-9d59-\
958979ce9564"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**"}], "*", " ", "Select", " ", "distribution",
     " ", "that", " ", "we", " ", "already", " ", "have"}], " ", 
   "**********)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NumberOfDist", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SelectedDist", "=", 
     RowBox[{"AxDistFunctionList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SelectedMass", "=", 
     RowBox[{"maValuesList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SelectedFa", " ", "=", " ", 
     RowBox[{"faValuesList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<f_a: \>\"", ",", " ", "SelectedFa", ",", " ", "\"\< GeV\>\""}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Numerical", " ", "Solution",
      " ", "in", " ", "second", " ", 
     RowBox[{"interpolation", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Avalue", " ", "=", " ", 
     RowBox[{"polyModA", "[", 
      RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", GridBox[{
     {
      RowBox[{
       RowBox[{"bvalue", " ", "=", " ", 
        RowBox[{"polyModb", "[", 
         RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}]},
     {
      RowBox[{
       RowBox[{"\[Mu]value", " ", "=", " ", 
        RowBox[{"polyMod\[Mu]", "[", 
         RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}]}
    }], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Define", " ", "the", " ", 
     "distribution", " ", 
     RowBox[{"functions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fBoltzmann", "[", 
     RowBox[{"C_", ",", "x_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "^", "3"}], " ", "C", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", " ", "x"}], "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"fEinstein", "[", 
     RowBox[{"C_", ",", "x_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "^", "3"}], " ", "C", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Compute", " ", "the", " ", 
     "integral", " ", "of", " ", "the", " ", "selected", " ", 
     RowBox[{"distribution", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"upperLimit", "=", "13"}], ";"}], "\n", 
   RowBox[{"integralF", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"SelectedDist", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Define", " ", "the", " ", 
     "numerical", " ", "integrals", " ", "for", " ", "the", " ", "other", " ", 
     RowBox[{"functions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralFBoltzmann", "[", "C_", "]"}], ":=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"fBoltzmann", "[", 
       RowBox[{"C", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"integralFEinstein", "[", "C_", "]"}], ":=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"fEinstein", "[", 
       RowBox[{"C", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Solve", " ", "for", " ", 
     "C", " ", "using", " ", 
     RowBox[{"FindRoot", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"solBoltzmann", "=", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"integralF", "==", 
       RowBox[{"integralFBoltzmann", "[", "C", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"C", ",", "1"}], "}"}]}], "]"}]}], "\n", 
   RowBox[{"solEinstein", "=", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"integralF", "==", 
       RowBox[{"integralFEinstein", "[", "C", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"C", ",", "1"}], "}"}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Display", " ", "the", " ", 
     RowBox[{"solutions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", "solBoltzmann", "\n", "solEinstein", "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Verify", " ", "the", " ", 
     RowBox[{"solutions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"fBoltzmann", "[", 
      RowBox[{
       RowBox[{"C", "/.", " ", "solBoltzmann"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}], "\n", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"fEinstein", "[", 
      RowBox[{
       RowBox[{"C", "/.", " ", "solEinstein"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", 
     RowBox[{"Plot", ":", " ", 
      RowBox[{
       RowBox[{"Compare", " ", "fit", " ", "to", " ", "Bose"}], "-", 
       RowBox[{"Eintesin", " ", "and", " ", "Maxwell"}], "-", 
       RowBox[{"Boltzmann", " ", 
        RowBox[{"distribution", " ", "**", "**", "**", "**"}], "*"}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedDist", "[", "x", "]"}], ",", " ", 
       RowBox[{"fApprox", "[", 
        RowBox[{"x", ",", "Avalue", ",", "bvalue", ",", "\[Mu]value"}], "]"}],
        ",", " ", "\[IndentingNewLine]", 
       RowBox[{"fBoltzmann", "[", 
        RowBox[{
         RowBox[{"C", "/.", " ", "solBoltzmann"}], ",", " ", "x"}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"fEinstein", "[", 
        RowBox[{
         RowBox[{"C", "/.", " ", "solEinstein"}], ",", " ", "x"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "11"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<(k/T\!\(\*SuperscriptBox[\()\), \
\(3\)]\)\!\(\*SubscriptBox[\(f\), \(p\)]\)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k/T\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", "22"}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "2"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Green", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "3"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Numerical solution\>\"", ",", 
        "\"\<fit in second interpolation\>\"", ",", " ", 
        "\"\<M-B distribution\>\"", ",", " ", "\"\<B-E distribution\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{
      "\"\<Distribution for \!\(\*SubscriptBox[\(m\), \(a\)]\): \>\"", "  ", "<>",
        " ", 
       RowBox[{"ToString", "[", "SelectedMass", "]"}], " ", "<>", " ", 
       "\"\< eV. Dist. i = \>\"", " ", "<>", " ", 
       RowBox[{"ToString", " ", "[", "NumberOfDist", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9266444693521547`*^9, 3.9266446223344603`*^9}, {
   3.926644655093995*^9, 3.9266447081668696`*^9}, {3.926644764505063*^9, 
   3.926645006587675*^9}, {3.9266451486297936`*^9, 3.92664516050416*^9}, {
   3.9266452167369776`*^9, 3.9266452407317038`*^9}, {3.926645466774496*^9, 
   3.926645469783661*^9}, {3.9266455567728777`*^9, 3.9266455939163747`*^9}, {
   3.926645648943282*^9, 3.926645649295027*^9}, {3.9266457584315057`*^9, 
   3.926645783045924*^9}, {3.9266458192455254`*^9, 3.926645823351544*^9}, {
   3.926646641463823*^9, 3.9266467831527824`*^9}, {3.926646818002262*^9, 
   3.926646831289791*^9}, {3.9266468984638243`*^9, 3.9266469072682447`*^9}, {
   3.9266484274110923`*^9, 3.9266484879343433`*^9}, {3.926648577320279*^9, 
   3.926648577364279*^9}, {3.926648610420783*^9, 3.92664866315274*^9}, {
   3.9266585463804693`*^9, 3.9266585470910854`*^9}, {3.9266588593442025`*^9, 
   3.926658859498309*^9}, {3.9266588898468075`*^9, 3.9266588899099503`*^9}, {
   3.926659561463987*^9, 3.926659609789261*^9}, {3.926659738023475*^9, 
   3.9266597919103975`*^9}, {3.9266601076906404`*^9, 
   3.9266601286802125`*^9}, {3.9266623146876283`*^9, 3.926662322782635*^9}, {
   3.926662385528463*^9, 3.926662388714661*^9}, {3.9266625298156257`*^9, 
   3.926662530765419*^9}, {3.9266628075377817`*^9, 3.92666282973405*^9}, 
   3.926664369423226*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"fbeb1984-8789-4699-9939-03051eef7eb7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"f_a: \"\>", "\[InvisibleSpace]", "10000000", 
   "\[InvisibleSpace]", "\<\" GeV\"\>"}],
  SequenceForm["f_a: ", 10000000, " GeV"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9266597935211678`*^9, {3.9266601087621346`*^9, 3.926660129152666*^9}, 
   3.9266623439251337`*^9, 3.9266623928344584`*^9, 3.926662531441312*^9, {
   3.926662808650064*^9, 3.926662830372039*^9}, 3.926664369866216*^9, 
   3.9295545168698654`*^9},
 CellLabel->
  "During evaluation of \
In[88]:=",ExpressionUUID->"261b7d70-0f39-4ac8-bf64-6600dcf64f2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "Null", "}"}], ",", 
   RowBox[{"{", "Null", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9266444767210407`*^9, 3.9266450176332483`*^9, 3.926645164052506*^9, 
   3.9266452334286947`*^9, 3.926645278899887*^9, 3.9266454817835426`*^9, 
   3.9266455974098225`*^9, 3.9266456546351504`*^9, {3.926645762071643*^9, 
   3.926645787255129*^9}, 3.926645825538335*^9, 3.926646784963263*^9, {
   3.926646819968997*^9, 3.926646832239146*^9}, {3.9266468993989606`*^9, 
   3.926646907883315*^9}, {3.926648453870987*^9, 3.9266484887020617`*^9}, 
   3.926648577905836*^9, {3.926648611780128*^9, 3.926648664433816*^9}, 
   3.92665855087323*^9, 3.926658860528125*^9, 3.9266588916405277`*^9, 
   3.9266595623660793`*^9, 3.926659612154252*^9, 3.9266597935281677`*^9, {
   3.926660108768132*^9, 3.9266601291586647`*^9}, 3.926662343937126*^9, 
   3.9266623928454514`*^9, 3.926662531453308*^9, {3.926662808663066*^9, 
   3.926662830387038*^9}, 3.9266643698772135`*^9, 3.929554516873865*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"dc511def-4417-47c3-98a6-ac6d19ef8512"],

Cell[BoxData["3.6451093351496464`"], "Output",
 CellChangeTimes->{
  3.9266444767210407`*^9, 3.9266450176332483`*^9, 3.926645164052506*^9, 
   3.9266452334286947`*^9, 3.926645278899887*^9, 3.9266454817835426`*^9, 
   3.9266455974098225`*^9, 3.9266456546351504`*^9, {3.926645762071643*^9, 
   3.926645787255129*^9}, 3.926645825538335*^9, 3.926646784963263*^9, {
   3.926646819968997*^9, 3.926646832239146*^9}, {3.9266468993989606`*^9, 
   3.926646907883315*^9}, {3.926648453870987*^9, 3.9266484887020617`*^9}, 
   3.926648577905836*^9, {3.926648611780128*^9, 3.926648664433816*^9}, 
   3.92665855087323*^9, 3.926658860528125*^9, 3.9266588916405277`*^9, 
   3.9266595623660793`*^9, 3.926659612154252*^9, 3.9266597935281677`*^9, {
   3.926660108768132*^9, 3.9266601291586647`*^9}, 3.926662343937126*^9, 
   3.9266623928454514`*^9, 3.926662531453308*^9, {3.926662808663066*^9, 
   3.926662830387038*^9}, 3.9266643698772135`*^9, 3.9295545169398656`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"ae471a33-6cc9-4308-ba88-a3305dae4dfe"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"-\\\", \\\"x\\\"}]], \\\" \
\\\", SuperscriptBox[\\\"x\\\", \\\"3\\\"]}]\\) has evaluated to \
non-numerical values for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 101, 1, 
   25588527224105812111, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9266451640405087`*^9, 3.926645233603695*^9, 3.9266452789048843`*^9, 
   3.926645481789543*^9, 3.9266455974158225`*^9, 3.9266456546401515`*^9, {
   3.926645762077645*^9, 3.926645787243127*^9}, 3.9266458255443344`*^9, 
   3.926646785156263*^9, {3.9266468201609955`*^9, 3.9266468324281464`*^9}, {
   3.9266468995889606`*^9, 3.926646908076314*^9}, {3.9266484540599885`*^9, 
   3.926648488892063*^9}, 3.9266485780958366`*^9, {3.9266486119711275`*^9, 
   3.926648664622818*^9}, 3.9266585510912237`*^9, 3.926658860720121*^9, 
   3.9266588918295236`*^9, 3.926659562542077*^9, 3.926659612327252*^9, 
   3.926659793712164*^9, {3.926660108951131*^9, 3.926660129326664*^9}, 
   3.926662344319126*^9, 3.926662393233452*^9, 3.9266625318443108`*^9, {
   3.9266628089910693`*^9, 3.9266628308170443`*^9}, 3.926664370287217*^9, 
   3.9295545170028667`*^9},
 CellLabel->
  "During evaluation of \
In[88]:=",ExpressionUUID->"b5575a04-1555-4028-b7a0-c47831725ee7"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"-\\\", \\\"x\\\"}]], \\\" \
\\\", SuperscriptBox[\\\"x\\\", \\\"3\\\"]}]\\) has evaluated to \
non-numerical values for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 101, 2, 
   25588527224105812111, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9266451640405087`*^9, 3.926645233603695*^9, 3.9266452789048843`*^9, 
   3.926645481789543*^9, 3.9266455974158225`*^9, 3.9266456546401515`*^9, {
   3.926645762077645*^9, 3.926645787243127*^9}, 3.9266458255443344`*^9, 
   3.926646785156263*^9, {3.9266468201609955`*^9, 3.9266468324281464`*^9}, {
   3.9266468995889606`*^9, 3.926646908076314*^9}, {3.9266484540599885`*^9, 
   3.926648488892063*^9}, 3.9266485780958366`*^9, {3.9266486119711275`*^9, 
   3.926648664622818*^9}, 3.9266585510912237`*^9, 3.926658860720121*^9, 
   3.9266588918295236`*^9, 3.926659562542077*^9, 3.926659612327252*^9, 
   3.926659793712164*^9, {3.926660108951131*^9, 3.926660129326664*^9}, 
   3.926662344319126*^9, 3.926662393233452*^9, 3.9266625318443108`*^9, {
   3.9266628089910693`*^9, 3.9266628308170443`*^9}, 3.926664370287217*^9, 
   3.929554517033868*^9},
 CellLabel->
  "During evaluation of \
In[88]:=",ExpressionUUID->"c736d790-15ab-44b0-ad2b-67bc9bea4d7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.6081569696266134`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9266444767210407`*^9, 3.9266450176332483`*^9, 3.926645164052506*^9, 
   3.9266452334286947`*^9, 3.926645278899887*^9, 3.9266454817835426`*^9, 
   3.9266455974098225`*^9, 3.9266456546351504`*^9, {3.926645762071643*^9, 
   3.926645787255129*^9}, 3.926645825538335*^9, 3.926646784963263*^9, {
   3.926646819968997*^9, 3.926646832239146*^9}, {3.9266468993989606`*^9, 
   3.926646907883315*^9}, {3.926648453870987*^9, 3.9266484887020617`*^9}, 
   3.926648577905836*^9, {3.926648611780128*^9, 3.926648664433816*^9}, 
   3.92665855087323*^9, 3.926658860528125*^9, 3.9266588916405277`*^9, 
   3.9266595623660793`*^9, 3.926659612154252*^9, 3.9266597935281677`*^9, {
   3.926660108768132*^9, 3.9266601291586647`*^9}, 3.926662343937126*^9, 
   3.9266623928454514`*^9, 3.926662531453308*^9, {3.926662808663066*^9, 
   3.926662830387038*^9}, 3.9266643698772135`*^9, 3.9295545170468674`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"a13328af-b573-4acf-a993-3af4e61d7c0f"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"x\\\", \\\"3\\\"]}], RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"+\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \\\"x\\\"]}]]\
\\) has evaluated to non-numerical values for all sampling points in the \
region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 
   2, 102, 3, 25588527224105812111, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9266451640405087`*^9, 3.926645233603695*^9, 3.9266452789048843`*^9, 
   3.926645481789543*^9, 3.9266455974158225`*^9, 3.9266456546401515`*^9, {
   3.926645762077645*^9, 3.926645787243127*^9}, 3.9266458255443344`*^9, 
   3.926646785156263*^9, {3.9266468201609955`*^9, 3.9266468324281464`*^9}, {
   3.9266468995889606`*^9, 3.926646908076314*^9}, {3.9266484540599885`*^9, 
   3.926648488892063*^9}, 3.9266485780958366`*^9, {3.9266486119711275`*^9, 
   3.926648664622818*^9}, 3.9266585510912237`*^9, 3.926658860720121*^9, 
   3.9266588918295236`*^9, 3.926659562542077*^9, 3.926659612327252*^9, 
   3.926659793712164*^9, {3.926660108951131*^9, 3.926660129326664*^9}, 
   3.926662344319126*^9, 3.926662393233452*^9, 3.9266625318443108`*^9, {
   3.9266628089910693`*^9, 3.9266628308170443`*^9}, 3.926664370287217*^9, 
   3.9295545170498667`*^9},
 CellLabel->
  "During evaluation of \
In[88]:=",ExpressionUUID->"8ff2f4aa-77b1-4704-aa2e-c51802a4f2d1"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"x\\\", \\\"3\\\"]}], RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"+\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \\\"x\\\"]}]]\
\\) has evaluated to non-numerical values for all sampling points in the \
region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 
   2, 102, 4, 25588527224105812111, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9266451640405087`*^9, 3.926645233603695*^9, 3.9266452789048843`*^9, 
   3.926645481789543*^9, 3.9266455974158225`*^9, 3.9266456546401515`*^9, {
   3.926645762077645*^9, 3.926645787243127*^9}, 3.9266458255443344`*^9, 
   3.926646785156263*^9, {3.9266468201609955`*^9, 3.9266468324281464`*^9}, {
   3.9266468995889606`*^9, 3.926646908076314*^9}, {3.9266484540599885`*^9, 
   3.926648488892063*^9}, 3.9266485780958366`*^9, {3.9266486119711275`*^9, 
   3.926648664622818*^9}, 3.9266585510912237`*^9, 3.926658860720121*^9, 
   3.9266588918295236`*^9, 3.926659562542077*^9, 3.926659612327252*^9, 
   3.926659793712164*^9, {3.926660108951131*^9, 3.926660129326664*^9}, 
   3.926662344319126*^9, 3.926662393233452*^9, 3.9266625318443108`*^9, {
   3.9266628089910693`*^9, 3.9266628308170443`*^9}, 3.926664370287217*^9, 
   3.9295545170778675`*^9},
 CellLabel->
  "During evaluation of \
In[88]:=",ExpressionUUID->"61338e3a-2d34-4b18-97ad-95cd6a7aced2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.5618546474475996`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9266444767210407`*^9, 3.9266450176332483`*^9, 3.926645164052506*^9, 
   3.9266452334286947`*^9, 3.926645278899887*^9, 3.9266454817835426`*^9, 
   3.9266455974098225`*^9, 3.9266456546351504`*^9, {3.926645762071643*^9, 
   3.926645787255129*^9}, 3.926645825538335*^9, 3.926646784963263*^9, {
   3.926646819968997*^9, 3.926646832239146*^9}, {3.9266468993989606`*^9, 
   3.926646907883315*^9}, {3.926648453870987*^9, 3.9266484887020617`*^9}, 
   3.926648577905836*^9, {3.926648611780128*^9, 3.926648664433816*^9}, 
   3.92665855087323*^9, 3.926658860528125*^9, 3.9266588916405277`*^9, 
   3.9266595623660793`*^9, 3.926659612154252*^9, 3.9266597935281677`*^9, {
   3.926660108768132*^9, 3.9266601291586647`*^9}, 3.926662343937126*^9, 
   3.9266623928454514`*^9, 3.926662531453308*^9, {3.926662808663066*^9, 
   3.926662830387038*^9}, 3.9266643698772135`*^9, 3.9295545171088676`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"d44a1b21-f091-485f-8c6d-936baca1317e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.6081569696266134`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9266444767210407`*^9, 3.9266450176332483`*^9, 3.926645164052506*^9, 
   3.9266452334286947`*^9, 3.926645278899887*^9, 3.9266454817835426`*^9, 
   3.9266455974098225`*^9, 3.9266456546351504`*^9, {3.926645762071643*^9, 
   3.926645787255129*^9}, 3.926645825538335*^9, 3.926646784963263*^9, {
   3.926646819968997*^9, 3.926646832239146*^9}, {3.9266468993989606`*^9, 
   3.926646907883315*^9}, {3.926648453870987*^9, 3.9266484887020617`*^9}, 
   3.926648577905836*^9, {3.926648611780128*^9, 3.926648664433816*^9}, 
   3.92665855087323*^9, 3.926658860528125*^9, 3.9266588916405277`*^9, 
   3.9266595623660793`*^9, 3.926659612154252*^9, 3.9266597935281677`*^9, {
   3.926660108768132*^9, 3.9266601291586647`*^9}, 3.926662343937126*^9, 
   3.9266623928454514`*^9, 3.926662531453308*^9, {3.926662808663066*^9, 
   3.926662830387038*^9}, 3.9266643698772135`*^9, 3.929554517111867*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"b621780d-d331-4420-8d0b-7c1ce46caf07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.5618546474475996`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9266444767210407`*^9, 3.9266450176332483`*^9, 3.926645164052506*^9, 
   3.9266452334286947`*^9, 3.926645278899887*^9, 3.9266454817835426`*^9, 
   3.9266455974098225`*^9, 3.9266456546351504`*^9, {3.926645762071643*^9, 
   3.926645787255129*^9}, 3.926645825538335*^9, 3.926646784963263*^9, {
   3.926646819968997*^9, 3.926646832239146*^9}, {3.9266468993989606`*^9, 
   3.926646907883315*^9}, {3.926648453870987*^9, 3.9266484887020617`*^9}, 
   3.926648577905836*^9, {3.926648611780128*^9, 3.926648664433816*^9}, 
   3.92665855087323*^9, 3.926658860528125*^9, 3.9266588916405277`*^9, 
   3.9266595623660793`*^9, 3.926659612154252*^9, 3.9266597935281677`*^9, {
   3.926660108768132*^9, 3.9266601291586647`*^9}, 3.926662343937126*^9, 
   3.9266623928454514`*^9, 3.926662531453308*^9, {3.926662808663066*^9, 
   3.926662830387038*^9}, 3.9266643698772135`*^9, 3.9295545171148677`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"cc18ae3c-a944-4875-bcbf-7e5a7028b91b"],

Cell[BoxData["3.6451093351496473`"], "Output",
 CellChangeTimes->{
  3.9266444767210407`*^9, 3.9266450176332483`*^9, 3.926645164052506*^9, 
   3.9266452334286947`*^9, 3.926645278899887*^9, 3.9266454817835426`*^9, 
   3.9266455974098225`*^9, 3.9266456546351504`*^9, {3.926645762071643*^9, 
   3.926645787255129*^9}, 3.926645825538335*^9, 3.926646784963263*^9, {
   3.926646819968997*^9, 3.926646832239146*^9}, {3.9266468993989606`*^9, 
   3.926646907883315*^9}, {3.926648453870987*^9, 3.9266484887020617`*^9}, 
   3.926648577905836*^9, {3.926648611780128*^9, 3.926648664433816*^9}, 
   3.92665855087323*^9, 3.926658860528125*^9, 3.9266588916405277`*^9, 
   3.9266595623660793`*^9, 3.926659612154252*^9, 3.9266597935281677`*^9, {
   3.926660108768132*^9, 3.9266601291586647`*^9}, 3.926662343937126*^9, 
   3.9266623928454514`*^9, 3.926662531453308*^9, {3.926662808663066*^9, 
   3.926662830387038*^9}, 3.9266643698772135`*^9, 3.9295545171188693`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"3498ebf4-c8be-45da-972c-e64cb33dd25c"],

Cell[BoxData["3.6451093351496455`"], "Output",
 CellChangeTimes->{
  3.9266444767210407`*^9, 3.9266450176332483`*^9, 3.926645164052506*^9, 
   3.9266452334286947`*^9, 3.926645278899887*^9, 3.9266454817835426`*^9, 
   3.9266455974098225`*^9, 3.9266456546351504`*^9, {3.926645762071643*^9, 
   3.926645787255129*^9}, 3.926645825538335*^9, 3.926646784963263*^9, {
   3.926646819968997*^9, 3.926646832239146*^9}, {3.9266468993989606`*^9, 
   3.926646907883315*^9}, {3.926648453870987*^9, 3.9266484887020617`*^9}, 
   3.926648577905836*^9, {3.926648611780128*^9, 3.926648664433816*^9}, 
   3.92665855087323*^9, 3.926658860528125*^9, 3.9266588916405277`*^9, 
   3.9266595623660793`*^9, 3.926659612154252*^9, 3.9266597935281677`*^9, {
   3.926660108768132*^9, 3.9266601291586647`*^9}, 3.926662343937126*^9, 
   3.9266623928454514`*^9, 3.926662531453308*^9, {3.926662808663066*^9, 
   3.926662830387038*^9}, 3.9266643698772135`*^9, 3.929554517121869*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"b54a86ac-17ab-4f41-af7e-e4834abe16ff"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
hf8BSeSIig==
          "]]}, Annotation[#, "Charting`Private`Tag$702446#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
Fxs6xU/gfzVusq0=
          "]]}, Annotation[#, "Charting`Private`Tag$702446#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         LineBox[CompressedData["
1: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
EipRy2dlKYiC/wGTbtWE
          "]]}, Annotation[#, "Charting`Private`Tag$702446#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.560181, 0.691569, 0.194885]], 
         LineBox[CompressedData["
1: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
OTfHwZkX/7T6J3Dhf8NXnlQ=
          "]]}, Annotation[#, "Charting`Private`Tag$702446#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"(k/T\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\\!\\(\\*SubscriptBox[\\(f\\), \\(p\\)]\\)\"", HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox["\"k/T\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Directive[
       GrayLevel[0], 
       Thickness[Large]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, LabelStyle -> 22, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Distribution for \\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\): \
0.569151 eV. Dist. i = 1\"", TraditionalForm], 
     PlotRange -> {{0, 11}, {-1.116542151745653*^-6, 0.8175152192670285}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Numerical solution\"", "\"fit in second interpolation\"", 
       "\"M-B distribution\"", "\"B-E distribution\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 22, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "22"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9266444767210407`*^9, 3.9266450176332483`*^9, 3.926645164052506*^9, 
   3.9266452334286947`*^9, 3.926645278899887*^9, 3.9266454817835426`*^9, 
   3.9266455974098225`*^9, 3.9266456546351504`*^9, {3.926645762071643*^9, 
   3.926645787255129*^9}, 3.926645825538335*^9, 3.926646784963263*^9, {
   3.926646819968997*^9, 3.926646832239146*^9}, {3.9266468993989606`*^9, 
   3.926646907883315*^9}, {3.926648453870987*^9, 3.9266484887020617`*^9}, 
   3.926648577905836*^9, {3.926648611780128*^9, 3.926648664433816*^9}, 
   3.92665855087323*^9, 3.926658860528125*^9, 3.9266588916405277`*^9, 
   3.9266595623660793`*^9, 3.926659612154252*^9, 3.9266597935281677`*^9, {
   3.926660108768132*^9, 3.9266601291586647`*^9}, 3.926662343937126*^9, 
   3.9266623928454514`*^9, 3.926662531453308*^9, {3.926662808663066*^9, 
   3.926662830387038*^9}, 3.9266643698772135`*^9, 3.929554517265869*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"01ac70cc-387c-40c8-a0b0-9c23d17cfd9d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["To presentation", "Section",
 CellChangeTimes->{{3.929554536690067*^9, 
  3.9295545408861103`*^9}},ExpressionUUID->"302be3f8-a1dc-4e6b-8c79-\
80e9ecbffb86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**"}], "*", " ", "Select", " ", "distribution",
     " ", "that", " ", "we", " ", "already", " ", "have"}], " ", 
   "**********)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NumberOfDist", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SelectedDist", "=", 
     RowBox[{"AxDistFunctionList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SelectedMass", "=", 
     RowBox[{"maValuesList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SelectedFa", " ", "=", " ", 
     RowBox[{"faValuesList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<f_a: \>\"", ",", " ", "SelectedFa", ",", " ", "\"\< GeV\>\""}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Numerical", " ", "Solution",
      " ", "in", " ", "second", " ", 
     RowBox[{"interpolation", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Avalue", " ", "=", " ", 
     RowBox[{"polyModA", "[", 
      RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", GridBox[{
     {
      RowBox[{
       RowBox[{"bvalue", " ", "=", " ", 
        RowBox[{"polyModb", "[", 
         RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}]},
     {
      RowBox[{
       RowBox[{"\[Mu]value", " ", "=", " ", 
        RowBox[{"polyMod\[Mu]", "[", 
         RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}]}
    }], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Define", " ", "the", " ", 
     "distribution", " ", 
     RowBox[{"functions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fBoltzmann", "[", 
     RowBox[{"C_", ",", "x_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "^", "3"}], " ", "C", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", " ", "x"}], "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"fEinstein", "[", 
     RowBox[{"C_", ",", "x_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "^", "3"}], " ", "C", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Compute", " ", "the", " ", 
     "integral", " ", "of", " ", "the", " ", "selected", " ", 
     RowBox[{"distribution", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"upperLimit", "=", "13"}], ";"}], "\n", 
   RowBox[{"integralF", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"SelectedDist", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Define", " ", "the", " ", 
     "numerical", " ", "integrals", " ", "for", " ", "the", " ", "other", " ", 
     RowBox[{"functions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralFBoltzmann", "[", "C_", "]"}], ":=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"fBoltzmann", "[", 
       RowBox[{"C", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"integralFEinstein", "[", "C_", "]"}], ":=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"fEinstein", "[", 
       RowBox[{"C", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Solve", " ", "for", " ", 
     "C", " ", "using", " ", 
     RowBox[{"FindRoot", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"solBoltzmann", "=", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"integralF", "==", 
       RowBox[{"integralFBoltzmann", "[", "C", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"C", ",", "1"}], "}"}]}], "]"}]}], "\n", 
   RowBox[{"solEinstein", "=", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"integralF", "==", 
       RowBox[{"integralFEinstein", "[", "C", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"C", ",", "1"}], "}"}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Display", " ", "the", " ", 
     RowBox[{"solutions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", "solBoltzmann", "\n", "solEinstein", "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Verify", " ", "the", " ", 
     RowBox[{"solutions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"fBoltzmann", "[", 
      RowBox[{
       RowBox[{"C", "/.", " ", "solBoltzmann"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}], "\n", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"fEinstein", "[", 
      RowBox[{
       RowBox[{"C", "/.", " ", "solEinstein"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", 
     RowBox[{"Plot", ":", " ", 
      RowBox[{
       RowBox[{"Compare", " ", "fit", " ", "to", " ", "Bose"}], "-", 
       RowBox[{"Eintesin", " ", "and", " ", "Maxwell"}], "-", 
       RowBox[{"Boltzmann", " ", 
        RowBox[{"distribution", " ", "**", "**", "**", "**"}], "*"}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fApprox", "[", 
        RowBox[{"x", ",", "Avalue", ",", "bvalue", ",", "\[Mu]value"}], "]"}],
        ",", " ", "\[IndentingNewLine]", 
       RowBox[{"fEinstein", "[", 
        RowBox[{
         RowBox[{"C", "/.", " ", "solEinstein"}], ",", " ", "x"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "11"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<(k/T\!\(\*SuperscriptBox[\()\), \
\(3\)]\)\!\(\*SubscriptBox[\(f\), \(p\)]\)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k/T\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", "22"}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "2"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Green", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "3"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Numerical solution\>\"", ",", " ", "\"\<Bose-Einstein\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{
      "\"\<Distribution for \!\(\*SubscriptBox[\(m\), \(a\)]\): \>\"", "  ", "<>",
        " ", 
       RowBox[{"ToString", "[", "SelectedMass", "]"}], " ", "<>", " ", 
       "\"\< eV. Dist. i = \>\"", " ", "<>", " ", 
       RowBox[{"ToString", " ", "[", "NumberOfDist", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9295545769004784`*^9, 3.929554642273932*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"67791525-0c82-4835-ba3c-f8dd3d40c542"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"f_a: \"\>", "\[InvisibleSpace]", "10000000", 
   "\[InvisibleSpace]", "\<\" GeV\"\>"}],
  SequenceForm["f_a: ", 10000000, " GeV"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.929554543793141*^9, {3.9295546235797415`*^9, 3.929554649817009*^9}},
 CellLabel->
  "During evaluation of \
In[148]:=",ExpressionUUID->"58aa6e97-4c9f-4c2f-8c66-64c092043dd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "Null", "}"}], ",", 
   RowBox[{"{", "Null", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9295545438031406`*^9, {3.9295546235837417`*^9, 3.92955464982101*^9}},
 CellLabel->
  "Out[154]=",ExpressionUUID->"4378b6c3-93a3-4e36-9613-4609c2663769"],

Cell[BoxData["3.6451093351496464`"], "Output",
 CellChangeTimes->{
  3.9295545438031406`*^9, {3.9295546235837417`*^9, 3.92955464991501*^9}},
 CellLabel->
  "Out[158]=",ExpressionUUID->"bd99d080-3b27-46d6-b77d-6b723620e794"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"-\\\", \\\"x\\\"}]], \\\" \
\\\", SuperscriptBox[\\\"x\\\", \\\"3\\\"]}]\\) has evaluated to \
non-numerical values for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 161, 13, 
   25588527224105812111, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.929554543879141*^9, {3.9295546236867433`*^9, 3.92955464992601*^9}},
 CellLabel->
  "During evaluation of \
In[148]:=",ExpressionUUID->"b8ec86b0-347b-4c61-94ab-e4234f9b58c9"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"-\\\", \\\"x\\\"}]], \\\" \
\\\", SuperscriptBox[\\\"x\\\", \\\"3\\\"]}]\\) has evaluated to \
non-numerical values for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 161, 14, 
   25588527224105812111, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.929554543879141*^9, {3.9295546236867433`*^9, 3.9295546499360104`*^9}},
 CellLabel->
  "During evaluation of \
In[148]:=",ExpressionUUID->"23f23369-7290-4644-92f1-d5d3e26e3060"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.6081569696266134`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9295545438031406`*^9, {3.9295546235837417`*^9, 3.92955464994501*^9}},
 CellLabel->
  "Out[161]=",ExpressionUUID->"6628b716-b64d-47ec-99f5-927ac4d32027"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"x\\\", \\\"3\\\"]}], RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"+\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \\\"x\\\"]}]]\
\\) has evaluated to non-numerical values for all sampling points in the \
region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 
   2, 162, 15, 25588527224105812111, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.929554543879141*^9, {3.9295546236867433`*^9, 3.9295546499480104`*^9}},
 CellLabel->
  "During evaluation of \
In[148]:=",ExpressionUUID->"baf8492e-bf9c-44b8-8765-2213ff495b43"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"x\\\", \\\"3\\\"]}], RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"+\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \\\"x\\\"]}]]\
\\) has evaluated to non-numerical values for all sampling points in the \
region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 
   2, 162, 16, 25588527224105812111, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.929554543879141*^9, {3.9295546236867433`*^9, 3.9295546499580135`*^9}},
 CellLabel->
  "During evaluation of \
In[148]:=",ExpressionUUID->"dae0c8e0-cfbd-4982-9370-2708a8067bbf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.5618546474475996`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9295545438031406`*^9, {3.9295546235837417`*^9, 3.929554649967013*^9}},
 CellLabel->
  "Out[162]=",ExpressionUUID->"e75c6da1-111b-41da-ba61-ff9efe73ca71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.6081569696266134`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9295545438031406`*^9, {3.9295546235837417`*^9, 3.9295546499700108`*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"af245951-6b03-4088-b7bf-8a36430e19be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.5618546474475996`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9295545438031406`*^9, {3.9295546235837417`*^9, 3.9295546499740105`*^9}},
 CellLabel->
  "Out[164]=",ExpressionUUID->"96abc04f-b202-4903-a826-13e1705c248f"],

Cell[BoxData["3.6451093351496473`"], "Output",
 CellChangeTimes->{
  3.9295545438031406`*^9, {3.9295546235837417`*^9, 3.929554649977011*^9}},
 CellLabel->
  "Out[165]=",ExpressionUUID->"e21895c4-1419-457a-9c31-85dbc1738809"],

Cell[BoxData["3.6451093351496455`"], "Output",
 CellChangeTimes->{
  3.9295545438031406`*^9, {3.9295546235837417`*^9, 3.9295546499810147`*^9}},
 CellLabel->
  "Out[166]=",ExpressionUUID->"61b488a9-cb82-4ce2-aa96-64049bb56291"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
Fxs6xU/gfzVusq0=
          "]]}, Annotation[#, "Charting`Private`Tag$706420#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         LineBox[CompressedData["
1:eJwVlnk8VG0Ux2fGLAaJUJE9I1tC6k3hnKRSKkpFaaEiS7JkLUKJxlYh2bKN
t4VKUtay9FpCmxAtSrLMRZaoEHlvf93P9/Pce57znPP7nfsoHXHf5UCjUCiq
VArl73NTVIais1Kssalb4Cx+UTBSlVVZG89zBcHzli0V9e+N+9/v/LWXdwYK
0vzKS8unjTtbnql5lYXB3UjXQiZTFDaX8dvW8KLApjma5pwjAzaWYdVzG6+A
Z5+eglO9CsRskFx8tCwBfh4z0P35aTk8XZ1zsk47CbYa0ZsPmOvDL3X9WnVe
Krh+0tmx2XctaMnVLIlZlAGpd2uzE4oRdAQ1DCY3ZoHA/vXMgBRTaKR69ahT
eLBKauNzs69m4PC79JJtWQ5kn4+CwCvbgfKDui7G+wb8jjw+u3HXTkgZ3tJX
oX0LZG2OeU/O2w2vvrwzVOblwfEzHU2vZPaDywclvtXBu+A5N3vopOtBoLc5
x19YlA/DV074X/W1A9meGe+JjQXgpTCcGLD+GBBdmVvnLX0AP1m1vYbmjlDU
aaqoSimE1OAzqkJuTrCzPbrJuuwhtBl0mhtPngD5Vp0sj2uPwD7q3y1H7d1h
6HWrL9e7CGKk/1vFGvOA8EZZ5XLtEmhXrJQsSzgF5U/u+MvzymHJgsEbvo4B
cLHMcsc/IY9hNHOe5b5fp2Fv8cRSy4NPoL7utmxQfCCM3jd8FbqoEmgFV/o2
fwuGBbv64r5vrIYfK5Jcr8adB3/LktmzD6uBXqntrxkRBp93RDoJL30KPJ3d
h5RDL8Adc21jFcp/kGPXaiBxIQI2b/Ql9pTVQHYn4y3neRTc22C2u1utFqoa
E/T7B6JB0kSm8uS1WhgIXzjeKBoL3cYVCRHedTBg12jzTe8yBK5hYqn2M6gp
mpJRvhUHBZqJibK8Jmh7vKy9iZUE76vrz/yQeQ6WGXLrhl8kAc1myu5l3HPg
ccScXyQmw66wA5oh516A5AIL03ydVPj+Ubnqq/0ryKQOZAaFpYN0fbv3nsvN
UJV/+oFMazYsj/PoX/+8GS6ZzeRPm/Ng/UH2fm3BN7BVq1xGspYHzuNrgRXy
BvK57qsGSJ2UKqSzS91bQPDWyPOehzdgn/+xdFmLNij/73DA0q5ccNswK8aO
aoO5HJvgSy55ECqaeP5HXRt4DXreEf+ZB7dz6p1eGr8Fm3snei3E7sLUa42V
Idrt4G+9boH/znxIVh+r/zrvHXSp73S2oD2Ad++DxnKff4QMrbjsofnF4HRP
/2U6vRN434s2dB8qhsnQwdw4w04w7/Xg6d8rhoXq+46dvtMJ6TXdPkPbS2C3
n377luhPwOi1OBF3pRT6uT6HJjhdkOZ4oo2t/hiOqGqZxvd+gQS5Rts7DVVg
czh5fvOxXlCht7iGJdZBfP5mu+U4BFT36RWFp5rh+xO/PLWOMRBn7i2i7O6A
15p3zAosf0Dl5hUxJac/QZl1Z8l1iSlQuL7RacK4G1RrxLWOKk9BllDYvL4t
3RCnsylDTXcKYliZnq93d4MrO/9C4Y4p+OF38PAll26QLQ/Z1cCdgovvj+g9
utoNZ+VVhibmpoD9IHQ4daAbTHpdFLYNTUPulwb9B7Ffoclr8sJ0zQxMKQda
za/sgb32D1uq38zAaMiojGd9D3RbeChxu2bAR2D3raZXPTCpxX+8aGYG5K5r
iLh29YBKf/u4/spZuCj26PEuai8E2hbbu2fNgt32hdSa9b2gbepr1BP0B65O
25YpPemFUj29qLyoP2Ch/SgtqaYXTJWGO7yS/4BXg7Wo4PNe2P/HwZv66A/I
GNxOef2+F8JL9uTJD/0BsRTnfwQne+Gz1irpffvnYN+1f5PEdPvgmdDpaccl
FPSTVlYPud4Hkb9nnT4rU7AvRqguPqcPzIdC2601KFhTN3EhPa8PXr7gPjQz
oGBtu4JbcmkftF1OPqlhTcFFYnMvVdr6oHthafe3OAq2HNuaf0WoH2aUJxu9
haj4WJ67qOZkP1RIBBp8E6eipaY5v9y7H4LplFsO0lQ8vv3Xp9zT/UDrY13Y
q0ZFdl0MngzvB/btRbBmExWHKr70R17vh4Ur/in8HUpFx9suAbKN/aC7zjf1
3BQVZxcKlN+U5QPtm9GvMxQaehz4HLJSiQ+t6QwrHxYNrwlb3S3m8MGXdlXI
SYqGeinfjG9r86GsoTBguy4N3R6cddJFPpjYjFkvdqahbsVpars9HySESgvF
PWio/in3JeHAh57ykPnCfjQ0b7Fe/MOZD+EKYvWzYTT8s2vTsh+efGjs0179
NZOGGhs2HU4N5YOVzwnJex00HIj8mROawQeVZfoeNz+T6zUV07I8Pvzs+N2U
2UfDXMfg/vs3+JBkGHU+foKG9fcVYp7e5cNHgdzv/mICaCNkZBhTzodjcf2v
N5gJ4C8V8zfVbXzwyT8S865YALO3Ph5+RCdAZVVPQ36FAPIHP7juZxHQWubA
DK8VQINmL8FJNgF6dU7Bei0CqG+Xekt+PgGjH096Rg0LIPVRSrW0NAGuQmf2
GHHoOCcVtalBkwCZyzNXJLToKO0+95SiTUCj1NmXhB4dWx1553R1CFBTCt2c
iHQUUX3delafgL5/IgxGbOl41uwRs8GQAHuHeLmsODr2JUaWym0jQGxQcr9f
Mh0lv78OH9hOQJVHYuL2TDqWC35+ct+CAPnA5PnTd8n9uHtOqVsR8DEug2rV
8JctTJ7vIyB6sZKx+ms6au51yDlmS8C69OzTc2/puMc5MuznAQJSbv87ntdD
x5mh3Q1MOwKsq/J66RQG6rY9uPvOgQDmpuXKH5gM/KI+ZWZ8nICipnuHCuYx
8Ns+Xb80JwIk2wvaDy5hYH2a5LWNrgS8+VbcULSagf5nPVeYexBw7pQBM8aI
gWUnqHcDPQnQnSozOWrKQL3sX29uehFwmV5RPn8XA0tOTisPehOwfUnNXSc3
Bt7UEFRUDSDAP2WwoMWbjG/UfGXtaQJypCWKjAMZ+Lnw+I3NZwiYXnSkQjKK
zO/r2jrzIAJUr3GfBscxMDP0eofJWQJ2LiyoG0hm4KyhdJpeMAG3JCmvqm4x
8P3BWtOZELLf8ctaNO8zsI6qq/s2lIC5BRbticUMtFmp1XnrHAF7xdM/n6hj
YJrmsXNrwgigixqOLu5h4O05VydqBAE6MUcnzg8y0MK/pTiLZFuRqMnh7wyU
l9PtWXuRgAdC7ym1VCYetrzfbc0l4BOXytBhMzHcxezxB5LZbHV2qhgTx8v/
C7WJJMCO5S/uqcDEe7tcPhtGkf0Lz5D6qMrE4f3ywTkkFzPqpTdrM1FXsl6a
EU1Ad9iw3INVTEyx0y48RLIofaGynBETP25VtCggee15I9WLpkzcSXEdmyHZ
geagMW5O7tf46fr6GLL+odHah6yYeEp4h00wyY8pD/Ua9jMRV8aoFJHMD/6w
Wv8IE29VeDH7SJaYo63LcCbz0W6nzo8lwPisBgh5kt/Tr8rokuwyu3ODjz8T
35Rc3L2N5MTAgM1dwUyUKb1caEdy9e9Mc/MIJv44HLPuJMlDp59ZFMUysWfE
btSb5MXTI1ZKiUwMjhlp+8umAYtsoq+T9TBQGHUj2X3S+MCvHCZONrWb/I2X
4udod+QOE18O0d6Yk1z3M+bYi0Imvp8fnaVD8pjPI6c15Uy0PWn3SJRk2R8f
T/CeMtGf6i7+9zxm3nRP0UYm3g+8Vfr3vKfGNX0Cmpm42myuIITkdC+rgJ4O
Jh45c/zPBpIbx04HWXQxUbH9bTaF5B8e2aFl/Ux0rjLlFZH1VRxtuMAZYeLT
tbkCjiRvcx/jXv7JxKJu6jNRkv2GF8f+niXj8TdP3Cf7+XLoeGKzCAsjYq8l
fCH7P+16KcVQkoXSmCXmQTJnsCj95hIWPnNMpk+SegkkGDeDNFg4e9Hh2ASp
r1tOy/P4uix8uW9jhxPJLf27860MWFgAmq1vST1q9PGK1c1YOHpQxzsjnOy/
6vzbUhYsFB2sOMogOdPxdAp1LwsZBfaVDhcIWNhvGfTuKAtjKJLPpEi9U/mz
JtxgFp7HB2dWkv4wVHPW9wln4WL5I2pupH98nVo59jEsPPcn3TaL9NcQP1fQ
IJWFEm7zjk6RfuwgrF/yi1gYJidi5UT6V0Ljv8rWJyxkjp244kv6e4eLdkFV
DQubq4Q9g/0JqBmgJyS9YeGBXy5Kob4E5A8W7DMbZuFU7r0cU3JehH8T7r3J
EcR5f6KXvSLnT/Vyv7fxWoJoLeYyj0vOpxm37vrglYK4/uGpRiNHAryGS3Kt
1wuisXB6+7WjBBwccfBgHRREUXS8LnqIAP2xyt+OCYK4/7VsM3sXqS9dzW+7
UgWxs6it2suSgFzPxE/G2YKY37Gm6u0Osr/fT1QvvC+I2n1545fMCRAel46o
ayLjPZC5Wm9K+nHi1AJVATZ2K/9XvWM1AcnaF5puCLFxjdRVXE/Oe0unxLBl
C9gokrFJR1uPgIoPJT/VlNj4Qqbx1K/lpJ6fzr7XBDbaviMYZhwCdl2O4Ome
YWPQswbN3gXkeTVT9Y3G2Tg1I6SpPcAHf4c7355Ms1HdL83Er58P2hlPbhjT
hHCowMC6vIcPaQu6FqO4EBqsXcjV/0y+P6Uya7JCCNMKKrmDLXzQqb9Xa+Yq
hL45jGb3x3zIPPJ07+6vQvhHI3p8hMuHVR4xowUDQjizIurf++Hk/zrIJnL+
dyFUpS5ju53nw4+k4SeNFGH8pcH90RHIh62vZDjr5YWxKEuxLcidDxPrTo0v
3yeMXYV3jOes+GAmpXKZ9UoYBUcGRWal+TBWf6GhrEwEO3Oe7axJ6YfExATL
5GoR/Ky0hfcusR/WOvDa/Z6JoJvPNomhuH4Io1X36r8VQa9mG1vBKPJ+YzRD
zR8TwYlz1d3yZ/rB8IHXWp7aPHxyI/ZC3f5+iEg7nBeVOA+lTOPTpRb3g5yn
QcwBL1H8LnWv1zaqD24+XiWXtEwMkw9oGwQZ98Ld7k1pCkxx5A4QdQEjX2H1
mkVi+EscXyytsInz6QYuWzl15usCTNcPf+002wUNMzkv31ZJ4ImaUW1Hk88Q
rdD/c8t9SXRyz39F2H8Ew2NZ9e8vSaH4o7cZpc/fQZFKYj7LdSHG68iZRR5t
h0LJrdEvbBZhfbfQxvBvrXBd1Ve8YPVi9FkS28RteANCTvZRy5dJ40TXZZXq
nNewnhMhu0lCBtus0m58cX8BDnTO3sARGUyVozjvUW8EEYlzYeaflqCmtKzK
0rE6yNpgbbvmiSwW8UL4TMMamBtx3FJ9TQ4npJLyv7dXQ1fTKq2vYfJILLF+
flKkEvIbAouVjyiguL6MxWe9cgg5U506q6aIAR4trndDikGRR7k/maSIa52W
0Et9HsK/gp2vqplKeKEiG9veFMAgQ9qlPUgJb590E7ibeQ/UJK90/B5SQpXr
VwKXX8wF1TKn6hMOytiyLf+oWu4NYKd3Psr7oIyL8htcDO158DUu9uzUlqU4
qZLwcHFJJpxVyKiOr16Ks/JuE2aeaSD2ZLDDUFcFBZqFFb66JEFEUtvvwnQV
VLO9l6AwlwBVwgrJflIcHJQ4zo94fgVGLuUIbQ3j4IjEl4iX/rGw6aNt95pw
DrYa6tonHY2FdDWJsmUXOTjU8MXEY0csbKsOdWZEk+tZozNbVGLh1vdDz6ri
OQhN2bY5r2PgyB7p8H94HPz0/PzOb5ox0CoTS+U85WDflrnQq0NRoHl84zuJ
Gg7Wnq0UFXsXBecKZ+7T6jjYXcNOvlYbBTrbXO26GjgoEiMW/iI9CmKCzCpT
mzl4xCjvS8vOKNjURQta8IWDRM/tvA1lkXBdq2w39SsH6SaMPZE3I2HC31Nr
tIfMR9EgqDMhErLFuz684HPwfexCzdvukTBn8mQtd5SDrpWiKm2cSNh7yXuB
/3cOytn5Dp6ViIR7HzQHHCc4eDL3z7g+NRIOeKckm05ycFtW3+3aj1worNrp
uXKag+nZwmaZjVwQmsfeojzDQffxD4IRJVyw31elKP6HrE97TU/ADS6U/Os3
OTfHwZkX/7T6J3Dhf8NXnlQ=
          "]]}, Annotation[#, "Charting`Private`Tag$706420#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"(k/T\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\\!\\(\\*SubscriptBox[\\(f\\), \\(p\\)]\\)\"", HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox["\"k/T\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Directive[
       GrayLevel[0], 
       Thickness[Large]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, LabelStyle -> 22, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Distribution for \\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\): \
0.569151 eV. Dist. i = 1\"", TraditionalForm], 
     PlotRange -> {{0, 11}, {0., 0.7986397452254974}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Numerical solution\"", "\"Bose-Einstein\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 22, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "22"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9295545438031406`*^9, {3.9295546235837417`*^9, 3.929554650066012*^9}},
 CellLabel->
  "Out[167]=",ExpressionUUID->"d418daee-2f65-4a6d-96fe-5fe3983c2fe7"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.8 Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c55adef4-ec4b-40be-9041-f01d2a2f28eb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 131, 2, 35, "Input",ExpressionUUID->"b202fac7-5a64-4dd4-be8c-e86f4480827f"],
Cell[CellGroupData[{
Cell[714, 26, 168, 3, 54, "Section",ExpressionUUID->"e545755f-2680-45e2-937b-6e3ec580fc4f"],
Cell[CellGroupData[{
Cell[907, 33, 182, 3, 35, "Input",ExpressionUUID->"a60684c3-e5fb-4e4a-88cc-9e69f1c50def"],
Cell[1092, 38, 566, 7, 25, "Output",ExpressionUUID->"970cca91-49a3-4366-9282-5fe23b37ee0f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1707, 51, 201, 3, 54, "Section",ExpressionUUID->"79fc1f3a-42ef-4725-9eae-9c43c171939b"],
Cell[1911, 56, 2179, 60, 99, "Input",ExpressionUUID->"9a5ff9a2-df74-462d-bb0d-b1293771c2d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4127, 121, 192, 3, 54, "Section",ExpressionUUID->"1bd9d1a5-6753-42fc-ae5f-8ce6fd33a62f"],
Cell[4322, 126, 709, 12, 64, "Text",ExpressionUUID->"ab4f72ee-db69-4cee-9ceb-c4ad11b3367c"],
Cell[CellGroupData[{
Cell[5056, 142, 8293, 220, 701, "Input",ExpressionUUID->"c125ebb4-5cba-4538-bbe9-0a7503af0d46"],
Cell[CellGroupData[{
Cell[13374, 366, 10216, 149, 145, "Print",ExpressionUUID->"351c4aed-b7ab-4bea-8336-496cb0a8ca7a"],
Cell[23593, 517, 8403, 133, 187, "Print",ExpressionUUID->"3554e28b-e10d-4c41-abfa-718a0096eb6f"],
Cell[31999, 652, 5721, 86, 187, "Print",ExpressionUUID->"21ac8d4d-1c43-42c4-adea-ce3d01c25f6e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37781, 745, 344, 7, 54, "Section",ExpressionUUID->"577a06c1-38c0-4729-a11d-59aff21e1218"],
Cell[38128, 754, 660, 11, 46, "Text",ExpressionUUID->"2891d8e3-d8ea-4680-b0f5-355ed3d5545a"],
Cell[38791, 767, 6124, 171, 270, "Input",ExpressionUUID->"cac48558-9723-443f-aa7c-567aa11fcada"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44952, 943, 260, 4, 54, "Section",ExpressionUUID->"7510d97c-6160-4c58-b231-a04743f388a4"],
Cell[CellGroupData[{
Cell[45237, 951, 1353, 33, 78, "Input",ExpressionUUID->"ff88f481-52e1-4f69-b612-690c450697da"],
Cell[46593, 986, 36825, 644, 192, "Output",ExpressionUUID->"c9fc826b-2a9d-4fe0-90df-0f1ae90076dd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[83467, 1636, 261, 6, 44, "Section",ExpressionUUID->"5556a98d-3614-4ff3-b1c8-32639a3768a1"],
Cell[CellGroupData[{
Cell[83753, 1646, 6752, 174, 480, "Input",ExpressionUUID->"7562128a-b165-492c-9428-cb9409d45bd2"],
Cell[90508, 1822, 1618, 29, 18, "Print",ExpressionUUID->"278ebad3-cb40-4398-8182-d9045418ea0e"],
Cell[92129, 1853, 24355, 453, 374, "Output",ExpressionUUID->"a2601081-6957-41a9-bb7a-de4d1a4a77a6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116533, 2312, 196, 3, 54, "Section",ExpressionUUID->"860f6c3a-3075-4df1-be17-9c5f234016b8"],
Cell[116732, 2317, 580, 10, 46, "Text",ExpressionUUID->"17d8774a-f83d-4423-b07a-e00363bb8899"],
Cell[CellGroupData[{
Cell[117337, 2331, 6933, 168, 599, "Input",ExpressionUUID->"37d99190-2249-4f05-95af-b3657bbdebb8"],
Cell[CellGroupData[{
Cell[124295, 2503, 484, 11, 18, "Print",ExpressionUUID->"76b29a9b-f64c-4574-83ac-710450e28469"],
Cell[124782, 2516, 484, 11, 18, "Print",ExpressionUUID->"30b8774c-c53e-420a-af95-16fb3b327b0e"],
Cell[125269, 2529, 484, 11, 18, "Print",ExpressionUUID->"71f14e6a-f146-4399-9964-285486e52d17"],
Cell[125756, 2542, 484, 11, 18, "Print",ExpressionUUID->"7f90849e-b559-4ec7-bb21-c2bc29239ee7"],
Cell[126243, 2555, 486, 11, 18, "Print",ExpressionUUID->"3b1365c6-b907-4f8a-8797-362cded2456e"],
Cell[126732, 2568, 486, 11, 18, "Print",ExpressionUUID->"570a3eca-cf3e-4844-a1f7-26ff989840ef"],
Cell[127221, 2581, 486, 11, 18, "Print",ExpressionUUID->"3ea71629-d7bc-41ee-b850-4a3d223d524b"],
Cell[127710, 2594, 486, 11, 18, "Print",ExpressionUUID->"bb9efe4f-c241-4d17-a5a5-0cbf2c3c9e48"],
Cell[128199, 2607, 486, 11, 18, "Print",ExpressionUUID->"b688fcf0-3f2e-4ca6-bbb4-0b11a2bdbe97"],
Cell[128688, 2620, 488, 11, 18, "Print",ExpressionUUID->"124c94e7-e6c4-4a4d-be5d-15da877edb1f"],
Cell[129179, 2633, 486, 11, 18, "Print",ExpressionUUID->"10a8b56d-e585-452c-bb46-f9da474d3307"],
Cell[129668, 2646, 486, 11, 18, "Print",ExpressionUUID->"269eb9e5-751e-4030-ae9f-d5e3a5ed8d21"],
Cell[130157, 2659, 488, 11, 18, "Print",ExpressionUUID->"cf106a9a-b34a-4833-bc7c-65b42ebe6cdd"],
Cell[130648, 2672, 488, 11, 18, "Print",ExpressionUUID->"090843cd-75c0-4e17-8b29-6a529b988127"],
Cell[131139, 2685, 486, 11, 18, "Print",ExpressionUUID->"1f2ed644-5bc7-4f98-93d4-be8a2db591cf"],
Cell[131628, 2698, 488, 11, 18, "Print",ExpressionUUID->"384be3a9-7045-49ff-b78a-d75b354e088b"],
Cell[132119, 2711, 486, 11, 18, "Print",ExpressionUUID->"ae773848-9eba-46a5-8e60-0e170b10087a"],
Cell[132608, 2724, 488, 11, 18, "Print",ExpressionUUID->"acc1e225-0643-431b-b08e-3f1efa2c8a98"],
Cell[133099, 2737, 486, 11, 18, "Print",ExpressionUUID->"0b65eb86-655f-4d8e-842a-87d71819b878"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133646, 2755, 191, 3, 54, "Section",ExpressionUUID->"b4f2b77e-fdf5-4e95-bde7-698b561c88ee"],
Cell[CellGroupData[{
Cell[133862, 2762, 3594, 89, 282, "Input",ExpressionUUID->"495be311-a8cd-41e0-a6be-a4d2cf0bd39c"],
Cell[137459, 2853, 8073, 173, 375, "Output",ExpressionUUID->"2cde0a3e-7a37-4e4d-9320-3a2ddfd6df96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145569, 3031, 2443, 64, 238, "Input",ExpressionUUID->"4d72a27e-7e85-4243-989f-46028b1ae748"],
Cell[148015, 3097, 7894, 169, 374, "Output",ExpressionUUID->"fc428838-2155-4667-bd1b-d06e140866a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155946, 3271, 3410, 87, 267, "Input",ExpressionUUID->"4382a1aa-45a8-4477-9ac6-b804a33d36ad"],
Cell[159359, 3360, 8087, 173, 368, "Output",ExpressionUUID->"91d3fc7f-21f3-4a72-824f-b631c0aa7a0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167483, 3538, 3442, 86, 282, "Input",ExpressionUUID->"385bc57c-4ef3-46ed-b85e-0978e804bfdd"],
Cell[170928, 3626, 8079, 173, 373, "Output",ExpressionUUID->"ad24d771-2a35-40b0-9cc2-fb9fd034f19a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[179056, 3805, 246, 4, 54, "Section",ExpressionUUID->"c88dce5d-d78e-4c69-95e5-862e3ff2f82b"],
Cell[CellGroupData[{
Cell[179327, 3813, 4751, 119, 412, "Input",ExpressionUUID->"966bf734-fe1f-489b-85a5-aa15af3122e4"],
Cell[184081, 3934, 32068, 544, 40, "Output",ExpressionUUID->"d59eabe0-0a06-4472-bdc4-31e0493242ec"],
Cell[216152, 4480, 1320, 30, 26, "Output",ExpressionUUID->"5b0a1c75-c0b0-4ab7-983d-b96ff109ffb4"],
Cell[217475, 4512, 16533, 315, 375, "Output",ExpressionUUID->"78d9bb46-8bbe-4c80-b93b-9d7d6d660173"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234045, 4832, 4361, 114, 399, "Input",ExpressionUUID->"4e91b80b-b9b5-45cd-8ad1-c4caf1b68008"],
Cell[238409, 4948, 29829, 506, 40, "Output",ExpressionUUID->"f177b61a-2d09-4cbf-95fe-0f9f95a89c42"],
Cell[268241, 5456, 1115, 25, 26, "Output",ExpressionUUID->"2a86c494-25eb-4103-b80a-99fc05dce3c1"],
Cell[269359, 5483, 16726, 317, 414, "Output",ExpressionUUID->"5717e788-6d00-4d87-a00f-c5511c5bba65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286122, 5805, 4430, 115, 412, "Input",ExpressionUUID->"317c3109-653c-4a8f-af29-3ea5a39ce19a"],
Cell[290555, 5922, 31999, 543, 40, "Output",ExpressionUUID->"3e835a05-c51b-49e8-a5a3-afbb7a508d71"],
Cell[322557, 6467, 1160, 28, 26, "Output",ExpressionUUID->"8fdaa358-b51b-4675-9446-2e622f588ec8"],
Cell[323720, 6497, 240, 3, 25, "Output",ExpressionUUID->"0ad7b404-71f9-4df8-ab68-49800f8b80b0"],
Cell[323963, 6502, 19285, 359, 401, "Output",ExpressionUUID->"b24976f1-1e19-43c5-b2f6-7dbf3824b89e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[343297, 6867, 169, 3, 54, "Section",ExpressionUUID->"18b746f1-6ade-48bb-8830-b85b3abfc58b"],
Cell[CellGroupData[{
Cell[343491, 6874, 6561, 158, 459, "Input",ExpressionUUID->"f3974a57-3e18-4d33-adf8-c69fc82cdb2c"],
Cell[350055, 7034, 844, 15, 25, "Output",ExpressionUUID->"b9332e93-0865-4587-9465-805e4bf5d08c"],
Cell[CellGroupData[{
Cell[350924, 7053, 709, 14, 18, "Print",ExpressionUUID->"8ea19475-8ae6-4fe4-a15a-b998fa424576"],
Cell[351636, 7069, 924, 18, 20, "Print",ExpressionUUID->"25e275a6-c56a-4209-aaf5-c3d115965634"],
Cell[352563, 7089, 716, 14, 18, "Print",ExpressionUUID->"9a4002d4-06b3-4b74-a1c5-bfe5a997b955"]
}, Open  ]],
Cell[353294, 7106, 23883, 448, 399, "Output",ExpressionUUID->"7f66b3bb-7236-458d-96f9-9849db59a657"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[377226, 7560, 203, 3, 54, "Section",ExpressionUUID->"dcb55237-1142-49f5-9d59-958979ce9564"],
Cell[CellGroupData[{
Cell[377454, 7567, 10678, 260, 978, "Input",ExpressionUUID->"fbeb1984-8789-4699-9939-03051eef7eb7"],
Cell[388135, 7829, 583, 13, 18, "Print",ExpressionUUID->"261b7d70-0f39-4ac8-bf64-6600dcf64f2f"],
Cell[388721, 7844, 1106, 18, 25, "Output",ExpressionUUID->"dc511def-4417-47c3-98a6-ac6d19ef8512"],
Cell[389830, 7864, 1027, 14, 25, "Output",ExpressionUUID->"ae471a33-6cc9-4308-ba88-a3305dae4dfe"],
Cell[390860, 7880, 1521, 26, 23, "Message",ExpressionUUID->"b5575a04-1555-4028-b7a0-c47831725ee7"],
Cell[392384, 7908, 1519, 26, 23, "Message",ExpressionUUID->"c736d790-15ab-44b0-ad2b-67bc9bea4d7b"],
Cell[393906, 7936, 1082, 17, 25, "Output",ExpressionUUID->"a13328af-b573-4acf-a993-3af4e61d7c0f"],
Cell[394991, 7955, 1555, 26, 35, "Message",ExpressionUUID->"8ff2f4aa-77b1-4704-aa2e-c51802a4f2d1"],
Cell[396549, 7983, 1555, 26, 35, "Message",ExpressionUUID->"61338e3a-2d34-4b18-97ad-95cd6a7aced2"],
Cell[398107, 8011, 1082, 17, 25, "Output",ExpressionUUID->"d44a1b21-f091-485f-8c6d-936baca1317e"],
Cell[399192, 8030, 1080, 17, 25, "Output",ExpressionUUID->"b621780d-d331-4420-8d0b-7c1ce46caf07"],
Cell[400275, 8049, 1082, 17, 25, "Output",ExpressionUUID->"cc18ae3c-a944-4875-bcbf-7e5a7028b91b"],
Cell[401360, 8068, 1031, 15, 25, "Output",ExpressionUUID->"3498ebf4-c8be-45da-972c-e64cb33dd25c"],
Cell[402394, 8085, 1029, 15, 25, "Output",ExpressionUUID->"b54a86ac-17ab-4f41-af7e-e4834abe16ff"],
Cell[403426, 8102, 40957, 753, 399, "Output",ExpressionUUID->"01ac70cc-387c-40c8-a0b0-9c23d17cfd9d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[444432, 8861, 162, 3, 54, "Section",ExpressionUUID->"302be3f8-a1dc-4e6b-8c79-80e9ecbffb86"],
Cell[CellGroupData[{
Cell[444619, 8868, 8851, 231, 922, "Input",ExpressionUUID->"67791525-0c82-4835-ba3c-f8dd3d40c542"],
Cell[453473, 9101, 408, 10, 18, "Print",ExpressionUUID->"58aa6e97-4c9f-4c2f-8c66-64c092043dd9"],
Cell[453884, 9113, 304, 8, 25, "Output",ExpressionUUID->"4378b6c3-93a3-4e36-9613-4609c2663769"],
Cell[454191, 9123, 223, 4, 25, "Output",ExpressionUUID->"bd99d080-3b27-46d6-b77d-6b723620e794"],
Cell[454417, 9129, 752, 15, 23, "Message",ExpressionUUID->"b8ec86b0-347b-4c61-94ab-e4234f9b58c9"],
Cell[455172, 9146, 755, 15, 23, "Message",ExpressionUUID->"23f23369-7290-4644-92f1-d5d3e26e3060"],
Cell[455930, 9163, 274, 6, 25, "Output",ExpressionUUID->"6628b716-b64d-47ec-99f5-927ac4d32027"],
Cell[456207, 9171, 789, 15, 35, "Message",ExpressionUUID->"baf8492e-bf9c-44b8-8765-2213ff495b43"],
Cell[456999, 9188, 789, 15, 35, "Message",ExpressionUUID->"dae0c8e0-cfbd-4982-9370-2708a8067bbf"],
Cell[457791, 9205, 275, 6, 25, "Output",ExpressionUUID->"e75c6da1-111b-41da-ba61-ff9efe73ca71"],
Cell[458069, 9213, 277, 6, 25, "Output",ExpressionUUID->"af245951-6b03-4088-b7bf-8a36430e19be"],
Cell[458349, 9221, 277, 6, 25, "Output",ExpressionUUID->"96abc04f-b202-4903-a826-13e1705c248f"],
Cell[458629, 9229, 224, 4, 25, "Output",ExpressionUUID->"e21895c4-1419-457a-9c31-85dbc1738809"],
Cell[458856, 9235, 226, 4, 25, "Output",ExpressionUUID->"61b488a9-cb82-4ce2-aa96-64049bb56291"],
Cell[459085, 9241, 21019, 401, 399, "Output",ExpressionUUID->"d418daee-2f65-4a6d-96fe-5fe3983c2fe7"]
}, Open  ]]
}, Open  ]]
}
]
*)

