(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    390029,       8062]
NotebookOptionsPosition[    379794,       7898]
NotebookOutlinePosition[    380307,       7917]
CellTagsIndexPosition[    380264,       7914]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellLabel->
  "In[244]:=",ExpressionUUID->"56a84136-541d-4210-83c4-3de1836c0965"],

Cell[CellGroupData[{

Cell["Set Notebook Directory.", "Section",
 CellChangeTimes->{{3.9309067654731336`*^9, 
  3.9309067839140215`*^9}},ExpressionUUID->"2229c87f-ba2c-4ed7-b5f4-\
70daf5f3ab42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"6d2c47ea-f9fe-434f-ba6d-b2a076a34ffb"],

Cell[BoxData["\<\"C:\\\\Users\\\\Krzysztof\\\\Desktop\\\\Magisterka\\\\Praca-\
magisterska\\\\Code\\\\Maxim-muon-scattering\"\>"], "Output",
 CellChangeTimes->{3.9309067891414347`*^9, 3.9309072898151493`*^9, 
  3.9309088229461813`*^9, 3.934560990128736*^9, 3.9348705317461295`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"4657ab8e-856c-4231-b77f-5322213762b6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialise all necessary lists.", "Section",
 CellChangeTimes->{{3.930906793161691*^9, 
  3.930906799897114*^9}},ExpressionUUID->"dc862dc5-cf49-43dc-bc8d-\
7c9d4cbdf114"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValuesList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"comoving", " ", "momentum", " ", "list"}], "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maValuesList", "=", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Initialize", " ", 
     RowBox[{"list", ":", " ", 
      RowBox[{"mass", " ", "of", " ", "axion"}]}]}], ",", " ", 
    RowBox[{"[", "eV", "]"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AparameterList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Initialize", " ", 
     RowBox[{"list", ":", " ", 
      RowBox[{"one", " ", "of", " ", "the", " ", "parameter"}]}]}], ",", " ", 
    RowBox[{"which", " ", "we", " ", "need", " ", "to", " ", "fit"}]}], 
   "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bparameterList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Initialize", " ", 
     RowBox[{"list", ":", " ", 
      RowBox[{"one", " ", "of", " ", "the", " ", "parameter"}]}]}], ",", " ", 
    RowBox[{"which", " ", "we", " ", "need", " ", "to", " ", "fit"}]}], 
   "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]parameterList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Initialize", " ", 
     RowBox[{"list", ":", " ", 
      RowBox[{
      "one", " ", "of", " ", "the", " ", "parameter", " ", "which"}]}]}], ",",
     " ", 
    RowBox[{"we", " ", "need", " ", "to", " ", "fit"}]}], "*)"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.930906809606104*^9, 3.930906810057822*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"c469e39a-1b56-4df0-ac5d-b45d17afcb82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Read data from file.", "Section",
 CellChangeTimes->{{3.9309068262478323`*^9, 
  3.9309068331897497`*^9}},ExpressionUUID->"eb90caa9-b5d3-402c-b476-\
5444cfeb6c16"],

Cell["\<\
 The range of comoving momentum of our interest is in range [0, 20] (200 \
points distributed logarithmically from 1e-4 to 20.0). File contains the \
value of the: `f(q) * q^2`, where `f(q)` is function distribution of axion \
particles. We have those function distribution for specific values of the \
axion masses: `m_a`.\
\>", "Text",
 CellChangeTimes->{{3.930906849646062*^9, 
  3.930906934917662*^9}},ExpressionUUID->"89dcb98e-9c4c-4f00-9d24-\
1756ea964750"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "1"}], ":", 
   RowBox[{"Set", " ", "q", " ", "values"}]}], "**********)"}]], "Input",
 CellChangeTimes->{{3.930906954525474*^9, 
  3.930906967350388*^9}},ExpressionUUID->"a3396a27-e660-4f44-a4d2-\
dce29c91e684"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "a", " ", "function", " ", "for", " ", "logarithmic", " ", 
    "spacing"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LogSpace", "[", 
     RowBox[{"start_", ",", "end_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"Exp", "[", 
     RowBox[{"Subdivide", "[", 
      RowBox[{
       RowBox[{"Log", "[", "start", "]"}], ",", 
       RowBox[{"Log", "[", "end", "]"}], ",", 
       RowBox[{"n", "-", "1"}]}], "]"}], "]"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Use", " ", "the", " ", "function", " ", "to", " ", "generate", " ", 
      "200", " ", "points", " ", "from", " ", "1", "e"}], "-", 
     RowBox[{"4", " ", "to", " ", "20.0"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qValuesList", "=", 
     RowBox[{"LogSpace", "[", 
      RowBox[{
       RowBox[{"1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "4"}]}]}], ",", "20.0", ",", "200"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "2"}], ":", 
      RowBox[{"Import", " ", "the", " ", "CSV", " ", "file"}]}], ",", " ", 
     RowBox[{"`Distributions", ".", 
      RowBox[{"csv`", " ", "**", "**", "**"}]}]}], "****)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<ma_distributions_mu_scattering.dat\>\"", ",", "\"\<CSV\>\""}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "ma"}], " ", 
      RowBox[{"list", " ", "[", "eV", "]"}]}], "]"}], "***)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maValuesList", "=", 
     RowBox[{
      RowBox[{"10", "^", "9"}], "*", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", ";;"}], ",", "1"}], "]"}], "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Skip", " ", "the", " ", "header", " ", "row", " ", "and", " ", "extract",
      " ", "the", " ", "first", " ", "element", " ", "from", " ", "each", " ",
      "subsequent", " ", 
     RowBox[{"row", ":", " ", 
      RowBox[{"there", " ", "will", " ", "be", " ", "ma", " ", "value"}]}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "distribution"}], " ", "list"}], " ", "***)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Separate", " ", "header", " ", "and", " ", "data"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"header", "=", 
     RowBox[{"data", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "                 ", 
   RowBox[{"(*", 
    RowBox[{"Extract", " ", "the", " ", "header", " ", "row"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataWithoutHeader", "=", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{
    "Extract", " ", "the", " ", "data", " ", "without", " ", "the", " ", 
     "header", " ", "row"}], "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Skip", " ", "the", " ", "first", " ", "element", " ", "in", " ", "each", 
     " ", "data", " ", "row"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distributionsQPow2", "=", 
     RowBox[{"Rest", "/@", "dataWithoutHeader"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Output", " ", "the", " ", "processed", " ", "data", " ", "without", " ",
       "header"}], ",", " ", 
     RowBox[{"`f", 
      RowBox[{"(", "q", ")"}], " ", "*", " ", 
      RowBox[{"q", "^", "2`"}]}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Here", " ", "we", " ", "have", " ", "to", " ", "divide", " ", "each", 
      " ", "elelemt", " ", "by", " ", 
      RowBox[{"q", "^", "2"}]}], ",", " ", 
     RowBox[{"`f", 
      RowBox[{"(", "q", ")"}], "`"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distributions", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{"Times", ",", 
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"qValuesList", "^", 
             RowBox[{"-", "2"}]}]}], "}"}]}], "]"}], "&"}], ",", 
       "distributionsQPow2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"f", 
     RowBox[{"(", "q", ")"}], " ", "*", " ", 
     RowBox[{"q", "^", "3"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distributionsQPow3", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{"Times", ",", 
          RowBox[{"{", 
           RowBox[{"#", ",", "qValuesList"}], "}"}]}], "]"}], "&"}], ",", 
       "distributionsQPow2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "4"}], ":", 
     " ", 
     RowBox[{"set", " ", "some", " ", "constants"}]}], " ", "**********)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NumberOfDistributions", " ", "=", " ", 
     RowBox[{"Length", "[", "maValuesList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "5"}], ":", 
      " ", 
      RowBox[{"Check", " ", "List"}]}], ",", " ", 
     RowBox[{"sanity", " ", "checks"}]}], " ", "**********)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<qValuesList\>\"", ",", " ", "qValuesList", ",", " ", 
       "\"\<len(qValuesList)=\>\"", ",", " ", 
       RowBox[{"Length", "[", "qValuesList", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<faValuesList\>\"", ",", " ", "faValuesList", ",", " ", 
       "\"\<len(faValuesList)=\>\"", ",", " ", 
       RowBox[{"Length", "[", "faValuesList", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<maValuesList\>\"", ",", " ", "maValuesList", ",", " ", 
       "\"\<len(maValuesList)=\>\"", ",", " ", 
       RowBox[{"Length", "[", "maValuesList", "]"}]}], "]"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<distributionsQPow3\>\"", ",", "distributionsQPow3"}], "]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<len(distributionsQPow3)\>\"", ",", 
     RowBox[{"Length", "[", "distributionsQPow3", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<maValuesList\>\"", ",", " ", "maValuesList", ",", " ", 
     "\"\<len(maValuesList)=\>\"", ",", " ", 
     RowBox[{"Length", "[", "maValuesList", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9309069764373565`*^9, 3.930906987390424*^9}, {
   3.930907309277424*^9, 3.930907309671113*^9}, {3.930908750403762*^9, 
   3.9309087506245937`*^9}, {3.9309088008097057`*^9, 
   3.9309088117321615`*^9}, {3.934561010070407*^9, 3.9345610107437053`*^9}, {
   3.9348705484877*^9, 3.934870558379402*^9}, 3.9348706489031706`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"8bf03186-be2a-46c8-a342-d2de5e874be2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"len(distributionsQPow3)\"\>", "\[InvisibleSpace]", "200"}],
  SequenceForm["len(distributionsQPow3)", 200],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.930907315554693*^9, 3.930908826815124*^9, 3.9345610242631173`*^9, {
   3.9348705363054004`*^9, 3.9348705609070506`*^9}, 3.934870650942722*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"e431a6c1-49cf-4a08-838f-912ad13d1d8c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"maValuesList\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "6.230200000000011`", ",", "6.0876789013515795`", ",", 
     "5.94841809347392`", ",", "5.8123429944559`", ",", "5.67938072851077`", 
     ",", "5.54946008694707`", ",", "5.4225114900324805`", ",", 
     "5.2984669497299`", ",", "5.17726003328615`", ",", "5.05882582765351`", 
     ",", "4.94310090472516`", ",", "4.830023287365931`", ",", 
     "4.7195324162200905`", ",", "4.61156911727839`", ",", 
     "4.50607557018718`", ",", "4.4029952772823`", ",", "4.30227303333153`", 
     ",", "4.20385489596902`", ",", "4.10768815680623`", ",", 
     "4.0137213132035905`", ",", "3.92190404068804`", ",", 
     "3.83218716600143`", ",", "3.7445226407655`", ",", "3.6588635157493203`",
      ",", "3.57516391572537`", ",", "3.49337901490078`", ",", 
     "3.41346501291062`", ",", "3.3353791113604303`", ",", 
     "3.25907949090521`", ",", "3.1845252888529`", ",", "3.11167657728007`", 
     ",", "3.04049434164839`", ",", "2.9709404599100697`", ",", 
     "2.90297768209148`", ",", "2.8365696103436098`", ",", 
     "2.77168067944911`", ",", "2.7082761377750497`", ",", 
     "2.64632202866154`", ",", "2.585785172236`", ",", "2.5266331476435497`", 
     ",", "2.4688342756838`", ",", "2.41235760184486`", ",", 
     "2.35717287972554`", ",", "2.30325055483665`", ",", "2.25056174877298`", 
     ",", "2.19907824374725`", ",", "2.14877246747799`", ",", 
     "2.099617478423`", ",", "2.0515869513506297`", ",", "2.00465516324121`", 
     ",", "1.95879697951094`", ",", "1.91398784055085`", ",", 
     "1.8702037485738698`", ",", "1.82742125476257`", ",", "1.7856174467111`",
      ",", "1.74476993615428`", ",", "1.70485684697746`", ",", 
     "1.6658568035005998`", ",", "1.62774891903047`", ",", 
     "1.5905127846745901`", ",", "1.55412845841119`", ",", 
     "1.51857645440915`", ",", "1.48383773259219`", ",", "1.44989368844192`", 
     ",", "1.41672614303404`", ",", "1.38431733330254`", ",", 
     "1.35264990252659`", ",", "1.32170689103502`", ",", 
     "1.2914717271235099`", ",", "1.26192821817949`", ",", 
     "1.23306054201012`", ",", "1.20485323836862`", ",", 
     "1.1772912006744198`", ",", "1.15035966792278`", ",", 
     "1.12404421677945`", ",", "1.09833075385614`", ",", "1.07320550816275`", 
     ",", "1.04865502373225`", ",", "1.0246661524142402`", ",", 
     "1.00122604683337`", ",", "0.978322153508898`", ",", 
     "0.955942206131578`", ",", "0.9340742189943639`", ",", 
     "0.912706480573407`", ",", "0.89182754725588`", ",", 
     "0.871426237211282`", ",", "0.851491624402959`", ",", 
     "0.832013032736585`", ",", "0.812980030342533`", ",", 
     "0.7943824239890219`", ",", "0.7762102536230769`", ",", 
     "0.758453787036365`", ",", "0.741103514653058`", ",", 
     "0.724150144436923`", ",", "0.707584596914924`", ",", 
     "0.691398000314648`", ",", "0.675581685813001`", ",", 
     "0.66012718289354`", ",", "0.6450262148100641`", ",", 
     "0.630270694153943`", ",", "0.615852718522868`", ",", 
     "0.60176456628867`", ",", "0.587998692461963`", ",", 
     "0.574547724651377`", ",", "0.561404459115236`", ",", 
     "0.548561856903553`", ",", "0.5360130400882781`", ",", 
     "0.523751288079793`", ",", "0.5117700340276501`", ",", 
     "0.500062861303667`", ",", "0.488623500065461`", ",", 
     "0.477445823898601`", ",", "0.466523846535574`", ",", 
     "0.455851718649802`", ",", "0.445423724723002`", ",", 
     "0.435234279984214`", ",", "0.425277927418838`", ",", 
     "0.415549334846103`", ",", "0.40604329206338496`", ",", 
     "0.396754708055858`", ",", "0.38767860826996703`", ",", 
     "0.378810131949283`", ",", "0.370144529531292`", ",", 
     "0.361677160103745`", ",", "0.353403488919188`", ",", 
     "0.345319084966353`", ",", "0.33741961859710695`", ",", 
     "0.329700859207683`", ",", "0.322158672972954`", ",", 
     "0.314789020632544`", ",", "0.307587955327576`", ",", 
     "0.30055162048691103`", ",", "0.293676247761741`", ",", 
     "0.286958155007423`", ",", "0.280393744311492`", ",", 
     "0.273979500066778`", ",", "0.267711987088597`", ",", 
     "0.261587848775024`", ",", "0.255603805309246`", ",", 
     "0.24975665190303203`", ",", "0.24404325708039898`", ",", 
     "0.23846056100052399`", ",", "0.233005573819035`", ",", 
     "0.22767537408677999`", ",", "0.222467107185229`", ",", 
     "0.21737798379766898`", ",", "0.212405278415366`", ",", 
     "0.207546327877906`", ",", "0.20279852994692402`", ",", 
     "0.19815934191245899`", ",", "0.193626279231195`", ",", 
     "0.189196914195845`", ",", "0.184868874634983`", ",", 
     "0.18063984264261101`", ",", "0.176507553336793`", ",", 
     "0.172469793646686`", ",", "0.168524401127314`", ",", 
     "0.164669262801461`", ",", "0.160902314028052`", ",", 
     "0.157221537396427`", ",", "0.1536249616459`", ",", "0.150110660610043`",
      ",", "0.146676752185116`", ",", "0.14332139732209298`", ",", 
     "0.140042799041753`", ",", "0.136839201472296`", ",", 
     "0.13370888890897398`", ",", "0.13065018489524002`", ",", 
     "0.127661451324907`", ",", "0.12474108756485501`", ",", 
     "0.12188752959780001`", ",", "0.11909924918468`", ",", 
     "0.116374753046193`", ",", "0.113712582063065`", ",", 
     "0.111111310494612`", ",", "0.10856954521517301`", ",", 
     "0.106085924968018`", ",", "0.10365911963631501`", ",", 
     "0.101287829530781`", ",", "0.09897078469362659`", ",", 
     "0.09670674421842`", ",", "0.0944944955855156`", ",", 
     "0.09233285401268071`", ",", "0.090220661820579`", ",", 
     "0.0881567878127692`", ",", "0.0861401266698855`", ",", 
     "0.0841695983576794`", ",", "0.082244147548599`", ",", 
     "0.08036274305660371`", ",", "0.0785243772849065`", ",", 
     "0.07672806568634971`", ",", "0.0749728462361255`", ",", 
     "0.0732577789165576`", ",", "0.0715819452136699`", ",", 
     "0.0699444476252706`", ",", "0.0683444091802912`", ",", 
     "0.0667809729691178`", ",", "0.0652533016846696`", ",", 
     "0.063760577173974`", ",", "0.0623020000000001`"}], "}"}], 
   "\[InvisibleSpace]", "\<\"len(maValuesList)=\"\>", "\[InvisibleSpace]", 
   "200"}],
  SequenceForm["maValuesList", CompressedData["
1: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
Y3jxpySnHDz2mrFQHMjGv+XaFIc=
   "], "len(maValuesList)=", 200],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.930907315554693*^9, 3.930908826815124*^9, 3.9345610242631173`*^9, {
   3.9348705363054004`*^9, 3.9348705609070506`*^9}, 3.9348706509487205`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"a682aabf-c028-461d-bcb8-5984c5f954ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Collect data into groups and set approx distribution function.\
\>", "Section",
 CellChangeTimes->{
  3.9309073424673634`*^9},ExpressionUUID->"6b9cbc9e-ea54-4aff-874b-\
5e7395fae6e7"],

Cell["\<\
Here we try to transpose data in such a way to have a value of the comoving \
momenta and proper value of the function distribution (maybe multiply with \
some power of comoving momenta) - the less operation with data, the better \
results I will get. Important in the third line you set how look the `axion \
distribution function` in shortcut: `AxDistFunction`. In generall I suggest \
to use: `f(q)*q^3`.\
\>", "Text",
 CellChangeTimes->{
  3.9309073529425783`*^9},ExpressionUUID->"922e5681-4a24-476e-adab-\
3f18a5fb7ce1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Helpfull", " ", "function", " ", "to", " ", "create", " ", "Transposed", 
     " ", "data"}], ",", " ", 
    RowBox[{
    "remeber", " ", "that", " ", "`i`", " ", "will", " ", "refer", " ", "to", 
     " ", "vale", " ", "of", " ", "`f_a`", " ", "in", " ", 
     RowBox[{"`faList`", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"transposeData", "[", 
     RowBox[{"i_", ",", "list_", ",", "listOfLists_List"}], "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"list", ",", 
       RowBox[{"listOfLists", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Transpose", " ", "data", " ", "numerous", " ", "of", " ", "times"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AxDistFunctionTabList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"transposeData", "[", 
        RowBox[{"i", ",", "qValuesList", ",", "distributionsQPow3"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "NumberOfDistributions"}], "}"}]}], "]"}]}], ";"}], 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{"f", 
     RowBox[{"(", "q", ")"}], "*", 
     RowBox[{"q", "^", "3"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AxDistFunctionList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"AxDistFunctionTabList", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Method", "->", "\"\<Spline\>\""}], ",", 
         RowBox[{"InterpolationOrder", "->", "3"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "NumberOfDistributions"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Defined", " ", "the", " ", "approx", " ", "axion", " ", "distribution", 
      " ", "function"}], ",", " ", 
     RowBox[{"`f", 
      RowBox[{"(", "q", ")"}], "*", 
      RowBox[{"q", "^", "3"}], "`"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fApprox", "[", 
      RowBox[{"x_", ",", "A_", ",", "b_", ",", "\[Mu]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "*", "A", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"x", "/", "b"}], " ", "+", " ", "\[Mu]"}], "]"}], "-", 
          "1"}], ")"}]}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fApprox", "[", 
      RowBox[{"x_", ",", "A_", ",", "b_", ",", "\[Mu]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "2"}], 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}]], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"A", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["x", "2"]}]], "-", "b"}], ")"}]}], "+", 
          "\[Mu]"}], "]"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fApprox", "[", 
      RowBox[{"x_", ",", "A_", ",", "b_", ",", "\[Mu]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"A", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["x", "2"]}]], "-", "b"}], ")"}]}], "+", 
          "\[Mu]"}], "]"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fApprox", "[", 
      RowBox[{"x_", ",", "A_", ",", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Exp", "[", 
         RowBox[{"A", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox["x", "2"]}]], "-", "b"}], ")"}]}], "]"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fApprox", "[", 
      RowBox[{"x_", ",", "A_", ",", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"A", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}]]}], "-", "b"}], "]"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fApprox", "[", 
     RowBox[{"x_", ",", "A_", ",", "b_", ",", "\[Mu]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "^", "2"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"A", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["x", "2"]}]]}], "-", "b"}], "]"}], "+", "\[Mu]"}],
        ")"}], 
      RowBox[{"-", "1"}]]}]}]}]}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"ee5ec161-0e64-42ec-ab8c-97b48fe85724"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(Optional) sanity check of interpolation .", "Section",
 CellChangeTimes->{{3.9309073703724236`*^9, 
  3.930907373794965*^9}},ExpressionUUID->"d6d0adda-f88f-4edd-b7ac-\
a7863c8fa937"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "original", " ", "data", " ", "points", " ", "and", " ", 
    "the", " ", "interpolated", " ", "function", " ", "on", " ", "the", " ", 
    "same", " ", "plot"}], "*)"}], 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"AxDistFunctionTabList", "[", 
       RowBox[{"[", "199", "]"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<q\>\"", ",", "\"\<f(q)*q^3\>\""}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AxDistFunctionList", "[", 
        RowBox[{"[", "199", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"Min", "[", "qValuesList", "]"}], ",", 
        RowBox[{"Max", "[", "qValuesList", "]"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Blue"}]}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"28db353e-7bc8-4f58-bb6d-12dbdf74b6f4"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
xcwo
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
3aW6rVXJf7u7RPBW5HwqXMpe9z/hGkL+
        "]]},
      Annotation[#, "Charting`Private`Tag$11435#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"q\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"f(q)*q^3\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.841687264456711}, {0, 0.004199092982323216}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9309073785996475`*^9, 3.930908843949503*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"1752d639-3cb7-422d-8cc0-734cfb78fdc2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
(Optional) select a distribution and make a fit - update way of finding fit.\
\>", "Section",
 CellChangeTimes->{
  3.9309074352415066`*^9},ExpressionUUID->"95be9634-9607-4926-a602-\
e022fea3e718"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "1"}], ":", " ", 
    RowBox[{"Settings", " ", "to", " ", "make", " ", "a", " ", 
     RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SelectedDist", " ", "=", " ", 
     RowBox[{"AxDistFunctionList", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", " ", "11"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"step", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataToFit", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"SelectedDist", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xmin", ",", "xmax", ",", "step"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "2"}], ":", 
     " ", 
     RowBox[{"Perform", " ", "the", " ", "nonlinear", " ", 
      RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"fit", "=", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"dataToFit", ",", 
       RowBox[{"{", 
        RowBox[{"fApprox", "[", 
         RowBox[{"x", ",", "A", ",", "b", ",", "\[Mu]"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"A", ",", "b", ",", "\[Mu]"}], "}"}], ",", "x", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Method", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<NMinimize\>\"", ",", 
          RowBox[{"Method", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<RandomSearch\>\"", ",", 
             RowBox[{"\"\<SearchPoints\>\"", "->", "100"}]}], "}"}]}]}], 
         "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fit", "=", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"dataToFit", ",", 
        RowBox[{"{", 
         RowBox[{"fApprox", "[", 
          RowBox[{"x", ",", "A", ",", "b"}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"A", ",", "b"}], "}"}], ",", "x", ",", "\[IndentingNewLine]", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<NMinimize\>\"", ",", 
           RowBox[{"Method", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<RandomSearch\>\"", ",", 
              RowBox[{"\"\<SearchPoints\>\"", "->", "100"}]}], "}"}]}]}], 
          "}"}]}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "3"}], ":", 
     " ", 
     RowBox[{"Optional", " ", 
      RowBox[{"information", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Extract", " ", "best"}], "-", 
     RowBox[{"fit", " ", "parameters"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bestFitParams", "=", 
     RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<best fit parameters:\>\"", 
      RowBox[{"bestFitParams", "[", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Visualize", " ", "the", " ", "fit"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", "data", "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"fit", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]}], "]"}], "*)"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "4"}], ":", 
     " ", 
     RowBox[{"Plot", " ", "distribution", " ", "and", " ", 
      RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedDist", "[", "x", "]"}], ",", " ", 
       RowBox[{"fit", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "11"}], "}"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<(k/T\!\(\*SuperscriptBox[\()\), \
\(3\)]\)\!\(\*SubscriptBox[\(f\), \(p\)]\)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k/T\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", "22"}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "2"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Numerical solution\>\"", ",", 
        "\"\<fit to numerical solution\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}]}]}]], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"e21fce0b-da51-48f7-b1f0-22d29b320c2f"],

Cell[BoxData[
 RowBox[{"\<\"best fit parameters:\"\>", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[Rule]", "0.8423684177289426`"}], ",", 
     RowBox[{"b", "\[Rule]", "0.7037795283307003`"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0.3800990977805605`"}]}], "}"}], "[", 
   "]"}]}]], "Print",
 CellChangeTimes->{3.930907449043987*^9, 3.930908836929676*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"fa8ac606-5d04-41c4-9a30-773685e6e5ff"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$10214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
vkSrDQ==
          "]]}, Annotation[#, "Charting`Private`Tag$10214#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"(k/T\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\\!\\(\\*SubscriptBox[\\(f\\), \\(p\\)]\\)\"", HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox["\"k/T\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Directive[
       GrayLevel[0], 
       Thickness[Large]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, LabelStyle -> 22, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 11}, {-1.47491010206255*^-8, 1.2203800570583665`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Numerical solution\"", "\"fit to numerical solution\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 22, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "22"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9309074491521053`*^9, 3.930908837257677*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"7a8a3330-e0c9-48d4-9745-baef6c55d859"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find all parameters for each distribution function .", "Section",
 CellChangeTimes->{{3.930907466452341*^9, 
  3.9309074717549295`*^9}},ExpressionUUID->"21303c5f-d193-407c-955a-\
12d9126e2bb8"],

Cell["\<\
We already create two list: `maValuesList`. Now we have to read the \
distribution function and find parameters, which describes best fit to data \
stored in `AxDistFunctionTabList`. We need this because in the end we are \
looking for function: A(m_a), b(m_a) and \[Mu](m_a), where A, b and \[Mu] are \
parameters which we will find out.\
\>", "Text",
 CellChangeTimes->{{3.930907502723073*^9, 
  3.9309075103280773`*^9}},ExpressionUUID->"23bf8cdb-fc01-4cf4-b648-\
ad5ead518a9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"clear", " ", "up"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AparameterList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bparameterList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]parameterList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"find", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", "NumberOfDistributions"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "==", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<step: \>\"", ",", "i"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "1"}], ":", 
        " ", 
        RowBox[{"Settings", " ", "to", " ", "make", " ", "a", " ", 
         RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"SelectedDist", " ", "=", " ", 
       RowBox[{"AxDistFunctionList", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xmin", " ", "=", " ", "0.0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xmax", " ", "=", " ", "11"}], ";", "\[IndentingNewLine]", 
      RowBox[{"step", " ", "=", " ", "0.005"}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataToFit", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"SelectedDist", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xmin", ",", "xmax", ",", "step"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "2"}], ":", 
        " ", 
        RowBox[{"Perform", " ", "the", " ", "nonlinear", " ", 
         RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], "\n", 
      RowBox[{"fit", "=", 
       RowBox[{"NonlinearModelFit", "[", 
        RowBox[{"dataToFit", ",", 
         RowBox[{"{", 
          RowBox[{"fApprox", "[", 
           RowBox[{"x", ",", "A", ",", "b", ",", "\[Mu]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"A", ",", "b", ",", "\[Mu]"}], "}"}], ",", "x", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<NMinimize\>\"", ",", 
            RowBox[{"Method", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<RandomSearch\>\"", ",", 
               RowBox[{"\"\<SearchPoints\>\"", "->", "100"}]}], "}"}]}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"fit", "=", 
         RowBox[{"NonlinearModelFit", "[", 
          RowBox[{"dataToFit", ",", 
           RowBox[{"{", 
            RowBox[{"fApprox", "[", 
             RowBox[{"x", ",", "A", ",", "b"}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"A", ",", "b"}], "}"}], ",", "x", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Method", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<NMinimize\>\"", ",", 
              RowBox[{"Method", "->", 
               RowBox[{"{", 
                RowBox[{"\"\<RandomSearch\>\"", ",", 
                 RowBox[{"\"\<SearchPoints\>\"", "->", "100"}]}], "}"}]}]}], 
             "}"}]}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"**", "**", "**", "**"}], "*", " ", "Step", " ", "3"}], ":", 
        " ", 
        RowBox[{
        "Find", " ", "the", " ", "best", " ", "parameters", " ", "and", " ", 
         "Append", " ", "them", " ", "to", " ", "right", " ", 
         RowBox[{"List", " ", "**", "**", "**", "**"}], "*"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"bestFitParams", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"A", ",", "b", ",", "\[Mu]"}], "}"}], "/.", 
        RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"bestFitParams", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"A", ",", "b"}], "}"}], "/.", 
          RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"AparameterList", ",", 
        RowBox[{"bestFitParams", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"bparameterList", ",", 
        RowBox[{"bestFitParams", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"\[Mu]parameterList", ",", 
        RowBox[{"bestFitParams", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "Test"}], " ", "my", " ", "results"}], "***)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<AparameterList\>\"", ",", " ", "AparameterList", ",", " ", 
       "\"\<len(AparameterList)\>\"", ",", " ", 
       RowBox[{"Length", "[", "AparameterList", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<bparameterList\>\"", ",", " ", "bparameterList", ",", " ", 
       "\"\<len(bparameterList)\>\"", ",", " ", 
       RowBox[{"Length", "[", "bparameterList", "]"}]}], "]"}], ";"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<\[Mu]parameterList\>\"", ",", " ", "\[Mu]parameterList", ",", " ", 
       "\"\<len(\[Mu]parameterList)\>\"", ",", " ", 
       RowBox[{"Length", "[", "\[Mu]parameterList", "]"}]}], "]"}], ";"}], 
    "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.930907540653172*^9, 3.9309075410276356`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"1501de10-1784-4e69-b292-135085f863dd"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["step: ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.9309088849631233`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"729d6318-f30d-467b-884e-2c4e0ad46e50"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "20"}],
  SequenceForm["step: ", 20],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930908923971642*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"ef2dc93e-f182-4410-9917-9051c84d3c40"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "30"}],
  SequenceForm["step: ", 30],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930908962739643*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"66b57398-d507-4f3c-8e00-f59508fbafac"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "40"}],
  SequenceForm["step: ", 40],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.9309090013326416`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"7769c325-7d5e-4e60-bf7e-48a4c1a6237b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "50"}],
  SequenceForm["step: ", 50],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930909039195642*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"0424ea35-d7b0-4a5b-8c78-56493e693f60"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "60"}],
  SequenceForm["step: ", 60],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930909077373646*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"5a259909-e88a-4ebc-83a7-173024de9472"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "70"}],
  SequenceForm["step: ", 70],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.9309091164858465`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"cb1f6e89-776b-47e2-8523-d87ed323776a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "80"}],
  SequenceForm["step: ", 80],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.9309091553304386`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"75bc1ddd-af34-4851-90b8-20f1af8e506a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "90"}],
  SequenceForm["step: ", 90],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930909194216915*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"1721039b-4ba1-4b97-bcfe-eb906a1bbdbf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "100"}],
  SequenceForm["step: ", 100],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930909233268917*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"e81ff3d7-7332-483e-bc21-03699a86f290"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "110"}],
  SequenceForm["step: ", 110],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930909271663955*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"f3034432-21ea-4a6b-bf74-aa788804f5c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "120"}],
  SequenceForm["step: ", 120],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.9309093124994736`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"651d63f8-3efe-4ea3-a827-08e76bc7da18"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "130"}],
  SequenceForm["step: ", 130],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930909355468474*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"59185567-1480-4c4d-ae39-d707e44614ba"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "140"}],
  SequenceForm["step: ", 140],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.93090939864659*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"aca37b4d-ad9e-4b09-a981-d4ff4d61c1b9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "150"}],
  SequenceForm["step: ", 150],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.9309094544200535`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"159cbac8-0014-4e9f-9e08-551235d35830"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "160"}],
  SequenceForm["step: ", 160],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.9309094978990545`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"29036984-7186-4927-95bd-675687321cf7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "170"}],
  SequenceForm["step: ", 170],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930909545027546*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"797d2818-5e9b-447b-8df8-6e2bba5a3e61"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "180"}],
  SequenceForm["step: ", 180],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.9309095891870584`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"87934578-3438-441a-ae26-dac0bda1d23b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "190"}],
  SequenceForm["step: ", 190],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930909638824207*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"880ef805-ac45-49ad-b747-93d32db03079"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"step: \"\>", "\[InvisibleSpace]", "200"}],
  SequenceForm["step: ", 200],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309075835875216`*^9, 3.930909673925421*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"08bf25ba-c85f-409f-907d-bc0729d1187a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(Optional) Find function A(m_a), b(m_a) and \[Mu](m_a).", "Section",
 CellChangeTimes->{{3.9309083908839245`*^9, 
  3.9309083976460485`*^9}},ExpressionUUID->"4c42e138-ab6b-47fa-a0ce-\
31f55ca210b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"A", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameterA", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", "AparameterList"}], 
       "}"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
     "into", " ", "a", " ", "list", " ", "of", " ", "data", " ", "points"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
     " ", "with", " ", 
     RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "AparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{"Max", "[", "AparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", "Plot", " ", "the", " ", "data", " ", 
     "with", " ", "black", " ", 
     RowBox[{"dots", "**"}]}], "******)"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"dataParameterA", ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<parameter: A(\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",", 
           "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
           "None"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"LabelStyle", "->", "22"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"5759a6be-2494-45f6-9097-b7cabbc52be7"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8423684177289444},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: A(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.7757617509752777`, 1.829408435012814}, {0.8423684177289426, 
   1.0059342629661048`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9309084066078515`*^9, 3.9309097044782643`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"ac821f54-c92b-4486-b5c9-d2bb67be23bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
    " ", "with", " ", 
    RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "AparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{
      RowBox[{"Max", "[", "AparameterList", "]"}], "+", "0.02"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "Plot", " ", "the", " ", "data", 
     " ", "with", " ", "black", " ", "dots"}], " ", "********)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"dataParameterA", ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<parameter: A(\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",", 
           "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(m\), \(a\)]\) [eV]\>\"", ",", "None"}], 
          "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"LabelStyle", "->", "22"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9309084659928427`*^9, 3.9309084797437215`*^9}, {
  3.930909737518665*^9, 3.9309098377855735`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"902220de-c51f-4672-adad-ef8f380613fb"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8423684177289444},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: A(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\) [eV]\"", HoldForm],
       TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.7757617509752777`, 1.829408435012814}, {0.8423684177289426, 
   1.0259342629661048`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9309084292126646`*^9, {3.930908472391198*^9, 3.9309084804357247`*^9}, {
   3.9309097409924345`*^9, 3.9309098381703205`*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"aa758c96-a78a-494c-926f-459aa63a6940"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**"}], "*", "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", " ", "deal"}], " ", "with", " ", 
    "parameter", " ", 
    RowBox[{"b", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameterb", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", "bparameterList"}], 
       "}"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
     "into", " ", "a", " ", "list", " ", "of", " ", "data", " ", "points"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
     " ", "with", " ", 
     RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "bparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{
      RowBox[{"Max", "[", "bparameterList", "]"}], "+", "0.1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "Plot", " ", "the", " ", "data", 
     " ", "with", " ", "black", " ", "dots"}], " ", "********)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"dataParameterb", ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<parameter: b(\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",", 
           "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
           "None"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"LabelStyle", "->", "22"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.930908496952614*^9, 3.9309085257122602`*^9}, {
  3.9309098529592156`*^9, 3.9309098642857494`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"e4c12c75-a9f7-4cda-abef-1fe3a21d105c"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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
IUW8nd49y9ssQObSzHI3JEuR/wHJIZVa
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: b(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.7757617509752777`, 1.829408435012814}, {-4.165221158978736, 
   0.8037795283307003}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9309084993502264`*^9, 3.9309085261895924`*^9}, {
   3.9309098545988874`*^9, 3.930909864846839*^9}, 3.9309099820573874`*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"1ffa5707-ee1f-4304-b02a-538b91f0737c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"\[Mu]", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "*", "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameter\[Mu]", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", 
        "\[Mu]parameterList"}], "}"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
     "into", " ", "a", " ", "list", " ", "of", " ", "data", " ", "points"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", "to", " ", "proper", " ", "work", " ", 
     "with", " ", 
     RowBox[{"plot", "**", "**", "**"}], "*"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{
      RowBox[{"Min", "[", "\[Mu]parameterList", "]"}], "-", "0.5"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{"Max", "[", "\[Mu]parameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "Plot", " ", "the", " ", "data", 
     " ", "with", " ", "black", " ", "dots"}], " ", "********)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"dataParameter\[Mu]", ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<parameter: \[Mu](\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",",
            "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
           "None"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"LabelStyle", "->", "22"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9309086318732553`*^9, 3.9309086388034782`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"a5f9e08b-45ea-434e-be7c-0087c85fbad4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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

     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: \[Mu](\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.7757617509752777`, 
   1.829408435012814}, {-0.12000114461790029`, 34.20694187422094}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.930908587653882*^9, {3.930908633009261*^9, 3.930908639446374*^9}, 
   3.9309098723124657`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"c44ea546-b0bf-4641-acc6-34918f741a71"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find fit funtion : A (m_a), b (m_a) and \[Mu] (m_a)", "Section",
 CellChangeTimes->{{3.930908654678969*^9, 
  3.9309086599578867`*^9}},ExpressionUUID->"6c530a2c-3d68-4838-a37f-\
39dda487ea7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"A", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
    "into", " ", "a", " ", "list", " ", "of", " ", "points"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameterA", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", "AparameterList"}], 
       "}"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Use", " ", "FindFormula", " ", "to", " ", "find", " ", "a", " ", 
     "suitable", " ", "model", " ", "for", " ", "the", " ", "data"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"polyModA", "=", 
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"dataParameterA", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"x", "^", "i"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], ",", "x"}], 
     "]"}]}], "\n", 
   RowBox[{"polyModA", "[", "\"\<BestFit\>\"", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
     " ", "with", " ", 
     RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "AparameterList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{
      RowBox[{"Max", "[", "AparameterList", "]"}], "+", "0.02"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"input", "=", 
     RowBox[{"Log", "[", "maValuesList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", 
     RowBox[{"plotting", " ", "**", "**", "**"}], "*"}], "*)"}], "\n", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"dataParameterA", ",", 
       RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<parameter: A(\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",", 
            "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
            "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"LabelStyle", "->", "22"}], ",", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"polyModA", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Min", "@", "input"}], ",", 
         RowBox[{"Max", "@", "input"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Green"}]}], "]"}]}], "\[IndentingNewLine]",
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9309098940718555`*^9, 3.93090989911197*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"bba6867f-6796-4b13-a2da-d9c0e5e48f9e"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.9415194526381725`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0813222645751736`", " ", "x"}], "-", 
       RowBox[{"0.01994575139974677`", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"0.025999826769037927`", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"0.015848949366453372`", " ", 
        SuperscriptBox["x", "4"]}], "-", 
       RowBox[{
        RowBox[{"\[LeftSkeleton]", "21", "\[RightSkeleton]"}], " ", 
        SuperscriptBox["x", "5"]}], "-", 
       RowBox[{
        RowBox[{"\[LeftSkeleton]", "21", "\[RightSkeleton]"}], " ", 
        RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], "+", 
       RowBox[{
        RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"0.0018632317370879253`", " ", 
        SuperscriptBox["x", "8"]}], "+", 
       RowBox[{"0.00043313649792046363`", " ", 
        SuperscriptBox["x", "9"]}], "-", 
       RowBox[{"0.00013503315083821172`", " ", 
        SuperscriptBox["x", "10"]}], "-", 
       RowBox[{"0.00006657645271476943`", " ", 
        SuperscriptBox["x", "11"]}], "-", 
       RowBox[{"7.460903803990649`*^-6", " ", 
        SuperscriptBox["x", "12"]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {0.9415194526381725, -0.0813222645751736, -0.01994575139974677, 
     0.025999826769037927`, 
     0.015848949366453372`, -0.006901958072511193, -0.007898323924799954, 
     0.00003159456131862604, 0.0018632317370879253`, 
     0.00043313649792046363`, -0.00013503315083821172`, \
-0.00006657645271476943, -7.460903803990649*^-6}, {{$CellContext`x}, {
      1, $CellContext`x, $CellContext`x^2, $CellContext`x^3, \
$CellContext`x^4, $CellContext`x^5, $CellContext`x^6, $CellContext`x^7, \
$CellContext`x^8, $CellContext`x^9, $CellContext`x^10, $CellContext`x^11, \
$CellContext`x^12}}, {0, 0}}, CompressedData["
1:eJxTTMoPSmViYGBgBOITDDDwwX6UHqVH6VF6lB6lSaEBV3fvLQ==
    "], CompressedData["
1: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
    "], CompressedData["
1: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
OpPdvqPZ7tWS9zdZtP8Bm8h37w==
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.9309086887891474`*^9, {3.9309098959299726`*^9, 3.9309099002577877`*^9}, 
   3.9309099885894203`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"3fcc009a-c5cc-4bea-8b58-127a2bec3246"],

Cell[BoxData[
 RowBox[{"0.9415194526381725`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.0813222645751736`", " ", "x"}], "-", 
  RowBox[{"0.01994575139974677`", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"0.025999826769037927`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"0.015848949366453372`", " ", 
   SuperscriptBox["x", "4"]}], "-", 
  RowBox[{"0.006901958072511193`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"0.007898323924799954`", " ", 
   SuperscriptBox["x", "6"]}], "+", 
  RowBox[{"0.00003159456131862604`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"0.0018632317370879253`", " ", 
   SuperscriptBox["x", "8"]}], "+", 
  RowBox[{"0.00043313649792046363`", " ", 
   SuperscriptBox["x", "9"]}], "-", 
  RowBox[{"0.00013503315083821172`", " ", 
   SuperscriptBox["x", "10"]}], "-", 
  RowBox[{"0.00006657645271476943`", " ", 
   SuperscriptBox["x", "11"]}], "-", 
  RowBox[{"7.460903803990649`*^-6", " ", 
   SuperscriptBox["x", "12"]}]}]], "Output",
 CellChangeTimes->{
  3.9309086887891474`*^9, {3.9309098959299726`*^9, 3.9309099002577877`*^9}, 
   3.9309099885964217`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"590fde7a-5d3e-447d-b40e-92d8a9ff2201"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwd1nk8lNsbAHDmnZkilGyhRSlX/SRbVNK5XCpLhESWbHVDm4gUKUJFoaQk
SSpjSVlulqT3IEJkS4TKFhk0wzW2mdHvmfvX+/m+z+f9nHOe85zzPms9Ttsc
pQgJCdGEhYQEz5LNy69W6tCxsNkV2T5RNupKKaV/06TjQd1JU6ElbMRd4h41
p07Hq4Nva60B72K+jNTYSMei9jkbnMHvMvZFpK6i45So3vRWcPOa62EX6HS8
YRnPr0CMjSZjNYTvEnR83OKAfiNYaqHjcr4QHXd4BlYMgw/2qFz+OU/DIhaK
IivF2agn6V3oQRYN/8urTQgDj0gKhWh10rDZjgKKoQQbiYYxuPvaadjhoHy/
PViNbRns3UrDd0THok6BfT8+vJDWQMO9hQ/XPQBPR+ufl6ig4STLyBcTYAr1
XCAzi4ZPxlgF3VnKRuv9V0/TGDT8zdO+nwE26a8OWPuUhuPlbq8oA1/D0gEO
qTScEqQ72guWuFjgX3Obhmud1XU2LWMjhelx3/RgGvZ1lMouBPOermZcCoL5
D0R6VoO/2lp9dQ6gYbc87eHP4LT8PFO50zB+s5jVHPiPk/7rbnjQcF6ydK6+
JBvpDM62BZjSMKU5jlIMlk3YKGq7m4bZeWRCNXjW0PFPjb9ouKPzX04buOxR
2XPmThrubOSrs8FGTqGRrho0vCv4YqjKcjayaiX0TOVo2IZTPxwN1gjTOaki
TcPtmcuL74KXaxx9QkjS8IlwB5d08OebNUvfitLwsOVfGqVgZ9PrP7UWqPhw
m/rcIHjXbOnqZVwqTjagR7PASgzmgfEZKn6qkjA1Bx6gWlQwJqj4otlKBwkp
NvLBEskrf1DxC3mW+1awxWnUPNdHxXHeF+p2gTev9qV3fKPipUv3iu8Fs4Nb
/G51UnFl+eAmR/A5vTvm9AYq3i+dXBMCjnghz2cVUHFVekFFGXhbnv3flDwq
LmmZSKwEj+YnNknnUrH0mmVWdWCbV5Lp2xkwPveD72ew0huRPVceUDFebh/E
An8q35OXmETFry9knueAr5KR8pmJVHxN/7Y7F/yrUnisIY6Ka1qIIbo0G72p
m4uXjaDi3+yV71eCfT/ozauGUfHUlQnKOrByY4CnfigV776xoPIHOLp5Yqtb
EBUvH45W1QQ7dIx0ZZ2g4mX4s6wxmDP4Zb2BHYyf6Fp/FJw5JBdrZUPFL+nX
07zBzj/tZtytqHj61A/3k+B3oy11UaZULPRpJOMs+PZk3almAyruCJ/YFQ7e
PbWos38HFVvcifSPBM9xTAw5elQsej/rzjWw21yFlIIWFffOmj6MBasLvS7x
VKFi1z2BDffB/cKzawOVIf+Osj4p4ERCN+aaEhWfOx3HSQXz6AUuuQpUHBKY
8/kJOG8xu4aUo2JZxYdqGWBPUXWNVmkqfq5CO5MJrhfPpsxIUHFtbmv1c3Do
0p/HRcSo+MytiM8vwJqSKu2KIjDfXJPPeeAk6XTGnwQVnzKLefIP+G/FZIvo
GQJ39audLwMPvZXwyZkisM19cuEN+KjHlasNEwRefHhdwFvwkawTlRJjBLaQ
+qpTAR606Pu+ZYTAgyOBoZWC+bHt+PuHCEw+OFJaBfbQQ9sSegn89O0bokaw
/q5Cu3++EpjQOCb1Huwequrf3kXgFaE/pGvBvWsfxk93EPiktP3iOkE+qyVf
yLUTuFm5e1zgXq+oD9taCZyZHl9dD3YV4/481ERgz3134z6AD9sOKqfUETh8
dgm3Afxt2sGwvIbAWrYlKY1gl+TGw9+qCEyL26z5EdxjYBTyGxNYxuJ6icDO
fUX3ld7CfCd/ajUJ4hH/KzYsI/CNQu80gZ1U0z55lBD49jVV4WZw1wfpySuv
CFyvY2QnsOPp60ufFRC417gt5b/48gW1mpcEvrR0tkPgQ0V+ZsPPCVz4qoHe
Au48NHxscTaBxZRPbhTYge8UuZFBYAMJDvovntacbvaUwDvnLpkJbG9sgo8/
JvALzY2mAn8eLv16IxXW17Jkp8AHY9S5uQ8IXFRupPxfXP3JiqYkArdm/VwQ
jG/XKqfLTiSwhMyKJoE/BdywlUwgsK7FaILAB+SFz2jFw/feIfv+i78JiLW9
Cftr94MrWL+tGzPnbDSBt71HjwRuJVzrEq/C+o2e6Qlsw2gbKoog8LGVW6oF
+Ww120vtDCPwynPTewS2/vVm7Vwoga1MpLFgP5pvaSKFEAKrmD7eLPD+rRnO
+ucJ/E66KF6wf82dChecAwmcIXp8RLC/ViFx9y76E7jDpVNPYMuqoFbyJIGV
+fpFgvr4+Pc4q9eHwJPv3IcE9bRP1EOc4kVgen+qmMAW1uZ7jT2gPuTe6Avq
sWGKPHrUlcAF+vXG1WDzJJ0rUc6Qz0Zz43dgs++r3tYeJPCAK/GHoL7rw293
j9gSOIn2t6ig/k1VFs2JWkM+PBIHSfDek2ztfeYEXvIs/2I52IRbmdWCCGye
tMOkBBzxDV/8ZyeBWebNlUWC+6birfW97QSuWO2i+wpsfO31nLM2gfMq3v3O
BxvJFJj+VCGw9JcHq3PA4bMvV31QJvCvuTLLLHBFd+5ErhKB9V6lBjDAf6Zn
3fdXILBfgnim4P7YteXxyII4gSM0NdIfCO6H5Y/K+0QJfG6MFiO4j8o5Kbfe
LSKwIcfp+D3wzjdJ26OFCVzcMbA8AaxvGn9dhkPBvl1tv6+Dt3le2qjWQ8Hu
+TJHAsFBuy/yJb5QMPXG5iZ/cPHG4JaJdgq2sVfQPgPWZQeeL26i4DaNih/H
wVsvnqozqqLgz3mHZ93AWvdcvA9lU3BKi+yAKVjtg35WVBAFN23fuUdOMH/h
PXmpARScKdShKi3Yfz2b4iI/Cr7ySpQuCfZ74lU9dIKCFy85XigKLglO7Nvt
TsErKsy7+fB/MVZjyS8yo+Bm/aXeA2Dnm+nRVxUpuOJwQ2UOOMZK5MS1t8JY
q5+1Rxs8UaXSMjMlhP2iGvOXwv/WLmfsL+ktQtg/KjGqGfoJt1iJqfmxBfKy
c4FrOPQrZH9LdunQArk5rXZ/CHi1XqJ7UO8Cub9kziAQ3PNdsYnTtkCusIwX
8wE7aG7MZr9eIJvu1p63Blt/+stt6NoCmXNJLnYN2EjhfEPL+gWyt1LHpwT6
qQ0ZA08znfmk0liwfjf0a6ppFRUtB/lk1Fdz/0/gTcmPvs3v55Pf3CkZjWCN
WKcV+0z45OKURTwSvDOwLWZiM598fT/f+ynYZneV347fPNLzkJ/JCfDlofQ/
Gx7zyNiQwsYZ6Be7VTx6WENcUrjuxx0e9JuBR3Lddfu4pE5bddAUeFn67FBI
N5dUTBQ7OAbevSpuQqSZS3aZFfK6wflSb+jrS7lkfFvm3GvwVSFZTYcYLuk6
bPX8HFi7qy4Sb+GS5glh1aPQD8fc1NxyK2ie3NYfZl0uwkYZZnFrnfzmSeMO
ubACMF40LrXhxDx5d3IygwGeDsucLXGdJx0P2bffAnsErqns3T1P2sWwy46C
d7iK22nIzJO736tmLQEzNUYuNOXPkYUuZvVWi+E8f0qrER+dJT8wJI4U09lI
RE9+jdGPWfKp9/mGbHDt/VvnAr/PkvvLn29KBZu4hqt+b5slmeIHaiPAfzI9
o/PezJKdx6avWoN1hf6wtI2dJWOLVkiN0NhonVpue5LmLDlSn7l5GXjuSumg
ctAMuaV+i5IBAefnb+Ps7jMzZPm852U1cODeptMJx2fI0B1NrYrgKbEf8xTX
GdLot5rlPAX6tcRlkv0mM2TXHZ3UIvBPxjGDNKkZ0mk9O0UN3PlB5u7Kl9Ok
EluvT1wYzp+U3x6ZIQ5pazrWvIfPQrHbfQKY3zlk3+/M6TXgI64eT8gvHPJ5
qMnCDI+FlufY/PZu5JCLuT8KGOBTRtrFb//hkFbJBnk0sMqZKRWvKxwy04XO
KptnoTsfA+llShxSX/isguQsC/leD652c5oi7dqERZwmWUjeS73eZHSSdKqW
37B7iIVaVMKk6M4T5MPxVb09n1loMmW+hvzIItvHHsqI17CQ23Mt9kbGGBmu
vjW8I4+Fqq6K7d8bO0KW1HelJyaxEH3r9vL72UOkr6X24ouhLOSV/qzw8bUB
8mgCQ2jWhYWy+44U9zzoJcU8qs0M9Vmo8kvMwL3gbhIvVUTd0ix00rfRZ8Co
nRRf9Zq3ZugXyrPzlt808pEMcTTsxq9+od/1uuHHbCtJi9j9uZ4hv1AE3izb
0ccg80TrpdPQLzRxw2YRqZuBlvgbDpQRv9Daoq3ruWKVyDb/kpYbHkeRYebW
F4ob0eQGLyv/y+MoRmLc+k7CJ+TZrfpO3Ggcyfb847XwvgslUx3pUkLjaCL8
uJawaS/SiazKda8eQ6UdOxkWJwaQjkOzglj0GHrsWCZx1HEI3TjVYOpjP4bu
SCahuu0jqObUqptxm8aQ1+Ktw4Hwvpafc1f59yhy3nwpbAKx0IbRA77C3aNI
vs64zlF7AoWa5/UUFY+iaJnzRR7kJHIuC6Ex742iJXPEqhaNKfRy+HHVfPAo
CuH92nWkgoMsn652U3IdRfy7Gl0uejPorOmGx4UmoyjCfK0j/9ksii6IuPlF
fRTx1vglVmjPoycyMvV68hCPkTcby+Aipkl/Sv2iUXRRJvvR0Vwueu9jn38J
HPhoB+dbIRd5nXWp0gF7FTqltWAusiqI6EyljyKL7ofTRV1cxC8m4v1oo0j6
f+uehEnw0AHFfYdkiVH0rH4TTzaQh0qT/92/a4GJUg+UWceH8FDjKxnGLz4T
JX0zZ4hc4aHk66VZqeDoyRM2vDgecj+AGHweE51SeJnZl8VD0j0HlIu5TKTr
o233/CsP/Sj6OCE9x0RbpqqyNwzy0OotL4+8nWUi1dADQo+YPCQ/GLb3GFjh
dkDOrRke6vVfYlM8w0QLpcXC5yT56Kxl1KTVNBPN/LXXni3HR2oGBv5THCZi
N3Y+917NRzPrDxkmgfv75uyd/8dH69teF3ydYqLu49G57Zp8dDfXxuIS+BNH
gbDaxkey1v+uUQI3XspxqN3FR4oP7qvif5moRmTnC0MTPkInNdxdwf8HJmQ2
yA==
        "]]},
      Annotation[#, "Charting`Private`Tag$776657#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8423684177289444},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: A(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.7757617509752777`, 1.829408435012814}, {0.8423684177289426, 
   1.0259342629661048`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9309086887891474`*^9, {3.9309098959299726`*^9, 3.9309099002577877`*^9}, 
   3.93090998869142*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"2131c341-19e8-4a02-858c-b4b04a324e13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"b", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
    "into", " ", "a", " ", "list", " ", "of", " ", "points"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameterb", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", "bparameterList"}], 
       "}"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Use", " ", "FindFormula", " ", "to", " ", "find", " ", "a", " ", 
     "suitable", " ", "model", " ", "for", " ", "the", " ", "data"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"polyModb", "=", 
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"dataParameterb", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"x", "^", "i"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "11"}], "}"}]}], "]"}], ",", "x"}], 
     "]"}]}], "\n", 
   RowBox[{"polyModb", "[", "\"\<BestFit\>\"", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
     " ", "with", " ", 
     RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "dataParameterb", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymax", " ", "=", " ", 
     RowBox[{"Max", "[", "dataParameterb", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"input", "=", 
     RowBox[{"Log", "[", "maValuesList", "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", 
     RowBox[{"plotting", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"dataParameterb", ",", 
       RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<parameter: b(\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", ",", 
            "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
            "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"LabelStyle", "->", "22"}], ",", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"polyModb", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Min", "@", "input"}], ",", 
         RowBox[{"Max", "@", "input"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Green"}]}], "]"}]}], "\[IndentingNewLine]",
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9309099341475687`*^9, 3.930909956323479*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"92507a2e-39ce-4a6c-8769-33c3e487070b"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.5263641619698364`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.6489888202537263`", " ", "x"}], "-", 
       RowBox[{"0.7263670273250531`", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"0.07260760262798957`", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"0.2290155946479804`", " ", 
        SuperscriptBox["x", "4"]}], "+", 
       RowBox[{"0.007585302610595606`", " ", 
        SuperscriptBox["x", "5"]}], "-", 
       RowBox[{
        RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}], " ", 
        RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], "-", 
       RowBox[{"0.010610969351428846`", " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"0.010360602901249858`", " ", 
        SuperscriptBox["x", "8"]}], "+", 
       RowBox[{"0.0024378007803414962`", " ", 
        SuperscriptBox["x", "9"]}], "-", 
       RowBox[{"0.000575171049031531`", " ", 
        SuperscriptBox["x", "10"]}], "-", 
       RowBox[{"0.0001594031523295041`", " ", 
        SuperscriptBox["x", "11"]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {0.5263641619698364, 0.6489888202537263, -0.7263670273250531, 
     0.07260760262798957, 0.2290155946479804, 
     0.007585302610595606, -0.06694085153147614, -0.010610969351428846`, 
     0.010360602901249858`, 
     0.0024378007803414962`, -0.000575171049031531, -0.0001594031523295041}, \
{{$CellContext`x}, {
      1, $CellContext`x, $CellContext`x^2, $CellContext`x^3, \
$CellContext`x^4, $CellContext`x^5, $CellContext`x^6, $CellContext`x^7, \
$CellContext`x^8, $CellContext`x^9, $CellContext`x^10, $CellContext`x^11}}, {
     0, 0}}, CompressedData["
1:eJxTTMoPSmViYGBgBOITDDDwwX6UHqVH6VF6lB6lSaEBV3fvLQ==
    "], CompressedData["
1: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
IUW8nd49y9ssQObSzHI3JEuR/wHJIZVa
    "], CompressedData["
1:eJxE13c8V98fB3B775FNtiQzMz7nIBllzxLZsjNDyYxKhZCykplkrwj32qPI
KDOZ2dl7/vrn+/ndx+P+eZ+P+zjnfV/ndbltPAzs8XBwcDr+3RQ4/13rwDTU
r11Z7QR8EK/l4Ggjg+38xCkPg5ih0N/PwzUOAnBP1P0gPugyXGBYPhNoUIEC
uMwzM3z6UNhzN43O4g58WTFMrFDiCkOMCV98VQqEUkNf877iPIH/+ZXCb5j9
545BwUtR8h4WMmii9KI65hUTjO29/h5fix8e4PFRMilIwdf2X0e0LZRhwufq
fkcLXZg8cLTwzvA2/HYWryGW6AT3cP1yO1nvQ88h+dKh8Qisf/5HjVNR1DHQ
mDaNKPEghbPyP9UTCs9BEf5LWaRyfHAiaYOsmUgSShzW3btJB+GLotKnDh9u
QMJ5V/Nfz29C/8YDw9ftDrDEXqJCXtcHCtOfOXuwhWH98KCx2lmhY3DroszT
lnYSeHazrduvhxHO/dmceyzOCzfXFI8Op8Wh7uNuOqvPStDYrnlPR1ALbohd
F+nDN4X1Md+1UWgH9w0Z9p/2e8Kbg9bxpxbBWH9W4IScresILDt1spDxkMDA
X+pfeXcYIAOb0G0pKR5Ycbw/dD1VDNpIVRo99r4CxY8mV4YH1aFIsrPjULkR
NGN79OjRoTXUnn9n0iPvAZ9/obM74XiA9WV7OS30XY7AQhqtTOgjYnhyBpui
uBkg3uiNkW7ADSPoKtssYi5Bs3LejyxG8vDt123V+XI1aLAgPB7/xgCKlVV5
Xf59B5Zv3VK/reMCizZe6ZTa38f6yQGwKIriCES0U/2+ME4EX+K/vRxjSA8j
1AbZ6EzOQxXW0mzS9Iuwf7goWMhMFjp92JaO/KIKr2m6KmwV6sEHlRa3kiVv
QwEWoda6n44w+Hbmw0/8Plj/hMfmrL7wEGTNobQEGCLYxS+bLRBNB8VZLWIf
LHPCacU/VNLtF2B/Doa7L0gantPHfF5cUobTJHYxNya1YfKnFGmfBTOY4xKF
z9ZiB/eoZu4x6nlifdtv4XrbOodA60iwj/o9IXyQgxev0EELOcacBjiVOCB7
8mOVblIhuKCXJHGtWQr2vWeYcwEQxr8aSFWs1oJ//GLHvu4aw4seNrNVVDbw
GD3OJyh1w/rdvjnvhdcPQCDhVXZtIkJo2zgdVk1GC3OsH/x5nsEGr1Jq4rXb
CcDXig283QKSkIxEdOmcmxI8tsu6Rj+qDnVU7jvYGBvCwIZY4nTTOzCW08es
yNEJ64txtW9axR0AbkLGrS9uBFD8c8POUwMaWGrOF3CNkRU+3Cx+wDnEB62m
5avqc8WhsSGL048UBRimsZOfoaIGyRb2fmYd60FzsiJ/Zn5zuPPB3ku7xB7r
x3YsqCZJHgDNw2Tj20P48E7c0agioIYVcVNUPcnM8OGKlsjQHV6Isb05iRcu
CtdlakWTiOSghm/vIfeyCkyh8qqX+aoNZTMLucZ9TSE5gUzvxQAbrH/kSZbY
PbAPCP78VBVVxYc+tlTDTTOU0HeOZSdPnAnm5+O2H51ww7bGRCiwfBEmKHPF
CeRLw5hzuS5XeiA0SzxAeum1YCrrAOp3xQi+JcxWI7K/g/VN2UTm8H33gXBr
a71EKR5st42Ye/SKAnqYcGrcGmSE3R9usqSXnIeBdiZfjsMuQGl6k4SoYClI
dMWkaLZbCbL5P193bL8G1xSOekbu6kNnX53Ct6m3sP6XFm1ZhXP7YDLZudmB
Gw9K0YiQaV0nhywHFzZdoxmg9lnAVOFfTrhh9oehQV0QVnWkKx4+loAvzTHG
utYKsDbynp3OmCrc9KS1iZ7VhoFvrpGLhJhgfVp3jyf3qvcAoUOLUXc8Ltz4
M3DthJIMRp1ZFzjp0sPvSmFn0e/YocOzqpJGGX64EvN88a+nGBQlBhz8OrLw
72feyGY1ZcgX2eyvl6wJX3cp3y46MMD6vkxxI7lme6BJYMDTngQXTttoZXiO
ksDqyp8HY9x0MFxiLJLXlxUS415MD9L+t8+klTRmwiJwCjV96/f8MnSy9NZv
PVKCUS2MUUSTavBVWU+W0rIu1h9Ey4THD3bBya/XrGLBONCQwJI1pIQY6oc+
ktDHo4XMXYR9Pa7M0A2fLP/xU274InrIZlf0AhSQY5xYYZCEau+Ntfj35OFn
TIvkh2wV+DTrvnd0qxbWV3H+8YA+ZRck0XKlG62fgV318c+4sURQuzV4oWSS
GuLohlnvRJyDjletxhj6uGAMEbv3aoAAFIjB8Q5pFINRKgTLK+4ycPJBZsFW
KYAzPK/b1m2vYf1M+t1vmoq7gNkokLNo7hQQF7wO/u5PCCvne2wJhyhh/IJF
CXkdA7yhszBV0ssO73QlmzcT8sGPzMaJlgMXIVetS0S9sRS0Wc26jvxWgJdi
//I0F6hgffx6Js6Q8R2QGQqqnKdOgHSBmVeTMwG8P3BTr3WOHEqIoNuvaOjh
/mj4/SJKVliwFael380NL1/7Iv7XUAg2rH/45P9OHGZ8vC/uXi0D5QpaBRXJ
AdZ3c5D3qHq0A7SS3e2fTR4D1raNhHJ7fPhCwK6VhZoM4ub6rzGH0sI1xcFt
mggm2FGbfPdVEhesfoGDGyfHD5neijZoh4nA91Xs7xwEpCAl16IXda081v9J
bY6ucO2ArTRiEcrZI8AWIL78wAkPMpcT+onpkkBP2+eVshQ0UOmjOaASZ4T9
/joGNw/YoEhhDm/0fR646pkbhFgLwQ+0Log/szjkKsuhVoTS/z+/ah7S8jZu
g/jnZGRby4egUnnGf9sXF84EC5fK5BLB8OPIHWFrSjinP32OkooefiOlTo+v
ZobReA7RS8TnYZ2Xeo/jVz44N1S0ePVAGFakUJO+eSSB9dNs0m1u2mwDFYf7
Z1f2D8DjtGHl3Wc40L/jlbUtPSH01nH73DFCBh8oeThnsdLCTI/YI/cuRphl
9MryuIkNKj0dcREv5ob31qZulUQJwNyLzo4sFSJYn5ACLY/B3wYnwjoUCyQH
gJmhIb5C7wyUH/dT/k3Eh2NWNcYtwSSQ6ZTD6UIOFXzg2XmUKUwPbb4Ujccc
MMEnkVNbmiccsIGtPCu7kQeSxfyJVfATxPomlVMEbdlb4PHoS/E9jn85R/rs
wlbKCUhBDYepLuHBODFx1xI9IrhsxteQYU8Og99W9Dn10UB/qutakzkMMHVf
hjP9Jgv8WG7K+JCLC/oWCmVssfJi/SpLfJNjtS2g4Cvv6iS7B04Zy27c2jsC
hX/1g4mHcaA5/1MRGS0C6GXgcnvyHgnkeB78cfMeJezAY+z0/kILnYm/P71w
mxEyAeGciVoW+KdaVMX3lBPrM5Lw50nOb4LNQ20EY7wL9KUHCFJtDoEYT32N
pMgZ8BF9usrgjAdNvN0c3BoJoRiV28v9clJ4mlloOGFBBeMqg42k1mnh3Wwh
d3cJRpgiz3M6TMqC9R+XXtu/+2QTjLh8u3D//g64b/PspvP4PqAYre9m6D4G
3d852riLcKBBd85zNgN8yME7n89kTQQdf+TUEq2QQsWGxLEoIirYv8lU8NGW
FoqCH9CajwHrT9y6q/nuwiZ41V5RQJe+DUaSfAzuO+6BX6vMlhpxh4DNd138
pdAp2DBxpCHjxIWEONcrDdzx4btVK4l8KiJIWXIWPEFKCs2IK3ExrhQwrNaD
fIybButrEjxL/tm1Ae5TEavRdm4Bjj7RPR+cXRBcvdjqeH8fvGnXsyGRPgLc
PUwFysqngENvrvVePw68zXAmPVKBBw2spr9c7yaAdaIlpIPcxJCRxc5ZqoYU
62cXFiyTu278azTNO177m2CAxESX8cM2kN7cSmJ4tAtCRe8VjQTtg4TIHUK2
gkPgsCYaPUN6AurTDASS08/A5mucbQJZXFg5Ru9f2YAHT59XUcs4EWD9c6bd
iiqUG0DZYrFeVmQTxChE2ZBZboG29qz0vaxt4M/xvEX/bAdEp1HahXrugWt4
dSjR8T5I2e6zepDxr/dJa1XFWx2Ds/SlmfOYUzD8jlzvKQfO//MNZ+2Ff9E6
oLYPSLtjtwGKre7IEfFsAtBB+Qv9N1duZCrv5iu3wNZbjZuDz7eB5bX5rhXX
HfC+nrDzpckuiJcVdOLT2gPlbJ1irBr74LXmFzildwD+83vyaSaKdNfBgal3
wlLGv/Pe78Fw7dY6sF5dfSqosQGaU1uL5NI3gNGTFZ/dnQ1gOEEh5aS7CXAH
TZzeftwEkvf1mmKIt8BA4Ad6Y4ct4C1DeWezbQvr6+faWXVNrYEalyK10uY1
QLO2nlCRswYW5W9K/YhaAy8/XCKicV4D7P3dm4431kDlvbLfY6JroF7TrdiF
dg3InsvXYtpeBcDlwuvfg6sgKrPrfmPNKtbnO8jDk+VbAx0nmnGGOqsAqZu7
eOnRX9AL8++mlq+Ajy73VgJXl8HvsmjbLNFl0NqQH7jhvQRqE/aGlBsWATxz
Z/CiXARpawaVVtYLgDttmP9vzTzWH72+nJ3lsAoK7GvI66ZWwMp1useq95bB
8C0FX2XaJaC50Pmps3kBvBlCO48i58G2dHQG3q058Ew97hO94h8QEboZ5S4y
CwIRaufbwjOA5c2LT2LS01g/PV1UnSb/L6jOOq5YCloG/PGFxeYPFsFmS+dT
l/R5cEfu5flbs3+AtMftb8las8D52cW03p5pYM7kOt7lPgUiTmUHQ4UmQdMQ
TYbg9jiYaidNimgew/rhG56LD5dXAPln+hcTPEvgw5PN2pF/7scX9tf6zP4A
qiDzsh6tGSAtlfrEzWMKoFFf7VPDJ4C6RJg13YNfwBs9pFGvHwENugf5JKpD
4ON0T/4g4U+sf+VqZfTipRXAknkan9y7ANq42aq4R/+AkATXWlnMDKCQiiyj
2JwEmlnrRjLD48BoUN8RV2MUGLfcvV7FNwRI04rJjKx/AImfovyOm32ArnNc
viLlO9anStq/ZPJvvW1t6jvZoubBVWPrkqR/69ny/KWd140pMMZIbur7cRxc
fTwWsucxAja87sm1fv8JGmlSTSfL+0FGgKO8G2kvGJAUKwoJ+QomcqUd9hPa
sX7f4pXeprIlkL6vK2p7bQ70M599fpc4Dc7tJNm34U2AJF/ENWhiBIgfaydy
vv4JBAPOtGPw+oGRkGemFWUPsEkSmUboOoGix+bQjeUWcPXjkxwyn0as/0kx
2EtsZxFQ2lc13qP6A0ZtRCfSGKbAa6cVgp3KMaBfIJIeEDgIODFE5EtX+oH2
TpAUaWI3OK52ZmM+awdjkxGBgvebwYC76s79BAS8FGRR3kmrwfraMU0MqbKL
4GLeevjViRmQom9gt6I/AfbaLKF70TCgUeI3EPYeAP15f+uj83rAkKdivrBQ
B5CiIJK4TdoMqAn9/3biNAAl+T/ejdnVQIcx9n33+zKsvz9FWE0SuACckFOf
35+nQXKTQRhL9i8wgP8z5sbCT9CB8BK3NvaC54epF/wyO8FG1dpxckoz+Jur
kbdzWg+CFPU9UzeqwOAJZU3F81LwXbgscnH4I9afvqx507duHtAXTSZgUqZA
MGG/TDTnKLhRO6jZfmcAWBxf25+q/wZMqwOsEP1WIKzKjpORgQAXqrS8Kt9q
IBfqPNXiUAoYyo8vlfXmg7bm1X4SgSysnxf1/GjqdA7Eeb2esYucBIyEVzNI
0SHwTuBFliRtH7BX3SyLiuoAP37Na77MaATyzxw84oxrQENTO1P65TIgV5HQ
ayH8EeyUZcQ87c4EnQTK7/iJUrC+zuj3NB3lOTDDApsyt3+D0kL28dtRP0GA
caT12UY3IEBNyh8OtIC0yLc73/bqgPQGuesD/grQ+cJhr4XwEyi573EoGJQF
Cgc4L2WxpQAXlchlg9FXWF/mEj38Ev4HeB8dspKs/gIvV76Ta//bz8PkrnZ/
wS7wViNpNi6xEfhkkE0x5lQDvt8ZdDe/FoMz5uFtI6scYCbsaufekAr+qEvL
3TCMB2vajZfvHT/F+hPBJtOCbbPA64lF38H+KHD91KeVGdYHznngswvWtQH6
MYWtxoh6QP6swKv5QjmQsJ6ZezL1AfgXKtGRCGYAb359y5/7CaBv6Il2m0I0
sMorjr5ZGIr1u/vfRiSQzALFJsc/9xlHwOvKi56ad78D7Xux9W/zm4FGQWJQ
dPpnMDRy44LNQBEgDapTtb6RBUSG0fn+C29AupDaoKLySzBSLodOr4eBlcG+
MtXq+1j/Gf+4AO71GZCZx2Ia9i+frFrPz8tRfgMEoQydbxdR4MJoPFRkVwFC
DFnJLyR9AEZNKF17bhqof70mEDkZB7QboijcXj4Gs1s6BaKnAYDnvUxriakH
1lf0P9/p9mIakMp7C7CE/wS61s6XszY6AF7asrjRSh3Yyr262NxSAjK9+H0S
PbMA3qXV0Nzo10DM8XqJHd8zUJ0iaUmo9wjQS31JOXrlCdYkv6yWWdn9f/67
bF1Gv08BLz8fQ8UfA+CL9XoiM30bEE358pgq/jPoZIj1CjIvAAervx2SfdLB
YQqOaMtWLEguoHgtPxEGNH+96DDB8wUXgmuvOtk6gtPrdiq+pLewfgNHHqU6
3RRws+L4vSzTD6beJWtc8GgGS/e95HXrKkCo7QO2Fq5cEM6Tf5MoJQn8VQ04
LBR7CmZ9V0zcJwJBweTsKtMnV6DqOXU7OckS2IwlSeMb6GF9n3tLxeVGk0B8
161NsKAXNG3qPbXHbwTNV+55+FmUAuL9Jm67mvfg3i/bh3JMr8DM7LuYE78w
4JtL9r5+2AvYmr0RCVe0Bfhl9X/MMg1Be13iZ02yq1j/Z6R5NhSdAGye35gn
rXvAnOPuhS/J9aCJSDa6ePgTePi0vjeFLRVkSHY63bGNBv2ulCmjxYGgqlgh
YBXHGXjIFsw8NLkJ1rIkg++WaAClFOrSBCo5rO8qMr3AUj4OjLUprJ7GfgW7
Pnj6qok1oHG96YNPQx7Qvces+4j0NcgfwXfe8I4A7KpLf6KPvABObKKSdLo1
IBL0DDq6qQcydEOPzt/CgLbWmncvL4pg/Yy+u5e2ZH8B2tAUm+vTHeBhfSJu
xEYlCC10sSi9mQWOLgg66tHEgYAlFm455kdgzIPq3venzoBCrJ7s2MEU6DkP
WRNnXQUf4xKDvkhKgjU36WhpivNY3/3+mue3ulFASxV4XsC0DXhvB1emfSwD
L0quPwmXeAcqiaWp1GieAWL1ZunTNl8w06LRLCxpA6gqcHyv3NUBIJ1z49xd
eTDiUPPQX4Ef6P98QtpYR4v1d9n9qnKUR0DHZt5blrVm8CuWu9v6fjHA1Zsb
6fv5BpjcSp08fRsOqFJwf5NtuIO2O30mXS5mQND9d5DuNVVwt/qh/4arKAgV
GQqOwmcGLkJXbAi38bB+atPx4aO2ITApxt/D/7ERfP0pxlEHPoLGtZaa9yHx
4Oszbfqxw4eg95FXBs0Te+AoW5BYdaoLPL5IXnnWKguGGTl3PfK5QT1n6Vwh
hgyIufvvDgdvYf7zye+GA7Prg6D46cyDRBoE/GTq0onOzgEzpEBOWOgl6BNd
NUz/9/1sJVmOPb1mAb5a4Q662l8FFyMU4kNdREDI8Y7rwDd60LlBQDb5+gjz
VT+nplhuButrU5JFSPT+AMm2bP009F9A8ucYY5rU94AlNrZBdiEScGydczT9
5vavVzlsJ1gbAtLWsjphGXnwjba8Z8r+PLC9Lh1QY0QIWKqFr91HljFzq9/x
JCn6sf56WWwHmfEAWF3dSK83rwYh0lCLWT4VMNw1TZqnCAWAYph6660dcDGI
ttKb1QAaqXf43OhFweg8wzO/i3SgmyF7QWx7BzMan7T6IXIUw8JVu+pFhGJ9
LzMmytmRPmAs7DidslQOHBWlbYLlXgMpShXdzC5/8GDoFunSB3MgTPC5m/8X
BlSc659mkOUG2/sqKbuX8cEREx7zoNsfjKboWEzkQjsmAvyxzPn0EetznKbp
11v2goBzD1ILkBLwRlNpdIgnDrj2WOrrPvEEvKfbr7nW9cGn1tBYk1uS4MrY
d1+8djoQujfSLyGzhZkyrH+6lTeAMSup/mHCXoHR5pfQcIlPwPps6poil9q7
Aa29efJIZQHIVhSVUu98Cn6wz75bOHUEShnS8xZG1wDpO1J1z3Y+0PyG/BqD
CT5QgxYHt0+nMAvrLYHhDSgmSWOXCbnwDqNVttj+7ewh1h+OM6mc6O0CfScn
Cw3+uSDpCI+680cYKL6mLp8acwcYJGaQlnopADOq8iv9F86Bc6zUb3JebWKG
Ky6LNp//jvEYWRHoZvyI0T/5hR6OPcY4n3m7OOvbYP3wcVvMq9F2MLE/zkfc
8R7QFK2IeIUFAuTl9uRAkyHgUmGowfe7BGROr2pR7hKCBK+b/KOWkxjmds34
I8fPmI6Jmvp7Eq8wPOxLh2+5XDAoscPSgexVrJ8n5Nl+dbYFZOTtptippwDi
THJxme+egC9rkopFWR3UOUuv8lhwAlHn5ZKe/i2M9N+oRMPpTozVoYo381wG
5pYnOW0VjR+mbqI/ruT7DYyiDxud0XcerK/q/Uhv728jGOX41BHC9K8H1H15
8jXcAVD1HD2YVZAHDTxKzH1qFOCdC45pYdEEhskDJ9cBLcXYX79l5zkbjiEz
WmiJ1zLB8HYGKLUdCmFKMhCTvZMjpf988yCmcsO1ekBW/PldK85zcIgEsPFI
3gK4n9R/3QwVAoJdru+CV3YxC1RWe62erZhatV9KQdQJGKax+TzaFhvM6qPU
ANKXEhh+pkxTfFccDHPe7F2nmh6sv0Qv2foZ7zN4n01ly0gQBjx3VbLFSa8D
IZriCxKaDKBt2F5IyfM3Js146HPEUC7mWd3SXAKvJyaB0alG87M8pvhcn77j
DXzMriC33czON6WZ0vfcU7WJWH/+w40hjnNl4J1MRdWUpw8Q03HJsWKXBS12
jiO/uQ4x15JuwL2oegxxBjXzbEkIJo5ocYfutwpGX5hjYtGQEPNQJV91mq1D
KbpRbLQURis1nB2Ne/foYP3aoJ5+QsMPgMbclccqyAZUGXDp47KzA3317/Wr
Fj8xQnbEidNKsRiPn1d7WUs1MJg3jPszLXgYn+MngrVP6pQaWwY840t8lS4M
q0dWPBRXcr5+riyFZlHxP5/rNvHqu603QNOBpbDIRxV8eRj+9qrpKsYLWLR7
fkjC+HreL/PyUsHwGbmmvWxZUfLoKTT1cH+tdHF5SCE5SFnpbTJec821ZUU1
dsnqiquJinrPteK8EyHWx1Fic1SlNwLay9tlQLwGMz5VRpyVzIXZuyWj/mkg
XEnToOGK3+SCYpeaIW+UjK5iGDlV4u+E8it72jIh+XHMV+57/rz5YeCRwkHd
6/4hkxn5MoWeO4OqGvL/+XK7vKGynq+Rg+czzQGBAIjESva8op9r0P7dXXh+
7yWmPzB52KdauoGiae/Dsu9vJbrsDeWh24/rLwc+auvbvaS0z2LdVo7/s844
o1WxKyBIsV9QRpHgE1/df/7LntupfbR5CE7csGLeeyvAxaxJPnfIhPgVX6oq
1uzDPBOnvH3p75MGgotcUzf3lTFr5d8fESwe1J9ykjYsFJYpbYiWU31bda5n
fyO7+d6ZV8nveNZv4XQM6zP20deF+5YikZaPyZgovQFtaQfVz87LyCPiGHfu
4l2MBon/ahH6ueHzNc78SLwHmLvhr1apA5QaLv/odXvOgIORJfnxay26sZ51
Jy31JX+4knpdX3fU7NX6//wFhYN8Tptq5F791XW5c6EAj9WgsnZfA4n12Bgz
BXTgCVzB7HwcbfA5k7HJeZiFyR6cflYU6NpAUJfjE/L9MqbTL+3hvNNpPQm+
0dgd+TalYjKyeWulWKyfkv07qUanHnmmo0jjNfQMnJEVSmgkmiFV9WWTzeEC
YDKiQq07fbuhm9y3PHu6CSPwHEdx7Hpcw9pBR1dS0R2MjOqjKWGCSw39EYU6
F+IPlWoFZq42mHRg/WziaZWPaY2IW1mCF5t9PKjCcfoYfcseOewfZM0IkwWk
RdWUftOkCMe8IXFx8C/MCCER9yOr4obLf2Msx9RCMQsd983dCQwb3qpns7Kt
82E8RJayPSj3sP6Tuh81e/EtiOHp42rV+8ng7ToZwzKBJ+J/6vbs2YwasCFo
Sx0VYEfecL+j9GXdxLwp5i8O0mhvyFMTSlnbSMNkCODufVL2bsC5aYdcatHA
7BaXE6uOcjX85z/ybBdXe9aOnBIGLDPrvwdCz7YuKgQGIJQCwzjr9QZgxfOh
Kk78RcTlbg7arUEALi7ddNkaGm/wtSZrE96uxFzrR0XNBWIbeEl06sqbHDF0
I8EyqYHKWN9QoDbvVUgX4uLmurC5mQME3h8giZfCEEGpB9kC7JbggoP/6cia
HKLJ1PydLo8ByHnGK9SybjT4hkrLTRl9wxjk6t765pfX8Kurq/mbezhG2vfx
e1ZmK6wvMPaJc9KvG3ktndYvxl0AEqKiasYOnyAtAoacvDiO4LL1iUvcJTUk
b8GGfz+YF2gO2Js6beMiInQNDySfTGL0hymjij0bGhI1MsO4SFIx3231Bh99
D8D6h+3fu17L9CJKxYQ/593+/Wcd0CXv5MQiRKuTaU2/7wGuL39d9Zn1kY0G
p9RsAwlwXtK4q+EFLfJILj0ts3MDI2QG2gyI+hsyzCxP+lTLMJejXQh5w15h
fVcezcj60j5EwMdc1imuHDQUF4hPZiUizT5yTuGr98FX2YE8tfu3kK8f57dq
ryqBYWqXHwxi55GAXZZPPX9wwbLs0c+TrpmGDoo7yIuZVgwjhlVq7fIHrD/6
sEl5VmQAcV7UpWE/qgKuvLo1Bc9SED7btnMHISHA7Ebdom+7LUJ8x63yVoU6
ULhi+avwrggSgMvVg0tEC0Dljcd/HLYbts2S4929hzFUtM2xhdr1/9/foSsn
ZB9+ICLUM3dwCmqBlOYdgWWZ90hAS5+jl3wkwNEv9pMvdUWu+WlL3ntsACjs
AmkNFmWRrdTBiY7fnODuJceWm3/xkZqNLvrDmkXMnO1RmHFKL9b/KFH5WYJ3
ENmbZRA4974BpKeO43qI5yAsFcbul/VfgG+9Lc50Gj5I0bkt3Crq28BZzHMp
30kVsepFWE7GhMH3NNdbHQl0iJlQU4lX5QHG00hKmbBzCusHPBf1MUsfQkCV
V2mReyMIEwl/kPElH0GIY6bFT1+Bt1PWdy1IHyIZpq0TfqV2QJT8d/2faB0k
0vmeTkW0DPgiVFxxkHUeWci/dtkhlgQU8gUZmXBvYv3+uTyxYJYR5Lm+MPly
cTNoTih5h5kuQhyTEt1uy78B83nPtTlwwhEKVV8c3x43wLoZdZHc2hR5i5T6
eZqoAJOLYVxaLSLIrRrbN2qx54Cjb0pzSRku8p9voMy9nJMwimioSZyHDG2A
9IqtEoFpGfLoaPig83464M/5xPpL5ykSf3SlI5PQF9xzYDS84meNFM9ncZnj
aQONXh+zAmY5JLr2LTzE5wN3qR6GSmfQYP3ilOTcb9S/kKPYqPXClA5AWP3q
uWVCJRKzGakZuJIJqjRqJ1TexCIy3mYkw6xB4K+NAjL22AnR14+BtdYmQIvL
ZDkmQxX5OidQLSojAaTGzct6xTixvsAuvc3Ws3GEQvrSw8vXvgIZqqRmStEa
pDE7NIkO5AGWiuI8Fr9EhP7q5U7Z3nAwXvlN/IuWF/LiMym54IwVyBcWGLQU
1UXUviB0Lp2K4HfwozdP4oWxfqzeCw5WoglERoKneYC+B2TEZNzdEKpHRkT7
TOTVPgFtJum33ndTELx2tXWnV88AT+P5lvmmAOS6TApT7cHdf3299kGxjBni
SxKD/yZAHTxLdpVTa5LB+k+Mw10z4CQyoVI+rRbWC8Ja10K2W1AkPveKXwlJ
KfjxKRjvkfZ7hPx3j591fBxg/1EgfWc0FLkgrFv+gMcLCBOt+X5xsUGCmonP
8VYZgK2mHEw1rirW/4wHu6ROJxE2liBlUYp+8EKwiWxJuBlpcFO+6WleAUTj
7v/5nZ6D7NDnbFnuvgamf+KcxW2fIJojaUc5cwGgdEbcQjDMBeHAL34jKWsB
cmb53SyIdbH+UvGxYPuXKcQ7ZfUkM28ADCZOMHR2tCLHy8QPz/g+g0l2VYdP
TR+RkLHy8PkPaQD3UC+9zSMWca0axfkoGwbIRD7tbIj7ICqd/D77Vg7g+KX0
VEG3Gdbntah5fCtgGtnsJGbONvoJuOSsbHDfdyB5JVkhqx514Kr80FC3cwny
+fqjC5+2M8GFOgtV4plE5FrIp7m7ak8BiZnfXOOlIOTZc6/3dsP/8rYz5/iy
ty3WNyfzm/krM4M8ze6IkaAfAmfSt6vwqr4iOX+HGjOzULDf+2ft3lE5MiH6
ul/sLA/82nj1w7kvFTEmNab6rh0HCDfuNHW3RyB329WyU7b9wYy0vTP/vhvW
L6+WVA7dnkGiLkrYX58ZBjXVywOKZN+RB1SCL4F5M3j06bWVIN9nJKCdhnuE
rQjQF45Mvm7LRMilnhkjzkngJUeweurlF4hRV8GirUwYwKuZkZ+v8sP6a3Zr
6Qxls4iFpfKbjZZRcORJj1Dr9SEat+iLWuzagE8bTZPUXh0yHB9DX/alDKz7
KY9yXvmAeIzmhiWZvgOexcOcwmoJiOfOtgKN3DNgJ2A3u7kdgvVF6D4d53n8
QXSUDoT4Pv8Cnht0ipRKA8iafMW8TVsnUKA4sjh/tRGxxMm0XeCuBpKy4pxr
J0VIbKaod0dTNihNLLd80puC7HUyjs29fwUi7S73Pd59gvXvIHdvXbk0hyh1
mDHN1P0Gu24hTTraP5F1C7uGiMhu8Os+joSsXwviNMd3ze52HYiKr7yfkleO
nLHs0RFhCsCCxfwK/1QmQmxk4LQlnAzubg+oR/C8wvpxrvyfe5bmkPdnxRJJ
TpPA/2heiiJsCCmdsJKf/9kLaLP0OsQ4OpDk8XZKPLVGEN0pJ25Y9xlRPhZg
P6wqBXQX1Xtj7+QjDFbm16cvZoJfnnpf8ImTsf4PlmlGmw/ziIZnFFF40BQg
K/rpGfRrBFn/boIbwzkAhii6s3nVviFbv3Kh91wL6PQUjZKfb0BMzD1xeoar
wLqNsz7FbAkSh1Frij/4AOS820i6/TKxPnV7uveO/QKy/lmSTDp5Gki//Wkx
avELYbuam9Ca8RPcLhGMCArqReSNNR31+TuBDddeFZtIM3Ksf5PLRLEelF1e
vuaoVYWQb5qpDZyWgBb/RzLPlvKxvrKPed8T3kUkabBUsRCZAZ293iO3iCeQ
Xb7wYimrYbBJe9wnLzCA8PjQVimf6wE29tH63zLbkXC1ynr3uCagbtm9ESBS
j/wiu5TLt1wF9I6kvwvilmH9V9zMYuxTi8jDLoL05b+zIPkypy3b30mEDKd5
Jd1qDMyVYLLo+QaR3Q/NoevzfSCq4cGR0e43ZHVJeEXMtR1QJrxp0tpoQr6y
2t6MymoAMTnFT7XaP2P9vp4fz4vTlxD9hIui63xz4FvtON6AyzSSQjjeupjz
G/zNV1TrfDSCRDK+cfSU/glkWKss3mT3IbvFXs+9bnUD27PwYgqXDiR1h7uf
Rq8FVDwgc+v4g2J9kodxSyq3lxGBywJ/a+3mwW5Eg+I9nFnEj9C3k5R1CrQ/
ud30AjOO1LxbS2bGHQEUtARSBNY/kQC7vxeD1fuBepqaEJXKd2R+jEJurKYL
LFR1iE+MtGH9yxd0NAZZVpDt/O3R64UL4DA1Ejem4A8Sd9VALZV4BkT0ZLIT
VU0iZXzoYuTNcXDGvBtJ0jaCtBqaNJ/LHATht3rZWCcHkFhnQwJenz5wZ+/h
I9e8HqzvPUiW6zS0gqzvvN7LPF0EpJTHyl/d5hE23ctTHRx/QOgH/GRpkhnk
+Z/XszcEp0BdpdTf6uXfSHO1VKPD7zHwOOvrpcucI8ip2rmI8KxBYG4t6ebv
+APr54S3458k/EUmmShVUbNl0Px7dhVVX0TuE7Im1VrOgyJMxlle8h/kzt/t
mw37MwCvf3r0rt80Qn++MOcq7RS4M2ROofByArFzmpr/fnEcaN9/Vvp4bxTr
z4tHWMcarCJH1Kb1WV9WgCU78QG5wjLSyWrY+/HbIji2ysLx9FpAXC/nBVsI
z4N3NSF1D7f+IGIdG0vz32ZBuB2+WUvlDEL98UO7SuE0aEmZHU0vm8L6zL8h
wkuzhuD99nHQFlwF7t+F9DXU/iIP6EPsp5xWgPxKLsl8wjJyZJ9Cf6FtCajo
a3X4nywikkMnbR8UFsHIVTaCF0ELyOsvlxoOW+fBpcgrPh3081jfJPqEvbp7
DRENc8DUp6wBCTyaBVrnNWTs2qv0Crk1MOmnPp9NvIZ4emtpTA+uAsd8Xw3X
3FUEzlp7qPitgl0eezW7a6tIrXucYd+5VeBWXs77dP4v1ldnt1DKUVtHRE8T
MwOerwOxO8qmYT/Wke5V+7ctHBuA82SsXu3uBvKgp0ScvGIDPH0X7cuKu4ns
WDEIBehugjuSt49F3m0itNnqyJX1TXC5/dCkQGUL6097XVlxz15HNHJt6u/r
boDtyCwty3/PWy3e4XOq3QQQES6ZCtxCvDdn1RhUt8FzT0IdPfodpOMes/XC
8g6oswi7K9m9i9hExKNR1Xuge/HAXK1gH+tHdbKkyOFvII/k364Nn9sEj4Pi
2paubCHzB0Jfnnhvg10bjusTDTvI6Hbk/iWuPfDm8mZQR+I+QmN0wMjMdwh2
ud4OpX49QhZuxwmtvTgBP2ql1Rtdz7D+xfP7mng2G0hNtbx82vQmKFd3b/aN
2EZQD3MrF61dQHnkxJwmu49Y0lHje+gegn6qZkxs4jHCf5vYDZfqDBjkbP5+
8RsHfcyee/2bIR7E/TuzeWMRH/3Pb/Ib3P+KbiC/z19NbinbAppLqfLaYzsI
wFfQsYL7YIK7Bidj4RCZ6ax5dnfsBBg2nd7wisVBiZtL92it8aA0+2XFZDsC
tPSWKcO7DCJYLHR7XY+NFOvf6a7IS+TaRJh8P9PpRm2DYOcQbgTuIfaDxbv1
Jv/e97sHd8LPE6RPkq8x8Q8OrESfm2Tx4qNrlob9E4WE8IFbpY/jSxL0zSO1
o8Jecpj5PkfmUyg11t/njTe582gTuVHxOlPRagfwdz/wZqncR5K99fCnXx6D
x0mKfQKhOKjWLTnGPHp8OJ4R49hBQYSeD58LffqQFH4Mu6Xl6EuJ5txo5bMi
ooXzsgG9WYX0WD8x0JPwwvgmEvf7t+YLpV1gwLQp+FHuEKnvMTWWWDoFYvIk
bXbyeOjPk5Mh/4eEsJnBWYfImBSlG+z17BmnhPdeU6iKptCiV8Rp0tcbGeDA
b+tK1gBmrC/bp1ux+W9eFrZiSZT/zQeuzjVZ5N88qPH8xKOoxIEHRmo6SYwE
6GB019YMHwlMbuDZv0pEiW5aeucwe9HC20Ef34/uM6Ca7z0dmGRY4MmyeFGp
DifW7xQUta1L3kK4tj/9NiXcB998x97mup8gjNrOZQQkeBD/Bg31PBMR6rOY
GU9BRw5DcM6XpSXSoNX7PK+pDBggatRrtfuHGV2YRjknQjlhnEA84/sSHqzv
8oiCLvJgCwmfkPzWt7YPZBIYNIq4z5B3Z49PEHd8iF69bflKhQRlr+3jtNek
gi9mYkkb5ulQ/t2jV0TJTHDQyfPtoR8H+ov7L7mDHQ+c5h9BKHcFsD7zzyVU
12wbIa3i6Sv6fQDoTYU5XnnhoHWETC2niwRwjn648G8SGXqQ9vG92QINXLyd
sY8GM6JsGtxE5iZs0JaLP8TZmhs15Al6Xs4iANOcQrbZWEWwfsnFTg+W6m3E
+v7Dv6t9h+DINvhywW1c1PDOZOjjQCLIJjiwY8tKiapYvYoiGKKD5jLjk5Z2
zCjPv7h+m8AF8TQWGl958qEu7jIbS/eFIY3Fgw/2PBJYXzssj3OGcQf5xgu5
X3UegedbCg6aunholXKADjs3CVz05Dl//xs1GjUlQLG6xQA98DQJ+1PZ0Po2
8c/fJHjgBOOgITwURHGWhzDKb8Wg2Vhgvlj/Zay/Ofy4+5PPDmL4xc31Tesx
uP7kZVG8Fj7qcE57/OVvUggLwuStzGhRMs3tm4EqTPC5fWTTuDgXmtYfwfp1
kQ9WWst5mpOLoJLH6+kV3ZLwl8RRGJusPNYPF7N76Dewg3xUIvyO23YCHLIL
SEt1CNCvgSlBn8rJ4Z464aP9WTo0SGszTamNBfq84CN0SeBGR2yMF3mPBOEk
kNXXMBdHtxpyfxzpysBaYv/o3x4YrC8YqXIRSu4iVwqINHu6TkFLV7N3hzkh
yqHiz6rxnhJSxAae3H3BgHYyD5Yeh7HDoLq0uIE2XpS7U+BlsMdFGIdw/q0j
lkIl5wev3XVQgG6BvNm/dFWwfs2v86OkcbtIBr7X6MnAGfALIlnE8SJCE7y+
Ksh9oIb9yXq5PIbnUBWu3u6ih1xQIP7akPtlAdTBqApa64tBk0dPlP8wyqDv
ZAWUdQUAHGggKHi8p4b1DaTOngys7SIxWVnKHfdwIAAF9qFxxChz9oeQglka
2PZieylTlhn93j6agZhzw25nsUDTaSE0wcrgPNugBMyRmNZH4uTRw9Vytp+G
KnDvwa/4IzUtrL/0dFw2TWcP6VVo5m4+wIERr8b/3KslQe1ZtM814tFBORq1
PW9FVpR6rCt5no0X4t3kqsMZvIi+kHmxLHntMnx74pMZ+UQJpW4wzC0KU4Pm
JOvB0ca6WD9y8sucQ+Eektye9GItAhf2HPTa766QoiEuj6O7RelhUCPBnIgt
O+oYM/6ZDZcfPsz1WVZgFEP9PsbQl57JwN/KCrGOBMooWczr9UZRTRhxRiRE
m2mA9cVlkxPFKfaRI03ux9p0ePDLXtWU3AVylJrY3VzViQHKF93Y9SzkRLlU
KZhaKQWhUmnGEZuhBBqZ07D4i1QBQpfCJb04VfRTQ2r71F1tuH1RQn+cxQTr
977wv3rovI/0N94hGX+PBwOoGo3veFCgMV6U31+XMUJ7m2CrwJfn0c9dsT7O
Vy9AxoN0hg51KTTjUwxMdFWCjxUZG7q9r6E1KUMhi9z6sLbUed6Z/xbWvzdr
stXcuY9cFDNkSpfCh+/R8w2xCCV6XtfoRImcCZ4TYJetHeFGS6qJeUvzLsJV
lDGc11UaNfcE1JfeQMggshMVWamJRqzmP8EsGUKVFF27kFFLrE9zRTrzhdAB
QvLqqDS2HR+WxBIzbbNQozRmHF9LvJmhjIjNjqU8L+oSrnFgoSAKV5gyhBea
ZVHtXHHvi8UqsC6nSpraWhu9dy5OiZrFFPohuX4jQjZY/0Mcvb5p1AFivmQ2
XGFBAENCDEXNAA3aZnNp+e4KC9znaqcyKeJDS3sP+AqCxaGIS0oemaECKtpu
/lAGRw0+Ge1uOUb10B6WsCqVL7fgpsEEjbmhPdbXW9g4Oz93gFyXc3lGtksA
pbXeqO3u0qBed6R+T/myQUrSZ1QJ8gLoC8Ux995jCbgm3HNYx6GE+nwdufsu
Vh02tbfq+dAZoi5KSrcFJixhZ9tw6c3ju1h/HtNbtHT1EMl6INkRF0sIfeac
v8+X06JvTTs239BwwJUI1zKGX4Lo9feZ/lKvpaA/ZX223L9jq2F9eIDDQQvG
p3gP9hcYo9xVnBbqXdYQr0QvyUjaDes/SSyyqMg6RGIqiuK0LhHB0nOzmtCP
Dj3z8FCjrOeE1viuhGOvL6ADjo9TArWl4XgW/c3VL8rorbzDtp+R2tD9w8O1
5AQzlOtTrm2Qnx0sM2Zo2ybxxPrcK88pHuEdIevTE3OXvxFBvFR2KXoMPeq5
pTU5oXQeBp0FBm44X0TVWNXdLflkIaeKAlvQE1X0x8dJ4uKHenBP6uTn/g9z
tFTx7Z9fQY4wn96og+iHN9ZHVFy+qFsfIeNEbe16bsSwUfYSqQ85A/rxmebL
twLcMPWKArHzzUtotmi75kd2eXhRhmM88qEaKjIa6mZrYwCpbR4X9/jeQUep
lQnIlp1hBsqizE9yH+u7vtV0pkWPEMfz1pfTaUjg1QJRLb/fDKie7I+1HWYe
GHJUirG0FUObm5y+K8pdgXqLAs8HktXRBXWJG3r+RtAN/6jVCrVGLYzLLnzp
dId7XEnUuOWBWJ94XZBljPMYMRYrFeGoIoFB1fI+l6oZ0RoER0yOkRcSvyOs
2msRR0+1zD1JApSg8LWkXIM5TfS313R8aJMJ/LOxHMOLY4d2DWyI3Y33hDS3
HtuNzTzC+unXiDqyg44RRKqqpNuCFHZyOBIWJp5DB/dGbmez8cGjh9kmvPMS
6HXZ4mP6KQBvdO6NsdvcQL/WeeVrqd2E0gen50eDHVB6uz4+GRIfaNKGnzL4
MxTrX0qb9XP/dYykXbqHFhOTwZvvvj8gCWRCw9E7nsEi/NC3ACeqi1kK3W3+
9EpJXhn2F/Z/9qXVRVfxwrS0CG/DTlol1lw1J/ShqIIz8Vc/WCkbefrhZQTW
/7nVxC935QQR4Zgwby4ngw0n0caG//qHNEnUdWoNATjvQ9739NZlVOET7rPq
JBV4c3SxaO5IDx2vcHrrTnwH5v6IsxIyc0UrHhSPm80GQByKxcPR3Cis76z1
/gdu8gnChocfTmJDDtsPKmjeG7GgCZ3ypcnugvD8rlwvbqE0+lxkPJCN8ipU
eqDIbf3cAC25IZH/UMgakpLTv33a4IE+ePYtwNsiCAooC9AQCEdjfZL3weFf
90+Q9F9j0sF0FP/6rO1FwuusqAalqa5ThhD8VP8LM0Qjiwa9r7/2JlkN2vPU
h9IqGqFT0X6MTVs28MCvP1oZ9UST8K6qYzJCoNQHmfP7fDH/z7c9C8lE01Pk
wycnH8FWChjSW8wbr86GFi6U1TSPX4BVjpH45ZFyKEXqV9u7yuqwqjGSc5/C
BBXI1SwKW7CDqrRyPJcHvNHc2HsRqt/C4LqJs8ZmfxzWl9BRnLKsOkVIvT5h
cAMpofGl8vuWWuzoUdA5ly2BizDiiiVGhVoBxacMFOzH04RWmCQ5MVwz9Ptf
atElUkeot2mBecPuh3bXHi/3yz2GYlcERmQtE7B+XzZrrBDjGcJyKTuBQoIK
Sl2KzAk05ECjTkCrykMRqNMVaiJTcAV1X6anE5rUgqlGJCfLrLdQ3FOpO6bm
TlBUerUGvvdHHX7SI8ErUfCHzw2Nv4pJWD/gaB+z6X2G1I3r+WkuUUHxOOWL
Rzac6GbWNM3J+CXo9cyKWM1cCc3Uk2XrHL0Bqz7eiwi+fRv9YPInx3LSBZKi
oRQWDg/QH0Mv3D1Xn0FAt//xlX8y1mc0GPr7pf8M6Qovm6nOoYa6rKeRW/5c
6GxtbpD7DTH4zpfZXeg8QC/SYs7Ob+vAaNOQYdMOS3TEtvX9t1R3SLThgR/s
+QiNyrfMdb/2ElL4L0ulsKVjfbsft3qamHHQ1hi71QIJGsiu5pzyRes8itPN
QLtpKw5LDJ2idYMgujHfee3Haz3YTbYbHFJihYpDch+jrnvQNeOxld5sCPrM
GYb7nMbC10l+rI3M77F+0VlnjqAGDqph1lWSEEcDm3rdf934dR7V7z89MRaS
gP1H1IRVvsroctPxkVeLPhQUsSCJZ7BBH2SFurA7eMGW07UwxpowlKpiuiOC
Mh6Ga3f9uGebhfUPheWDnt/HQWNTyORfb9LAFZq3arKe3KiRwM/7z7YkYHu3
sFtBgApaomYeV4VvCPHaw/g642zRIMnryrh8PlCFUnsmqDYCbRHI+GtpnAhF
b6RJtG7nYH1Vkw9GG7k4aPxN/qgSI1oo7LCTGEHKg4qTmNhVt0pCrkmf4cSn
qij6dOzQw9gIpt3mZXp7wR5NsTkddyTyg+uuWU9kViLRGrTgxGYsCfq5eO7p
/PiA9VNDmURMBnHQgFesKTPVtNBMIvY5JocHJcXUshO+k4IkjAuF4zlXUXH6
G6b3a42h0GDazWfjDijV8uDbYWr/f3lnziNq8BQdsJn7aJ2TDM8YYgSNyT5h
/cVPkfhfCHFRkmtLPmLsdPBLv++C+1VetIG+0i01+DK0cHQp/NujhoZG9bJ8
kjKFqWQYSZniu6j4x+gxHNVA+CTLtefNejQ6wS/DkV2TBg0aX/TPvCvG+lLD
O6Nc0riogU8CQ0IoHaQoKLvLNc+LWt/2Scp1lIZKV0J3JQnV0Xz+n1I7jWZw
1nBBWyPDGV3Zl26tyHwIv1T5km9/fYlq7iWxBsZkQEY/0wO376VYPxLfvizC
Dhf15GAJpF2gg+fYDL/dfMGHFnpmaGubysCTgh0qDk0NtGnPHyg73IJcHWIW
wWWuKO1c8tq6RDBcEeN2fbwdi+IIcGUZuGfCdBq/S3ikFf/PB9EfTxfjcVGo
7J+Tp0sPFcJt+wVl+dFbUrera3Vk4c7I80WOFE2UrtH9YyT3bSj/ebKicN4d
3Z2mZ109CIEpVzhwg3JfoUQxPbk6QdkwnoTnz4uwKqwveEvVWqcZF12YKH1t
8pke3r66Lh8/y4/eJVHzYNGRg38USlfyj7TQR5+Mppq3LWBwNMHBr4x7aMTl
w6ZZ3zAIO/gNkh8loPPuQ8bFaC7caG9k8VOpwfpej8vkyjdxUYWDVm1OHgbY
1UDYlJMogCaOe4UnGMvDqDnuA1mXG2hCWdiDs8k7sOFSS6/ulCfqQ0X9N5Uq
Al6jWndpCX6NsuoUS5Iq5UP5M0xOsW4d1kdLuGmYefBQ4xcVXafPGeBNw5IL
TlqC6JKAv6+pvQK0ms+4p7ykjXJM5Ullb1lBX7U3O7Iy3ihnzzz1WutjKLiN
3qArfIOW5H0O0NwrgDQdkpe7SpH/59uv2PmH+ngoTA2i3N9ngOU2x2LzeEJo
929rhZdBVyDPk/eKKgG6aGGvA7k5gQ1kO4Hn8zN8UAEX/uxvaVHwA4ujZzdp
CvonaaX/y3YRrExx2w363Ij1LYhxkKkQPLSXn/scmQMjFNHejb+ACKGfHlcr
2KcrwlW9B863n+uh31uDTC7z2sKkqsdRTdx+qLp8jpjym6dQVKcyyOdtGio1
Zij0hKMU9iopLp372oz1P0p6vL5WgoeKCL+bvfyDEeZ5f2RQCL6AWvI+MCDt
UII6fpA33k4fzeyoTmzRs4MnLIpXimvvoy+XSG55V0fD8bZPOBNiGeiVGucJ
8YUyWPAh+lEEYxvW37P47VYwgYdez9/z91c9B8tk+D15VIXRHrULfXmHGMiW
u8oepWaAVppc6c1+YQ/rVoRDc10D0CupjaS5Jy/gy5f7n7RL3qOP/ed50scr
4NMadlW8tA6sf/WpthoNNT4qnCU88KP8HFzc9bq7QnYRbQr5pSjLBuFIDGnQ
AzFD1L/n50evUQeoE9kttSL3ACXj+NOSKhMLhSLejXDoZaGMdqKSBrjVsCos
TUnB8SvWj6+oY/fF4KO9THJbmvxMcJsho+b9v//nsX3txtZ6CEk13tdX8Bih
EXJhwb2ydyFv0TFP3/kglHKH87ZJRBy0dpWNj6LNQU9+SPJQm9ZA22ab7huB
PVh/auLi9ogbPipNfH5kKIkJOmx85r2RK4LisE90nbNXhpoe+SX+XMYorcdF
X/tcJyhfFupXzh+MSv044tRdfAUJiPKPZ3dz0StVe1Wj01/gLf/WCNfVXqwv
R57yFZOGj3p5Tkc8ImeGZH877XcCLqH+GNUFZVoVyHBLL5xKwARNyc5PGhdw
gfaqN54GZ4egjaYV83MOCdCnQ+2sHC8ftZ9gccfLb4AVOz++433t/3++yZBl
ZX3DR2+ZBO8qhTDDS3cnMHn6oqjz3tKUZZMKFJc1aWyQMUXJ1Y/WFmtcIf+4
5Nn/eqr/dyYQOIDjuttKvjxR6lm+9OVO91CT+TL6Qn08homoKJazMHXNt9ZR
tri0NNu5yy2sSE7UJOrmS2IjfTLzVKfO5vtWedQ0ukJdj0ePvlw/7R94/fZ+
3iu6+Vg+wm4r+CwBtrTXvMS7Du8WOD9bMoRgS7tprxrsN/p98bwTph+/xQW3
Z11WzJKgUElMS3ZxRelagkLA9Qe3TYnRfbujMYEmvwRxaTD5q/uhxLnTOKyw
zHjQcAHK/eZex5TcRFr1h+0FWZ1wTHC95cnyIaO/5uzE7tQNBEwS0zcsSl0J
0zLHEelCCjrpeDcee9DAvpVVdiGTgSf2so6FWXLAR5102sPnDG575HyEfLoU
+tvGBj4sq0fVQ5eBMloXhMtSa1S/jxj91NYoZ81+AkrGM6asxlfCUFjMeA2X
glTB+4173tNgJGEgILpmP1b1O7SMvueA92KbB1GFAmwRV/rFHS2D4Dub/e9m
NOBTfog1kdoN4X+z/CPhidG/86LbxDufgKLmrEwPpi0MTZHblK8pGNc1MuOk
CICKH51yWPoYdJ5VWXobjkKxmeLCjfk8/Eg+w1nLL4fsesovjjON6M0tf6sK
vw9bD8ss2qijRt9siddwmZyAXiax3WnDtuCGq7fMJ7jh4VOhumRBIFiwrZ+Z
kmNR45JBUeh/Bv+B7JTlPBFqghe5+jVVQHqDjGMQ3sLIJn2tRclDKBN5c+mb
x4w+Y4tUZjJJwFoVSdcZ8TXY/+R+kTo35OnJ1p77gmB86fPk0hwm8mynKtRv
0iG1gLH6pHk+Ss6NWfURKoEcXqx+5nsb33ZPH/exfgT3vBxfJX9+bvSrD9oI
D5KIqCPKml177WBHK7+hb687Gpik6YtkOnzRjF77afQAxnQWNk18cwwifU/a
65p+Qyn1atEP/lXgzLztO7+sFbPJAbkzHf+Ar4Ki5L/RG/1P4lzmwyAiGnD1
vuad9nBn+6fDJzXuWFzJNleYBoPdpZ2qF9I45OYkVqc6HgfrhtoK5/SzOHfQ
ZplUcgXam3OT6BYKHLcy5+fsUcPsAlOhiZnB6Ie2v6O6ZhLx8mxSe0SPPcjl
jUGM3R64tnKTV92rYJDnXaEJE+JRUkq5qt6TCYZ3l2eO7PgD1bkBnMRPV8GO
lBU75dSOkxMxrh0vNBDCj3ariJo0+hcN8ZbF1UQkXRNPmIU6QOU+Jxe2xgNf
SfbzRJodEHZP2PNgXQKqz/UPigq4wByJ6GWWi1G7oPFlXlY1OIz2ytxTOnCo
KCPkgKQfONWXAxnaf42+YalaPzdAxHCNWKvtcQBloH6uca8nps/Hk1IwBPjX
N5UOTSdgmF1lutkwD9YLxXpJ1TlU2rRkbbWugSpp15RPCmLrOtvYevYgvNzV
YZ9+fsroe2yD9ljiQgzgJhcqw1bBEUVK/ladJwrFf4o5t0Ih7Ti99imycHmX
9n6vaxY8XnJJmtZciLXJHzkdd68DVbt+l+PX3+bp4unfs4YhX/Bk4/b7M0b/
FFtW1Om5EL+UrLFSqVfBh7Gge4tYVAyMciit/2snxPfQuxaXJuJcaHQI43w2
jOgiRDmDRcjS98sZojqgnPer+85OiUfHBdRdZ7QQlFnLkh16h/8Dpfxqqw==

    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.930909926503029*^9, 3.930909958018487*^9}, 
   3.930909997789819*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"20f65e14-0e42-4905-b33f-9c4f9b42a9d3"],

Cell[BoxData[
 RowBox[{"0.5263641619698364`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.6489888202537263`", " ", "x"}], "-", 
  RowBox[{"0.7263670273250531`", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"0.07260760262798957`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"0.2290155946479804`", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  RowBox[{"0.007585302610595606`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"0.06694085153147614`", " ", 
   SuperscriptBox["x", "6"]}], "-", 
  RowBox[{"0.010610969351428846`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"0.010360602901249858`", " ", 
   SuperscriptBox["x", "8"]}], "+", 
  RowBox[{"0.0024378007803414962`", " ", 
   SuperscriptBox["x", "9"]}], "-", 
  RowBox[{"0.000575171049031531`", " ", 
   SuperscriptBox["x", "10"]}], "-", 
  RowBox[{"0.0001594031523295041`", " ", 
   SuperscriptBox["x", "11"]}]}]], "Output",
 CellChangeTimes->{{3.930909926503029*^9, 3.930909958018487*^9}, 
   3.9309099977958193`*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"1ca3359e-1e36-4a0c-933d-734e92ca5afe"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
IUW8nd49y9ssQObSzHI3JEuR/wHJIZVa
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwV2Hk8VG0UB3CUrZClhFLZlxCFsh4kCdmKJJWyJZIiKVKIClnKi+w7iVah
xEy0KopE2c1GssyMfYj3+Mvn+zFz597nPvd3zrlSp8/be3CwsbEx2dnYVv7W
qArfatDkInKcIzqFlQgSuzJfcfVpcBELXX5LFBYKEhfWnoqeV+MiCjjYWXzO
EyQajjyJUlfiIjo+zl0QyhQkvis+eDNbkotoIbdmPDNRkPh9653wq1xcxNuh
1moZVwSJf4TYQnf+4iSKyg2Vm1sKEiVmxvzzQziJb9L5SXnd64g3H4v/m3i+
mujyMiZqt6kA0XNTulXM7CqiVxLjqGYTH3HfQsPDVlhFvFpWtHzp2Fqiyhe9
h9HBHMRL2foXdrfyEmNteH1v17MTswMZI9ZuPERGo3zr7BQb0Uzhu/fLTi6i
w6PRvet3sBGtk3YPlhziJLrGC0yxRpcID72WNvGMrCLKFZMLS13+EY5qsiV1
n+Ygdsuf7pmgLRC4PTdPuc6yEWPvauxICmYRXHiitWaVlwkW7bkf+P/OEZrG
5LP1di4S5iNfUWSCZwmT3Vo2eYHzhGqRi/s30KYJ/feE/7sQPUPwvxPy3vXY
FIHuIj6f+2ySIH5GrWnfXyZBl6/gvJI4g9AqHy7C5cIgPAABEr18lMDMZH0g
tEwQ7IU0lm4UDBFcy3fSlUpGCS1jMoPsh0mExlt8tubxfwicpM1XryV3Ebi0
dOoelNEIh7givxvfbSWcyS96kXebTGjif/T6RwiRUDboXt2TMUBojfoSc9TX
ntDwO5acGtKNxwkc54msg3P+zWfJJj8JG5Mt2T/fbIanDt7iyn9aCO79nIud
Y+2w3KQd4XWogZDXXPC1/mMXJEua1i5INRCWjGKC6D1doOhvN5VAf0tI2Qwa
65ldYLfB17Pm7lvC+KeEdo3N3VBwMs+C9xORMG5TU/n+fDckDG+Ud7xST6ig
P2O3Wd8D2/Qa9vda1hAsxAyukux74SZRVbRzsITwoeyBMauoH6wJ1XWBSiWE
Y7t5g0Kq+kGs3thD+EIx4W1Q2TX6h36oqHWoPMhWRHBebuepGuqHjqpr9u+2
5BN0c5QTj6wfAGvnDEm36jRCrkLjvMrhAVDXeTF245kzIf6Us6rVtwEovZ82
+1hJlbDmO39DU8cAmK1v3rHB6xBIOOjb7O0bgPNOh36MnPSHSpdyB+mxAfiP
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
f9inypYIpWK95dV/bLzvH0g/sUzOSKPB/yaTvys=
        "]]},
      Annotation[#, "Charting`Private`Tag$777985#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: b(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.7757617509752777`, 1.829408435012814}, {-4.165221158978736, 
   1.829408435012814}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.930909926503029*^9, 3.930909958018487*^9}, 
   3.9309099978888235`*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"2cc7ea02-0776-404e-b8d9-8b287acb0ee6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", "deal"}], 
    " ", "with", " ", "parameter", " ", 
    RowBox[{"\[Mu]", " ", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "*", "*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**"}]}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Combine", " ", "maValuesList", " ", "and", " ", "AparameterList", " ", 
    "into", " ", "a", " ", "list", " ", "of", " ", "points"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataParameter\[Mu]", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", "maValuesList", "]"}], ",", 
        "\[Mu]parameterList"}], "}"}], "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Use", " ", "FindFormula", " ", "to", " ", "find", " ", "a", " ", 
     "suitable", " ", "model", " ", "for", " ", "the", " ", "data"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"polyMod\[Mu]", "=", 
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"dataParameter\[Mu]", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"x", "^", "i"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], ",", "x"}], 
     "]"}]}], "\n", 
   RowBox[{"polyMod\[Mu]", "[", "\"\<BestFit\>\"", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", "to", " ", "proper", " ", "work", 
     " ", "with", " ", 
     RowBox[{"plot", " ", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ymin", " ", "=", " ", 
     RowBox[{"Min", "[", "dataParameter\[Mu]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"Log", "[", "maValuesList", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ymax", " ", "=", " ", 
    RowBox[{"Max", "[", "dataParameter\[Mu]", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"input", "=", 
     RowBox[{"Log", "[", "maValuesList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**"}], "*", " ", 
     RowBox[{"plotting", " ", "**", "**", "**"}], "*"}], "*)"}], "\n", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"dataParameter\[Mu]", ",", 
       RowBox[{"PlotStyle", "->", "Black"}], ",", " ", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<parameter: \[Mu](\!\(\*SubscriptBox[\(m\), \(a\)]\))\>\"", 
            ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<log(\!\(\*SubscriptBox[\(m\), \(a\)]\)) [eV]\>\"", ",", 
            "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"LabelStyle", "->", "22"}], ",", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"polyMod\[Mu]", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Min", "@", "input"}], ",", 
         RowBox[{"Max", "@", "input"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Green"}]}], "]"}]}], "\[IndentingNewLine]",
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9309102372896056`*^9, 3.9309102374522996`*^9}, {
  3.930910353681342*^9, 3.9309103537866435`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"82c8a92a-db66-453f-b7bb-aeb405175e64"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.5754428225906022`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.17462641335127263`", " ", "x"}], "+", 
       RowBox[{"0.15701593053371707`", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"0.2882671558663236`", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"0.11730355291075392`", " ", 
        SuperscriptBox["x", "4"]}], "+", 
       RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], "+", 
       RowBox[{"0.002818829587689294`", " ", 
        SuperscriptBox["x", "10"]}], "+", 
       RowBox[{"0.0006214000379479234`", " ", 
        SuperscriptBox["x", "11"]}], "-", 
       RowBox[{"0.00004830699824151045`", " ", 
        SuperscriptBox["x", "12"]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {0.5754428225906022, -0.17462641335127263`, 
     0.15701593053371707`, -0.2882671558663236, 0.11730355291075392`, 
     0.011439625706163538`, 
     0.04337223627288399, -0.007419219500025678, -0.01708383701356905, \
-0.003246386510403799, 0.002818829587689294, 
     0.0006214000379479234, -0.00004830699824151045}, {{$CellContext`x}, {
      1, $CellContext`x, $CellContext`x^2, $CellContext`x^3, \
$CellContext`x^4, $CellContext`x^5, $CellContext`x^6, $CellContext`x^7, \
$CellContext`x^8, $CellContext`x^9, $CellContext`x^10, $CellContext`x^11, \
$CellContext`x^12}}, {0, 0}}, CompressedData["
1:eJxTTMoPSmViYGBgBOITDDDwwX6UHqVH6VF6lB6lSaEBV3fvLQ==
    "], CompressedData["
1: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

    "], CompressedData["
1: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
OpPdvqPZ7tWS9zdZtP8Bm8h37w==
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.9309100298729167`*^9, 3.930910240564248*^9, 
  3.9309103551758475`*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"98e861da-b711-42c6-b902-65c023d674dd"],

Cell[BoxData[
 RowBox[{"0.5754428225906022`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.17462641335127263`", " ", "x"}], "+", 
  RowBox[{"0.15701593053371707`", " ", 
   SuperscriptBox["x", "2"]}], "-", 
  RowBox[{"0.2882671558663236`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"0.11730355291075392`", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  RowBox[{"0.011439625706163538`", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"0.04337223627288399`", " ", 
   SuperscriptBox["x", "6"]}], "-", 
  RowBox[{"0.007419219500025678`", " ", 
   SuperscriptBox["x", "7"]}], "-", 
  RowBox[{"0.01708383701356905`", " ", 
   SuperscriptBox["x", "8"]}], "-", 
  RowBox[{"0.003246386510403799`", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  RowBox[{"0.002818829587689294`", " ", 
   SuperscriptBox["x", "10"]}], "+", 
  RowBox[{"0.0006214000379479234`", " ", 
   SuperscriptBox["x", "11"]}], "-", 
  RowBox[{"0.00004830699824151045`", " ", 
   SuperscriptBox["x", "12"]}]}]], "Output",
 CellChangeTimes->{3.9309100298729167`*^9, 3.930910240564248*^9, 
  3.9309103551818476`*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"e21d84f7-1615-4cd4-84ae-5053f778341b"],

Cell[BoxData["34.20694187422094`"], "Output",
 CellChangeTimes->{3.9309100298729167`*^9, 3.930910240564248*^9, 
  3.9309103551868477`*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"190b994c-a1d7-4c6e-98c4-018c6c09f4b9"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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

      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
/7u9MtKFPDdcTIhTGoHKI+uypO51oReTP3iQyAjwg1Wn/Y9OZKCwxXxhahhy
hOqMqj1/ot61odvD3wxDQqE1d7TFT2TjxH/hcsEwhFi1N9to/URZJeZPg18O
g01Un8vvlQ7E6iI9CM8Yhpl59oXZFx1of3/Py08Jw2DSs/el+mg7omvnDI0F
DsN7lzNSGmNtyGWLQfmancNwJ379hs6yNjTcUj2nrjMMHnXveCNutyHxv5b6
DtuHYY3W4nTr1jY0ff/if4VKnDhvdFOQayuKCKRzJ4sPA29JxqWKhhaUtktf
XGRpCNw2trdaZzYjZpxzKrl2CFa/Gdw6fbgevRSu2HTPbQhSZC2qmAr1qBLP
TnziMgTqFx3nk2fqkKz0858FTkPguCng1KfEOpR6Xr20024Icr1f2Ao0E1Hz
Rhd/W9MhSB7drOp6tRa5FGrs+KQxBPJG9VZ/DnxCN8+OZoevDsJtopbE74FX
6IejnNH3d4NwCJXXXN72CiWK0JfT3g6CZK2pn2hQPtIPyvY6XTQIb6tcSg8S
8tARfhtugVeD0F123emzXA7Kd66L8s7k3PdIlz1Rnoa0WaETromDoGtYMhn5
wQOxtGWeegUMAi3BaS0yyIc/go3RetqDoFC2S5m5vh5OnNWi55QMwJ2oA47h
5a2QolVETrMegHjhSceUR11wtuEKdqevHyR6Sv1XvpBhe8aFw6On+4F269wO
Lpt+MA6Rpqwb6IOK38av7AKG4MDBgIbu1l544VEl7OdBhdL+LLuRhj+QIpIG
Xw3H4FIWf/+puh7w59/1N+TIBLB0PwhOVFI4Z2aH5IkJqJCad3Ysp8B997XV
lecn4J39QOqnEgqUF5Lur9yZgDrui6KJbyjAd/DG3pjSCSihVlgdyqRA3oMv
iY9FJiHkvXGG/i0KDEp76Je2cJ6TmQPfXh2gQIh5g5zr70m4Y3jzoZM1BdYF
aArQBychmbqnctWCAno1K3+MGJPwqvjfLp99FIj0zr3boD4FIrdqdU31KLD1
5QT5550pYGfzfQrdTAEvrZtRNJiG8TlehZ8jZJhxbXiQYDcN4d8GBhIHyRAd
uTZHzX0a7n1632HXR4bCzuT6o8HTULWJYtOFk2HpajbPt5fTUMN/YULgOxls
hvrNOnhnYB4pHhUtIcOwDnfj6zMzEF7gwv86mgz/WSgfXLowA7e0P+f8iCRD
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
1Tj8D1ffVdg=
        "]]},
      Annotation[#, "Charting`Private`Tag$784967#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"parameter: \[Mu](\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\))\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"log(\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)) [eV]\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->700,
  LabelStyle->22,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.7757617509752777`, 
   1.829408435012814}, {-2.7757617509752777`, 34.20694187422094}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9309100298729167`*^9, 3.930910240564248*^9, 
  3.930910355292852*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"228c538c-2eff-4939-8699-62247ebaa088"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second interpolation", "Section",
 CellChangeTimes->{{3.9309103723744564`*^9, 
  3.930910375896345*^9}},ExpressionUUID->"777acf2b-4021-49ee-bd85-\
d54c174f01af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**"}], "*", " ", "Select", " ", "distribution",
     " ", "that", " ", "we", " ", "already", " ", "have"}], " ", 
   "**********)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NumberOfDist", " ", "=", " ", "1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SelectedDist", " ", "=", " ", 
     RowBox[{"AxDistFunctionList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SelectedMass", " ", "=", " ", 
     RowBox[{"maValuesList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Numerical", " ", "Solution",
      " ", "in", " ", "second", " ", 
     RowBox[{"interpolation", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Avalue", " ", "=", " ", 
     RowBox[{"polyModA", "[", 
      RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", GridBox[{
     {
      RowBox[{
       RowBox[{"bvalue", " ", "=", " ", 
        RowBox[{"polyModb", "[", 
         RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}]},
     {
      RowBox[{
       RowBox[{"\[Mu]value", " ", "=", " ", 
        RowBox[{"polyMod\[Mu]", "[", 
         RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}]}
    }], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Compute", " ", "the", " ", 
     "integral", " ", "of", " ", "the", " ", "selected", " ", 
     RowBox[{"distributions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"upperLimit", "=", "13"}], ";"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<A = Int of q^3 f(q) (MAXIM): \>\"", ",", 
     RowBox[{"integralF", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"SelectedDist", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<B = Int of x^2(Exp[A\!\(\*SqrtBox[\(1 + \*SuperscriptBox[\(x\), \
\(2\)]\)]\)-b]+\[Mu]\!\(\*SuperscriptBox[\()\), \(-1\)]\): \>\"", ",", 
     RowBox[{"integralFit", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"fApprox", "[", 
         RowBox[{"x", ",", "Avalue", ",", "bvalue", ",", "\[Mu]value"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<|A-B| / A = \>\"", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"integralF", " ", "-", "integralFit"}], "]"}], "/", " ", 
       "integralF"}], " ", "*", "100"}], ",", " ", "\"\< %\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Plot", " ", "distribution", 
     " ", "and", " ", 
     RowBox[{"fit", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedDist", "[", "x", "]"}], ",", " ", 
       RowBox[{"fApprox", "[", 
        RowBox[{"x", ",", "Avalue", ",", "bvalue", ",", "\[Mu]value"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "11"}], "}"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<(k/T\!\(\*SuperscriptBox[\()\), \
\(3\)]\)\!\(\*SubscriptBox[\(f\), \(p\)]\)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k/T\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", "22"}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "2"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Numerical solution\>\"", ",", 
        "\"\<fit in second interpolation\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{
      "\"\<Distribution for \!\(\*SubscriptBox[\(m\), \(a\)]\): \>\"", "  ", "<>",
        " ", 
       RowBox[{"ToString", "[", "SelectedMass", "]"}], " ", "<>", " ", 
       "\"\< eV. Dist. i = \>\"", " ", "<>", " ", 
       RowBox[{"ToString", " ", "[", "NumberOfDist", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9309103994091406`*^9, 3.9309104267133827`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"02914259-f6a8-4d7a-b7db-7091a102bc7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "Null", "}"}], ",", 
   RowBox[{"{", "Null", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9309103823464622`*^9, 3.930910427508245*^9}},
 CellLabel->
  "Out[259]=",ExpressionUUID->"0013a56f-5e26-40c8-ba74-848a45d6845d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"A = Int of q^3 f(q) (MAXIM): \"\>", "\[InvisibleSpace]", 
   "5.434560674360839`"}],
  SequenceForm["A = Int of q^3 f(q) (MAXIM): ", 5.434560674360839],
  Editable->False]], "Print",
 CellChangeTimes->{{3.930910382449462*^9, 3.930910427580245*^9}},
 CellLabel->
  "During evaluation of \
In[255]:=",ExpressionUUID->"99016cda-12cb-4cb1-bac9-4668301d9ffb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"B = Int of x^2(Exp[A\\!\\(\\*SqrtBox[\\(1 + \\*SuperscriptBox[\
\\(x\\), \\(2\\)]\\)]\\)-b]+\[Mu]\\!\\(\\*SuperscriptBox[\\()\\), \
\\(-1\\)]\\): \"\>", "\[InvisibleSpace]", "5.465725037733087`"}],
  SequenceForm[
  "B = Int of x^2(Exp[A\!\(\*SqrtBox[\(1 + \*SuperscriptBox[\(x\), \
\(2\)]\)]\)-b]+\[Mu]\!\(\*SuperscriptBox[\()\), \(-1\)]\): ", 
   5.465725037733087],
  Editable->False]], "Print",
 CellChangeTimes->{{3.930910382449462*^9, 3.930910427585245*^9}},
 CellLabel->
  "During evaluation of \
In[255]:=",ExpressionUUID->"375a2511-85d9-4c7c-9251-904494785f61"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"|A-B| / A = \"\>", "\[InvisibleSpace]", "0.5734477033125316`", 
   "\[InvisibleSpace]", "\<\" %\"\>"}],
  SequenceForm["|A-B| / A = ", 0.5734477033125316, " %"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.930910382449462*^9, 3.9309104275922456`*^9}},
 CellLabel->
  "During evaluation of \
In[255]:=",ExpressionUUID->"402cd21a-f6ba-45ed-8c8d-75a957a13d88"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$789448#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
t3k=
          "]]}, Annotation[#, "Charting`Private`Tag$789448#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"(k/T\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\\!\\(\\*SubscriptBox[\\(f\\), \\(p\\)]\\)\"", HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox["\"k/T\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Directive[
       GrayLevel[0], 
       Thickness[Large]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, LabelStyle -> 22, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Distribution for \\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\): \
6.2302 eV. Dist. i = 1\"", TraditionalForm], 
     PlotRange -> {{0, 11}, {-1.47491010206255*^-8, 1.2222876523997428`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Numerical solution\"", "\"fit in second interpolation\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 22, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "22"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9309103823464622`*^9, 3.930910427658247*^9}},
 CellLabel->
  "Out[264]=",ExpressionUUID->"e8425bd8-1143-4846-92a9-dce24d7efa4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison to Bose-Einstein and Boltzmann distribution", "Section",
 CellChangeTimes->{
  3.9309104364298587`*^9},ExpressionUUID->"6077d51f-944b-40ea-b33f-\
cc3b6e4191d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**"}], "*", " ", "Select", " ", "distribution",
     " ", "that", " ", "we", " ", "already", " ", "have"}], " ", 
   "**********)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NumberOfDist", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SelectedDist", "=", 
     RowBox[{"AxDistFunctionList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SelectedMass", "=", 
     RowBox[{"maValuesList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SelectedFa", " ", "=", " ", 
     RowBox[{"faValuesList", "[", 
      RowBox[{"[", "NumberOfDist", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<f_a: \>\"", ",", " ", "SelectedFa", ",", " ", "\"\< GeV\>\""}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Numerical", " ", "Solution",
      " ", "in", " ", "second", " ", 
     RowBox[{"interpolation", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Avalue", " ", "=", " ", 
     RowBox[{"polyModA", "[", 
      RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", GridBox[{
     {
      RowBox[{
       RowBox[{"bvalue", " ", "=", " ", 
        RowBox[{"polyModb", "[", 
         RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}]},
     {
      RowBox[{
       RowBox[{"\[Mu]value", " ", "=", " ", 
        RowBox[{"polyMod\[Mu]", "[", 
         RowBox[{"Log", "[", "SelectedMass", "]"}], "]"}]}], ";"}]}
    }], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Define", " ", "the", " ", 
     "distribution", " ", 
     RowBox[{"functions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"fBoltzmann", "[", 
     RowBox[{"C_", ",", "x_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "^", "3"}], " ", "C", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", " ", "x"}], "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"fEinstein", "[", 
     RowBox[{"C_", ",", "x_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "^", "3"}], " ", "C", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Compute", " ", "the", " ", 
     "integral", " ", "of", " ", "the", " ", "selected", " ", 
     RowBox[{"distribution", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"upperLimit", "=", "13"}], ";"}], "\n", 
   RowBox[{"integralF", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"SelectedDist", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Define", " ", "the", " ", 
     "numerical", " ", "integrals", " ", "for", " ", "the", " ", "other", " ", 
     RowBox[{"functions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralFBoltzmann", "[", "C_", "]"}], ":=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"fBoltzmann", "[", 
       RowBox[{"C", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"integralFEinstein", "[", "C_", "]"}], ":=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"fEinstein", "[", 
       RowBox[{"C", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Solve", " ", "for", " ", 
     "C", " ", "using", " ", 
     RowBox[{"FindRoot", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"solBoltzmann", "=", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"integralF", "==", 
       RowBox[{"integralFBoltzmann", "[", "C", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"C", ",", "1"}], "}"}]}], "]"}]}], "\n", 
   RowBox[{"solEinstein", "=", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"integralF", "==", 
       RowBox[{"integralFEinstein", "[", "C", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"C", ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Display", " ", "the", " ", 
     RowBox[{"solutions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", "solBoltzmann", "\n", "solEinstein", 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", "Verify", " ", "the", " ", 
     RowBox[{"solutions", " ", "**", "**", "**", "**"}], "*"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"fBoltzmann", "[", 
      RowBox[{
       RowBox[{"C", "/.", " ", "solBoltzmann"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}], "\n", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"fEinstein", "[", 
      RowBox[{
       RowBox[{"C", "/.", " ", "solEinstein"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "upperLimit"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**"}], "*", " ", 
     RowBox[{"Plot", ":", " ", 
      RowBox[{
       RowBox[{"Compare", " ", "fit", " ", "to", " ", "Bose"}], "-", 
       RowBox[{"Eintesin", " ", "and", " ", "Maxwell"}], "-", 
       RowBox[{"Boltzmann", " ", 
        RowBox[{"distribution", " ", "**", "**", "**", "**"}], "*"}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelectedDist", "[", "x", "]"}], ",", " ", 
       RowBox[{"fApprox", "[", 
        RowBox[{"x", ",", "Avalue", ",", "bvalue", ",", "\[Mu]value"}], "]"}],
        ",", " ", "\[IndentingNewLine]", 
       RowBox[{"fBoltzmann", "[", 
        RowBox[{
         RowBox[{"C", "/.", " ", "solBoltzmann"}], ",", " ", "x"}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"fEinstein", "[", 
        RowBox[{
         RowBox[{"C", "/.", " ", "solEinstein"}], ",", " ", "x"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "11"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<(k/T\!\(\*SuperscriptBox[\()\), \
\(3\)]\)\!\(\*SubscriptBox[\(f\), \(p\)]\)\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<k/T\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "->", "22"}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "1"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "2"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Green", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "3"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Numerical solution\>\"", ",", 
        "\"\<fit in second interpolation\>\"", ",", " ", 
        "\"\<M-B distribution\>\"", ",", " ", "\"\<B-E distribution\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{
      "\"\<Distribution for \!\(\*SubscriptBox[\(m\), \(a\)]\): \>\"", "  ", "<>",
        " ", 
       RowBox[{"ToString", "[", "SelectedMass", "]"}], " ", "<>", " ", 
       "\"\< eV. Dist. i = \>\"", " ", "<>", " ", 
       RowBox[{"ToString", " ", "[", "NumberOfDist", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}]}], "]"}]}]}]], "Input",
 CellLabel->
  "In[265]:=",ExpressionUUID->"c2c2be0c-3775-4e05-816d-0e65a97d4aa9"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"faValuesList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 268, 1, 25597408910006999076, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.930910450423852*^9},
 CellLabel->
  "During evaluation of \
In[265]:=",ExpressionUUID->"bf1fda13-9461-46f1-aff8-8a3c7840960f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"f_a: \"\>", "\[InvisibleSpace]", 
   RowBox[{
   "faValuesList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[InvisibleSpace]", "\<\" GeV\"\>"}],
  SequenceForm["f_a: ", 
   Part[$CellContext`faValuesList, 1], " GeV"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9309104504488516`*^9},
 CellLabel->
  "During evaluation of \
In[265]:=",ExpressionUUID->"2b69e74a-7e55-4741-be35-73796e501c96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "Null", "}"}], ",", 
   RowBox[{"{", "Null", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9309104504558516`*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"e25b8615-524e-4a61-a9e9-2b116107cb41"],

Cell[BoxData["5.434560674360839`"], "Output",
 CellChangeTimes->{3.9309104505778522`*^9},
 CellLabel->
  "Out[275]=",ExpressionUUID->"bc3efb51-c2c3-413a-89ff-d2f0b38f32c1"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"-\\\", \\\"x\\\"}]], \\\" \
\\\", SuperscriptBox[\\\"x\\\", \\\"3\\\"]}]\\) has evaluated to \
non-numerical values for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 278, 2, 
   25597408910006999076, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.930910450583851*^9},
 CellLabel->
  "During evaluation of \
In[265]:=",ExpressionUUID->"48c6e652-2971-48d8-8cbd-bdc86ab86806"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"-\\\", \\\"x\\\"}]], \\\" \
\\\", SuperscriptBox[\\\"x\\\", \\\"3\\\"]}]\\) has evaluated to \
non-numerical values for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 278, 3, 
   25597408910006999076, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.930910450594851*^9},
 CellLabel->
  "During evaluation of \
In[265]:=",ExpressionUUID->"94a20544-a4f1-4b75-9278-c9a1a1092e1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.9067124322172261`"}], "}"}]], "Output",
 CellChangeTimes->{3.930910450603852*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"fccd19f5-9683-4095-a2f7-da88866f65ad"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"x\\\", \\\"3\\\"]}], RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"+\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \\\"x\\\"]}]]\
\\) has evaluated to non-numerical values for all sampling points in the \
region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 
   2, 279, 4, 25597408910006999076, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.930910450608853*^9},
 CellLabel->
  "During evaluation of \
In[265]:=",ExpressionUUID->"bc9d4885-b42c-4a85-ac7e-3d9ad9f9b313"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*FractionBox[RowBox[{\\\"C\\\", \\\" \\\", \
SuperscriptBox[\\\"x\\\", \\\"3\\\"]}], RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"+\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \\\"x\\\"]}]]\
\\) has evaluated to non-numerical values for all sampling points in the \
region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"13\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 
   2, 279, 5, 25597408910006999076, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.930910450619852*^9},
 CellLabel->
  "During evaluation of \
In[265]:=",ExpressionUUID->"2d6afa22-02be-4f78-b3cd-d8de111e2f43"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.8376794468910609`"}], "}"}]], "Output",
 CellChangeTimes->{3.930910450659852*^9},
 CellLabel->
  "Out[279]=",ExpressionUUID->"6eac6ba4-9643-406b-9546-c8952576e13c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.9067124322172261`"}], "}"}]], "Output",
 CellChangeTimes->{3.930910450664851*^9},
 CellLabel->
  "Out[280]=",ExpressionUUID->"c12b43f3-11fd-4cdc-b498-48d8b9c85f15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"C", "\[Rule]", "0.8376794468910609`"}], "}"}]], "Output",
 CellChangeTimes->{3.9309104506698513`*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"923e352b-8fd5-48f2-a0a7-4c7911250e93"],

Cell[BoxData["5.434560674360839`"], "Output",
 CellChangeTimes->{3.930910450674853*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"e3dc1870-8f89-4586-9a9c-6a91e92ec58f"],

Cell[BoxData["5.434560674360838`"], "Output",
 CellChangeTimes->{3.930910450679851*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"cfadc6f1-e063-4984-9959-c8629d690b4a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$790691#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.005], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
t3k=
          "]]}, Annotation[#, "Charting`Private`Tag$790691#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$790691#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[0.560181, 0.691569, 0.194885]], 
         LineBox[CompressedData["
1:eJwV1nk4VV0XAPB7uQNXKXNJZLhCiEIR1pIhzYNCSUX0Kn2RiEIokgx58d4M
RSJUSiJERGSqSIZUSMiQ8R5DyPCd/jrP73n2Xs9e+6y1zpG1dzngyEOhUBSp
FMrfp1lo0prTshGGhsEnyn+UrzVQlFLQi05xBp0n3vlPproN+77u/22Z4g3C
b0M68od5ob2xWsmtMBBWT3t4JdqJw7bC/ubNKaFQPSB/zrJNHqz3BZYtmv4L
8td913+YVYdwY9EVJwtj4P2LBj8/Ex14o5N6rlI9FlY+i7nbZmQIv5W13iqn
JEDoj8lK4qUxqK6uWBUukQQL7srnAobMQYNPRXfaNBnc8/9Hrc/fA7VUtx5l
SgooGt48ciP8ADj+eXnLpjAVNkfYSJawLIEySd0S7p4GTIv4BvnGwxA/sr23
RD0DFIatPhzstYX6H1/05VIew/ZeG69yj5Nw5ptsv4XtEzg2tnvk+Igj0JpP
RwdJZIFP7+vauFAnkOqZc58wzYawJqNy6Y3nYKDz3o6l8s/B/+CY1bVEV8hr
N1mjSMmBkeKln+y13WD/57B3VoW5ILhCujIg1gOkmzSSXW+/gGLDqzKRDp4w
9LHpYoh7HvA0/Fe0dusluF4rJVekXgC2v92l/9X0haLiTC/plCLY+5BjdGD0
Ktwo3Ldnk/8rGM6eNFSRDATL/An5fbbFML6zmnpqdxCMPdOvD5B4DdAr97v1
fTAIH+iNIkzLwHVml9Rx9XDw2lcwfyW3DMzFv4UxEyLg+56bTgLyb8Cjz9bu
KzMSMneqGypQyoFBfWXqeeNf2GZ6ceBQYQVcePDY9H1BDDw1Nj/YpfQWbO74
Td2K+A9Et0q+Pnf7LXx3/8dzrRMHugxLYoLdK+FITERvoWIs+Gxm4Ev1apCm
gHbjxwTIXsfhSKW8g0PqIlUDA8nwtazKe1LyPXgt6ONd3/vAYz1zoi7qPaye
N5azEUmBA4FH1/lf/QCCtd3L+k1SgWiTK+22qwfl0aSMntdpsLLqs/uhyAbY
+dyww044E9SiXPuM3jfAZHeQ0qq3mWBky39Ene8TSLfOFqdfegKnx/WA6f8J
drgl2qj1P4WXMon8L10aoUQo74LZ8DM47OWQKLW3GVwt51vb+HLhf8bzy/lD
m4FvRmVyiWsuBAhyrk1WNkNu7RHnJa258DC1yqnOsAU+ztcsuD16ATMfVTb6
q3+GVd3sTc+t8yFOmVvVvfQLRJQ/yIr9UghfvvpyH71vA87h2KtymmXg9FSr
LpHWDovzO4gF5zKYDhh8FKXfDg5rpYPWpJeBuPJhh8uZ7dBNNXqpIf0GDnpq
fd4e1gHplhtm3JeVQ1+Ix7EJdif0DdvuEFioAHtFVZPonz/gVval8cvMGrA+
HresweEndLtevJzc8hGis7adUMMhSLL70ztD+wpEsedjpVYuFJvcbC2Q64KP
6zLNs/dNgsSAuvadgl4otGovuCsyAw5x5hq8WoOgWCGkelJuBpg/03QOmgxC
lIZZkpLmDNxSXH82/uAgOPNnBeXsmYEDtpZbGR6DIFXkf6AmZAZq1ZKeHnkx
CFekFYYmFmcg2Uzi1OjGIdj684zMrqFZuCn2xSJaaRjeuU0HzVbMQblUgaPN
yAhY2uU2ln2aA8Pdm2K+zo5A115X2ZBO0g5n5vYwR2Fatf+VxNwcLH7qPiux
ZhQU+j6Pa22ch0SFOx6K+0fBxybfziV5Hlyv/Q7Ryx4FdZOLBj2+C5BTzKcU
ozUGLzdsCH0cugBZqgGpCnpjYCI70uoWtwAWVeL/ZcEYHFlwdKe+WAABSd76
3B1jcL3g0GPpoQVIHJ8K9zkxBt9VtVcePrIIL/s+3KSEjkE16/LsqVUUnN25
W6Xl2xjc/DPv9F2Ogqp14mlSP8Zg51DAZysVClJ1XK4f7R2Dug8huea6FMzJ
CL1QPTYGzZFx51SsKFh3UXZ6H50LXeIvu4ajKFheXh2koMaFObnpWncWFbfa
fv/a7MmFEhEf3WEhKmaOnq8y9+GCH42S4biSinuNSyRf+HOBp5cZZKlERVMD
u9+XQrjA/1ACNptRMaBV6nZuPBfE12/K+RNAxWdieyeHi7igueViwtUZKj4K
yHC7OEPuHzb47U3hQbsj+gtf5rjQlEi38GDyYLX67e+bKARc5PmP5STGg/pV
u9O7GAQU1uRc2q3Jg4rv0XFChICt1lyrFad5sMpew5tfjQAR1sscIVce/HCy
q1VYg4CeIv9lAp48KDP/5I74RgKuyyyvmg/kwfSzsjZLdQmo7VXX6b7Hgz8q
5JryTQiw8Dgr+rSVB9eceFNJtSFAYa2Wa/p3HpzseCv23JaAqdY/7+718uCu
tnsdR08QEKsfei16ggd/bjPoTnYkoI33EeG1nBe1nh7tGHAhwCGq76OxOS9+
TY1sdbtGgEeWffiXfF5kvdp8+EIaGV+7pyarhBf1wrJSnTMIaCp0ZFx/y4uU
gyX1xx4RsKHSyW9DIy/G3uR/p/2UgLG2c+dDR3hRbs/9a2kvCHBmeR8yYNPw
+GLluZhyAiQj5/4VUaWhY4+b15a3ZH5iV+oGNtBQ2c/Kp72SACXZgG0cpGG6
W+kl4VoCejcF647a0PDUsKEPfiTAzjF6dXIUDQ295TWefiNg+aDoEc840sGu
z+ntBJS6cji779EwMqBop3UHAdI+cctmn9BQbaqsdqSTzD8qiWpRQ8PdN3TX
//hJQNgKWUPljzTcvl4oUaiPgC2J9y8vttDw+RfaRoN+AuIfPhh/3ENDM1mi
JegXAValj3/SKHQEN7ZB+wgBDDM1uW8MOua7CIn0jRKQ9+7pseyldPRcSbbJ
GAGin7M/266iY5JEQ0cfQcCn4fyaPB06av7K0EubIuDqBV1GuAEd4y7nT4b8
JkBzpnDrSRM6Rkq4TTlNExBJKyladoCOFZ78DStmCdi9quKJ0//oaJTySx7n
CfCKH8xudKcjkde3SXCBgNSVInmGPnR0MY6oayE9K2FfIhpKx6j3HhFWlHFQ
vB3yxi+KjhM9rOJl1HHYL55d+SuOjt0pXK83pDNEKfWlGXR8u98tRYJ3HJqi
1zaue0bH6G2uEoWkF4X3fubk01GsP1jeijYOlkKJ389W0tHh9A/BAPo40AT1
x1b00DHUNudKDHMcNMJPTlwbpOPA8r5FAb5xsFkSOj1C0PHuZpn1V0g/Z32l
vKUyMC819/4B/nHoCKHSNfgZuKBwfyiXND+/Mn/CcgZq38gdFWKNwwmml9B5
GQZ26XmrviIddj1JrE2Rgd5HPjjzC4xDPr1q5TZ1Bm6Z8HPZT7orcGT1c20G
7mad0oshLUgTl1ttwMBKvYP1DaT1rhko3jBhoEHRGk3WknFw5HFUGd9Jrj+Y
Ym9AOjIgTP2YBQNVbV+ccib9ipK7oeYIA3XzNTGGdL/fNx0tewberpng5pMW
WeTZknSagR982q60kDa8ogKs8wy016keGCV9Zn6/sYcXA/2aYrVpS8eB43Np
W6cfA5MfajiKkC77c2/nzmAyvtcF79Wkhy5X782LIPefM/OWI71idtRClsPA
ONnIf/7a5JKEddhdBrrc3Gz8d73LtOHR36kMNKEoC/2NF+956oR9JgOFtXc1
8ZKunAp3+JDDQFnNiFt/z8P1eOG0uYiBHXvaTP+eV2qy7WzKGwbe1WHP/s3H
3J12XrCWgWe+Wmf9zffC+DqPSw0M/Hneyeks6UQ3i0s9rQwUvGimBKRruZd9
93YyUPluL3cJ6UnX+wGFfWS8FoPqZvK+14zVBLFHGdhktvVpHOldLtyQyCny
PMaDadakPUdWRPyZZ2Dubs0XwqTrhv7hNCxhosExH2kv8n3POt+K1xdlorGC
l588afZgXmL6Kiamui5Qa8l68Rmgp/uqMFHYPNWTj3SGk9rjfk0mZliXu94j
662x72CWhS4Tiwnn2xtJq/Sm5CubM1Fgp8OlnWS9Oioueyi2l4kapxXvtTLG
4d6py/FUSya2/Hsh0Y60eN8+3y8nmcgtvbbuH7Leqf3zW0P8mEidcn+PZH/o
K53W8rjOxNMh1yYyecbholMT2y6ciZozrUwx0kP9j/h0E5g4tcF4tpXsx9YB
q7r+PCZqDadYaJD9KqJS/rqpmInT8RdW+ZD9veeMenZpBRNNv7h0lc8RUPGL
FhP7iYmz64Y8t/0hIGsw+7D5CBPlxBlMGXJeXB8W+JnO5kOhaN5+IS4BZWqe
LdGqfHjay6dempxHc//rqvLbyIeEqmXHWnJeuY0UPLIy4sMyo+0+6sME2I46
ujJt+XAPnxBFcIAALe7rP6di+PBKt9vxFeT8dNFcN3wggQ/XO6sO95Pz9dF5
TofhfT7MfPiz9gU5f9cQZ8vEn/Hh4mSIvwk5nwXGVwZXvuNDizCWlE4LAV0T
F4QVefmxzkFt39l3BMSpB71LY/FjqoJyVE8NAfucOIFrhflRr3trlnU1ASXf
CqaUZPlRV789WIv8XsS/mf+6DvjxnO5ywaISAg5EBqdoevPjQEn/dkY2me+6
BC2DcX40mL1smxlFzkfHzOHiWX5MNiYs0yIJUE8qTjPkYaH1S3rMnQgC7gh3
rkAhFqqPCfT63iTXzyjMb13PwuZDzSaiVwnQqHr61tyZhXrTtyqjXAm4Z//G
8mA3CyHRKmZ4BwHaruFj2b9Y6J6t3hlgTn7PfK1vLiNYWNmoPyVsRsBk7Ehx
LUUAWx1UwtcZEbCjXpJtJC2A8tUORTqbCJjYcmFc7bAA7pryK82XI8BcTCGS
WS+AzZcfhVz6zQVuVVBNYeESTPgS3nk/lgscTsy+uLIluGyLgXP+f1zQc0z5
7Fm9BJczlT7WRHEhkKfsp1bLEpSBRc3+MPL/xmCOmsVdgt7pLzkCAVzQf+6m
l6K0FBfTjH+NOHEh+M7xx6GcpWj62qx80yYurD6vG37UTRA5ro6C++rGIP2V
9urYtcvx+CfVOavMUXjSZXZHhiGE3smvnrYXDIPOZonl+FsIC28kSp8PGoQQ
frmEuW5h/DVaceTuwQGomUutaykVQQiE/Rd390GYTN/U9meiKGXCVTqv9BP0
HZKrvt4Sw4WusjvhW7ohT4GTxXQWR7YBN9TT5QfkiO4I+2AtgR0PcmuSN36H
u4oXhbJ1VuCInatoMk8bsJzsQtXWrsSU/oRJl4+tYMQOljITkUSUztyUzW0G
Rxrb0mdUEv2u5L/n+DfCEpGrgTs7VmH9+utq6yUbINnYymZzsRSekhJ3WlSp
g8XRU9vLbq/GhrNVYq7xtdD5Tlu1O1AaPTO/X93CroKsGp98OXsZ7Jz/HRZi
VgH+3mUJ80prMKtngKkRVAZrUijPpmPXYITKy3O0gBJ4wNdeX8aQxY7+xMb6
qEIYpK8889lXFo20l7j0NeWBkui/rX+GZJEtqJewoyoHFAudys46yqF/UUqS
6c9nwJ/Y/uLxNzkMLLA69L4nE7qjIq7MbJdHj/2Nh8yGM+CKTFJZdJk8Ulpl
0no3PoDlxYOt+poKWDbJu7R6430Ijm3+k5OogL2tn1s6didBqYBMnKcYG4dL
V108ExIPo7dSWTsC2XhTpPGXej4HzNpsujZfZ2NwAWvqWDoHEpVECtfeYOOu
Ij3PuNsc2FUWcJoexkZRi+YyNS8OZBDHqkuj2aguTFR80uWA/aGV1zelsHHZ
PqEpvtf/QZNkBJX9ho2sUOkDsx9jYN0/pl9EKtiY8Wto6OybGLiaM/eMp5KN
nBU1OgM5MaCxy/lEZw0bbXZmvV7gxEC4r/nrhAY2WnxhLd6xjQGzTh5f4R9s
dEu9Sk8eioa7qoUHqd1s/F+tf/XjjmiY8DqvOtbDxpJWybbXH6PhvlDntw/9
bEzl/m7nfRENi1uL9ULG2Lj/bcejWd9osLzlLuxFkPdhqr5/r2s0PP227tep
CTamhEpIPrGPhqPu8XEm02wUHCfmrm2LhpzS/ec3zpL7q28KzOtGA2sp/3a5
OTYurWIq+qlGg93h0jVCC2z8k1VhxpKJhoIHntOLi2z0OyPjlCgUDf8HVwed
Sw==
          "]]}, Annotation[#, "Charting`Private`Tag$790691#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"(k/T\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\\!\\(\\*SubscriptBox[\\(f\\), \\(p\\)]\\)\"", HoldForm], 
         TraditionalForm], None}, {
        FormBox[
         TagBox["\"k/T\"", HoldForm], TraditionalForm], None}}, FrameStyle -> 
     Directive[
       GrayLevel[0], 
       Thickness[Large]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, LabelStyle -> 22, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Distribution for \\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\): \
6.2302 eV. Dist. i = 1\"", TraditionalForm], 
     PlotRange -> {{0, 11}, {-1.47491010206255*^-8, 1.2222876523997428`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Numerical solution\"", "\"fit in second interpolation\"", 
       "\"M-B distribution\"", "\"B-E distribution\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.272] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 22, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "22"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.930910450825101*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"7c7e6de3-426c-478b-92df-8d16a2fd7442"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.8 Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6409d7e7-cd43-4560-a315-17f4f431b987"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 135, 3, 35, "Input",ExpressionUUID->"56a84136-541d-4210-83c4-3de1836c0965"],
Cell[CellGroupData[{
Cell[718, 27, 172, 3, 54, "Section",ExpressionUUID->"2229c87f-ba2c-4ed7-b5f4-70daf5f3ab42"],
Cell[CellGroupData[{
Cell[915, 34, 182, 3, 35, "Input",ExpressionUUID->"6d2c47ea-f9fe-434f-ba6d-b2a076a34ffb"],
Cell[1100, 39, 359, 4, 27, "Output",ExpressionUUID->"4657ab8e-856c-4231-b77f-5322213762b6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1508, 49, 176, 3, 54, "Section",ExpressionUUID->"dc862dc5-cf49-43dc-bc8d-7c9d4cbdf114"],
Cell[1687, 54, 1773, 49, 84, "Input",ExpressionUUID->"c469e39a-1b56-4df0-ac5d-b45d17afcb82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3497, 108, 169, 3, 54, "Section",ExpressionUUID->"eb90caa9-b5d3-402c-b476-5444cfeb6c16"],
Cell[3669, 113, 473, 9, 46, "Text",ExpressionUUID->"89dcb98e-9c4c-4f00-9d24-1756ea964750"],
Cell[4145, 124, 326, 8, 24, "Input",ExpressionUUID->"a3396a27-e660-4f44-a4d2-dce29c91e684"],
Cell[CellGroupData[{
Cell[4496, 136, 7477, 197, 583, "Input",ExpressionUUID->"8bf03186-be2a-46c8-a342-d2de5e874be2"],
Cell[CellGroupData[{
Cell[11998, 337, 458, 10, 20, "Print",ExpressionUUID->"e431a6c1-49cf-4a08-838f-912ad13d1d8c"],
Cell[12459, 349, 8730, 145, 131, "Print",ExpressionUUID->"a682aabf-c028-461d-bcb8-5984c5f954ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21250, 501, 193, 5, 54, "Section",ExpressionUUID->"6b9cbc9e-ea54-4aff-874b-5e7395fae6e7"],
Cell[21446, 508, 535, 10, 46, "Text",ExpressionUUID->"922e5681-4a24-476e-adab-3f18a5fb7ce1"],
Cell[21984, 520, 5347, 160, 270, "Input",ExpressionUUID->"ee5ec161-0e64-42ec-ab8c-97b48fe85724"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27368, 685, 189, 3, 54, "Section",ExpressionUUID->"d6d0adda-f88f-4edd-b7ac-a7863c8fa937"],
Cell[CellGroupData[{
Cell[27582, 692, 1181, 30, 50, "Input",ExpressionUUID->"28db353e-7bc8-4f58-bb6d-12dbdf74b6f4"],
Cell[28766, 724, 22339, 407, 197, "Output",ExpressionUUID->"1752d639-3cb7-422d-8cc0-734cfb78fdc2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[51154, 1137, 207, 5, 44, "Section",ExpressionUUID->"95be9634-9607-4926-a602-e022fea3e718"],
Cell[CellGroupData[{
Cell[51386, 1146, 6196, 164, 480, "Input",ExpressionUUID->"e21fce0b-da51-48f7-b1f0-22d29b320c2f"],
Cell[57585, 1312, 485, 12, 18, "Print",ExpressionUUID->"fa8ac606-5d04-41c4-9a30-773685e6e5ff"],
Cell[58073, 1326, 21236, 404, 374, "Output",ExpressionUUID->"7a8a3330-e0c9-48d4-9745-baef6c55d859"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79358, 1736, 199, 3, 54, "Section",ExpressionUUID->"21303c5f-d193-407c-955a-12d9126e2bb8"],
Cell[79560, 1741, 490, 9, 46, "Text",ExpressionUUID->"23bf8cdb-fc01-4cf4-b648-ad5ead518a9d"],
Cell[CellGroupData[{
Cell[80075, 1754, 6651, 163, 584, "Input",ExpressionUUID->"1501de10-1784-4e69-b292-135085f863dd"],
Cell[CellGroupData[{
Cell[86751, 1921, 323, 8, 18, "Print",ExpressionUUID->"729d6318-f30d-467b-884e-2c4e0ad46e50"],
Cell[87077, 1931, 321, 8, 18, "Print",ExpressionUUID->"ef2dc93e-f182-4410-9917-9051c84d3c40"],
Cell[87401, 1941, 321, 8, 18, "Print",ExpressionUUID->"66b57398-d507-4f3c-8e00-f59508fbafac"],
Cell[87725, 1951, 323, 8, 18, "Print",ExpressionUUID->"7769c325-7d5e-4e60-bf7e-48a4c1a6237b"],
Cell[88051, 1961, 321, 8, 18, "Print",ExpressionUUID->"0424ea35-d7b0-4a5b-8c78-56493e693f60"],
Cell[88375, 1971, 321, 8, 18, "Print",ExpressionUUID->"5a259909-e88a-4ebc-83a7-173024de9472"],
Cell[88699, 1981, 323, 8, 18, "Print",ExpressionUUID->"cb1f6e89-776b-47e2-8523-d87ed323776a"],
Cell[89025, 1991, 323, 8, 18, "Print",ExpressionUUID->"75bc1ddd-af34-4851-90b8-20f1af8e506a"],
Cell[89351, 2001, 321, 8, 18, "Print",ExpressionUUID->"1721039b-4ba1-4b97-bcfe-eb906a1bbdbf"],
Cell[89675, 2011, 323, 8, 18, "Print",ExpressionUUID->"e81ff3d7-7332-483e-bc21-03699a86f290"],
Cell[90001, 2021, 323, 8, 18, "Print",ExpressionUUID->"f3034432-21ea-4a6b-bf74-aa788804f5c9"],
Cell[90327, 2031, 325, 8, 18, "Print",ExpressionUUID->"651d63f8-3efe-4ea3-a827-08e76bc7da18"],
Cell[90655, 2041, 323, 8, 18, "Print",ExpressionUUID->"59185567-1480-4c4d-ae39-d707e44614ba"],
Cell[90981, 2051, 322, 8, 18, "Print",ExpressionUUID->"aca37b4d-ad9e-4b09-a981-d4ff4d61c1b9"],
Cell[91306, 2061, 325, 8, 18, "Print",ExpressionUUID->"159cbac8-0014-4e9f-9e08-551235d35830"],
Cell[91634, 2071, 325, 8, 18, "Print",ExpressionUUID->"29036984-7186-4927-95bd-675687321cf7"],
Cell[91962, 2081, 323, 8, 18, "Print",ExpressionUUID->"797d2818-5e9b-447b-8df8-6e2bba5a3e61"],
Cell[92288, 2091, 325, 8, 18, "Print",ExpressionUUID->"87934578-3438-441a-ae26-dac0bda1d23b"],
Cell[92616, 2101, 323, 8, 18, "Print",ExpressionUUID->"880ef805-ac45-49ad-b747-93d32db03079"],
Cell[92942, 2111, 323, 8, 18, "Print",ExpressionUUID->"08bf25ba-c85f-409f-907d-bc0729d1187a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93326, 2126, 204, 3, 54, "Section",ExpressionUUID->"4c42e138-ab6b-47fa-a0ce-31f55ca210b7"],
Cell[CellGroupData[{
Cell[93555, 2133, 3225, 84, 282, "Input",ExpressionUUID->"5759a6be-2494-45f6-9097-b7cabbc52be7"],
Cell[96783, 2219, 7917, 170, 369, "Output",ExpressionUUID->"ac821f54-c92b-4486-b5c9-d2bb67be23bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104737, 2394, 2415, 64, 238, "Input",ExpressionUUID->"902220de-c51f-4672-adad-ef8f380613fb"],
Cell[107155, 2460, 7986, 171, 368, "Output",ExpressionUUID->"aa758c96-a78a-494c-926f-459aa63a6940"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115178, 2636, 3364, 89, 267, "Input",ExpressionUUID->"e4c12c75-a9f7-4cda-abef-1fe3a21d105c"],
Cell[118545, 2727, 8030, 173, 377, "Output",ExpressionUUID->"1ffa5707-ee1f-4304-b02a-538b91f0737c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126612, 2905, 3332, 86, 282, "Input",ExpressionUUID->"a5f9e08b-45ea-434e-be7c-0087c85fbad4"],
Cell[129947, 2993, 8038, 175, 378, "Output",ExpressionUUID->"c44ea546-b0bf-4641-acc6-34918f741a71"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138034, 3174, 198, 3, 54, "Section",ExpressionUUID->"6c530a2c-3d68-4838-a37f-39dda487ea7e"],
Cell[CellGroupData[{
Cell[138257, 3181, 4340, 116, 412, "Input",ExpressionUUID->"bba6867f-6796-4b13-a2da-d9c0e5e48f9e"],
Cell[142600, 3299, 32524, 553, 40, "Output",ExpressionUUID->"3fcc009a-c5cc-4bea-8b58-127a2bec3246"],
Cell[175127, 3854, 1207, 29, 26, "Output",ExpressionUUID->"590fde7a-5d3e-447d-b40e-92d8a9ff2201"],
Cell[176337, 3885, 13308, 263, 369, "Output",ExpressionUUID->"2131c341-19e8-4a02-858c-b4b04a324e13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189682, 4153, 4307, 114, 412, "Input",ExpressionUUID->"92507a2e-39ce-4a6c-8769-33c3e487070b"],
Cell[193992, 4269, 30207, 515, 40, "Output",ExpressionUUID->"20f65e14-0e42-4905-b33f-9c4f9b42a9d3"],
Cell[224202, 4786, 1084, 26, 26, "Output",ExpressionUUID->"1ca3359e-1e36-4a0c-933d-734e92ca5afe"],
Cell[225289, 4814, 18043, 340, 377, "Output",ExpressionUUID->"2cc7ea02-0776-404e-b8d9-8b287acb0ee6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243369, 5159, 4388, 115, 412, "Input",ExpressionUUID->"82c8a92a-db66-453f-b7bb-aeb405175e64"],
Cell[247760, 5276, 32032, 542, 40, "Output",ExpressionUUID->"98e861da-b711-42c6-b902-65c023d674dd"],
Cell[279795, 5820, 1164, 28, 26, "Output",ExpressionUUID->"e21d84f7-1615-4cd4-84ae-5053f778341b"],
Cell[280962, 5850, 221, 4, 25, "Output",ExpressionUUID->"190b994c-a1d7-4c6e-98c4-018c6c09f4b9"],
Cell[281186, 5856, 16278, 312, 378, "Output",ExpressionUUID->"228c538c-2eff-4939-8699-62247ebaa088"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[297513, 6174, 167, 3, 54, "Section",ExpressionUUID->"777acf2b-4021-49ee-bd85-d54c174f01af"],
Cell[CellGroupData[{
Cell[297705, 6181, 5719, 147, 459, "Input",ExpressionUUID->"02914259-f6a8-4d7a-b7db-7091a102bc7a"],
Cell[303427, 6330, 278, 7, 25, "Output",ExpressionUUID->"0013a56f-5e26-40c8-ba74-848a45d6845d"],
Cell[CellGroupData[{
Cell[303730, 6341, 403, 9, 18, "Print",ExpressionUUID->"99016cda-12cb-4cb1-bac9-4668301d9ffb"],
Cell[304136, 6352, 619, 13, 20, "Print",ExpressionUUID->"375a2511-85d9-4c7c-9251-904494785f61"],
Cell[304758, 6367, 414, 9, 18, "Print",ExpressionUUID->"402cd21a-f6ba-45ed-8c8d-75a957a13d88"]
}, Open  ]],
Cell[305187, 6379, 21387, 408, 399, "Output",ExpressionUUID->"e8425bd8-1143-4846-92a9-dce24d7efa4e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[326623, 6793, 177, 3, 54, "Section",ExpressionUUID->"6077d51f-944b-40ea-b33f-cc3b6e4191d0"],
Cell[CellGroupData[{
Cell[326825, 6800, 9323, 242, 978, "Input",ExpressionUUID->"c2c2be0c-3775-4e05-816d-0e65a97d4aa9"],
Cell[336151, 7044, 460, 10, 23, "Message",ExpressionUUID->"bf1fda13-9461-46f1-aff8-8a3c7840960f"],
Cell[336614, 7056, 465, 12, 18, "Print",ExpressionUUID->"2b69e74a-7e55-4741-be35-73796e501c96"],
Cell[337082, 7070, 254, 7, 25, "Output",ExpressionUUID->"e25b8615-524e-4a61-a9e9-2b116107cb41"],
Cell[337339, 7079, 172, 3, 25, "Output",ExpressionUUID->"bc3efb51-c2c3-413a-89ff-d2f0b38f32c1"],
Cell[337514, 7084, 701, 14, 23, "Message",ExpressionUUID->"48c6e652-2971-48d8-8cbd-bdc86ab86806"],
Cell[338218, 7100, 701, 14, 23, "Message",ExpressionUUID->"94a20544-a4f1-4b75-9278-c9a1a1092e1c"],
Cell[338922, 7116, 222, 5, 25, "Output",ExpressionUUID->"fccd19f5-9683-4095-a2f7-da88866f65ad"],
Cell[339147, 7123, 735, 14, 35, "Message",ExpressionUUID->"bc9d4885-b42c-4a85-ac7e-3d9ad9f9b313"],
Cell[339885, 7139, 735, 14, 35, "Message",ExpressionUUID->"2d6afa22-02be-4f78-b3cd-d8de111e2f43"],
Cell[340623, 7155, 222, 5, 25, "Output",ExpressionUUID->"6eac6ba4-9643-406b-9546-c8952576e13c"],
Cell[340848, 7162, 222, 5, 25, "Output",ExpressionUUID->"c12b43f3-11fd-4cdc-b498-48d8b9c85f15"],
Cell[341073, 7169, 224, 5, 25, "Output",ExpressionUUID->"923e352b-8fd5-48f2-a0a7-4c7911250e93"],
Cell[341300, 7176, 170, 3, 25, "Output",ExpressionUUID->"e3dc1870-8f89-4586-9a9c-6a91e92ec58f"],
Cell[341473, 7181, 170, 3, 25, "Output",ExpressionUUID->"cfadc6f1-e063-4984-9959-c8629d690b4a"],
Cell[341646, 7186, 38120, 708, 399, "Output",ExpressionUUID->"7c7e6de3-426c-478b-92df-8d16a2fd7442"]
}, Open  ]]
}, Open  ]]
}
]
*)

